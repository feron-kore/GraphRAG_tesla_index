{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "February 6, 2023 12:45 AM GMT\nMORGAN STANLEY & CO. LLC\n\nApple, Inc. | North America\n\nErik W Woodring\n\n10-Q Analysis: B/S Inventory\nSpikes Q/Q While App Store\n(and Music) Return as Services\nDrivers\nStock Rating\n\nOverweight\n\nIndustry View\n\nIn-Line\n\nPrice Target\n\n$175.00\n\nApple's B/S inv increased Q/Q at the strongest rate in a\ndecade, reflecting the late Dec iPhone 14 Pro/Pro Max ramp\nand strategic component pre-purchases. Separately, the App\nStore returned as a top 2 Services driver, while Music was a\ntop 3 Services driver for the first time in 6+ years.\nBalance sheet inventory spike reflects late December production ramp and\nstrategic component purchases. While Apple's vendor non-trade receivables (an\nindication of inventory sitting at contract manufacturers) balance fell 7% Q/Q in\nthe December quarter, B/S inventory spiked 38% sequentially, the strongest Q/Q\nB/S inventory growth in the December quarter in a decade (Exhibit 1). We believe\nthis reflects two dynamics. First, given the late December ramp of iPhone 14\nPro/Pro Max production in Zhengzhou, China, we believe Apple was likely holding\nan elevated level of finished goods inventory ending the quarter, which we'd\nexpect to get worked down in the March quarter. Second, and perhaps more\nimportantly, we believe Apple was in the market in the December quarter\nstrategically pre-purchasing commonly used components (i.e. more commoditized\nsupplies like NAND/DRAM) at favorable prices. In response to a question about\nApple's 43.5-44.5% gross margin guidance on the Dec Q earnings call, CFO Luca\nMaestri noted \"we need to find offsets and more to the negative FX in order to\nbe able to provide this kind of guidance. And so, obviously, components are a big\npart of that\". With NAND and DRAM prices down ~25% over the last 8 months\nand ~50% over the last year, we believe commodity costs can remain a\nmeaningful gross margin tailwind for Apple into F2H23 and likely FY24.\nStructurally lower D&A remains gross margins tailwind. D&A as a percentage of\nApple's revenue continues to trend lower than historical levels, which we believe\nis a sustainable tailwind to gross margins (barring a notable ramp in capex or\nlarge acquisition). In the December Q, Apple's D&A expense of $2.9B was just\n2.5% of revenue, down from a historical average of 3.3% (2013-2021; Exhibit 2),\nwhich we estimate equates to a 10bps Y/Y tailwind to gross margins this quarter\n(Exhibit 3). While this is down from an average 110bps Y/Y tailwind to gross\nmargins in FY22, we expect the gross margin tailwind from lower D&A to lessen\n\nEQUITY ANALYST\nErik.Woodring@morganstanley.com\n\n+1 212 296-8083\n\nSabrina E Hao\nRESEARCH ASSOCIATE\nSabrina.Hao@morganstanley.com\n\n+1 212 761-3793\n\nMaya C Neuman\nRESEARCH ASSOCIATE\nMaya.Neuman@morganstanley.com\n\n+1 212 761-1946\n\nApple, Inc. ( AAPL.O, AAPL US ) Top Pick\nIT Hardware / United States of America\nStock Rating\nIndustry View\nPrice target\nShr price, close (Feb 3, 2023)\nMkt cap, curr (mm)\n52-Week Range\n\nOverweight\nIn-Line\n$175.00\n$154.50\n$2,457,354\n$179.61-124.17\n\nFiscal Year Ending\n\n09/22 09/23e 09/24e 09/25e\n\nModelWare EPS ($)\nPrior ModelWare EPS\n($)\nP/E\nEPS ($)\u00a7\nDiv yld (%)\n\n6.11\n-\n\n6.02\n-\n\n6.85\n-\n\n7.35\n-\n\n22.6\n6.09\n0.7\n\n25.7\n6.14\n0.6\n\n22.6\n6.68\n0.7\n\n21.0\n7.14\n0.7\n\nUnless otherwise noted, all metrics are based on Morgan Stanley ModelWare\nframework\n\u00a7 = Consensus data is provided by Refinitiv Estimates\ne = Morgan Stanley Research estimates\n\nQUARTERLY MODELWARE EPS ($)\n2023e\n2023e\nQuarter\n2022\nPrior Current\nQ1\n2.10\n1.88a\nQ2\n1.52\n1.40\nQ3\n1.20\n1.21\nQ4\n1.29\n1.52\n\n2024e\nPrior\n-\n\n2024e\nCurrent\n2.31\n1.58\n1.36\n1.59\n\ne = Morgan Stanley Research estimates, a = Actual Company reported data\n\nMorgan Stanley does and seeks to do business with\ncompanies covered in Morgan Stanley Research. As a\nresult, investors should be aware that the firm may have a\nconflict of interest that could affect the objectivity of\nMorgan Stanley Research. Investors should consider\nMorgan Stanley Research as only a single factor in making\ntheir investment decision.\nFor analyst certification and other important disclosures,\nrefer to the Disclosure Section, located at the end of this\nreport.\n\n1\n\n\fas Apple reaches a more \"steady-state\" level of"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "business with\ncompanies covered in Morgan Stanley Research. As a\nresult, investors should be aware that the firm may have a\nconflict of interest that could affect the objectivity of\nMorgan Stanley Research. Investors should consider\nMorgan Stanley Research as only a single factor in making\ntheir investment decision.\nFor analyst certification and other important disclosures,\nrefer to the Disclosure Section, located at the end of this\nreport.\n\n1\n\n\fas Apple reaches a more \"steady-state\" level of D&A expense, Importantly, this\nmakes Apple's December quarter gross margin performance (43%) and March\nquarter gross margin guidance (43.5-44.5%) more impressive in the face of\nsignificant FX headwinds (300 bps Y/Y in the Dec Q, 270 bps Y/Y in the March Q),\na result of 1) positive segment mix shift, 2) strong iPhone pricing (up 8% Y/Y in the\nDec Q), 3) commodity cost tailwinds and supplier price re-negotiations, 4) logistics\nbecoming a Y/Y tailwind (although prices are still \"significantly\" above pre-COVID\nlevels), and 5) Apple's continued efforts to in-source key technology such as\nprocessors, sensors, displays, batteries, and cameras. To this last point, Apple's\nR&D expense in the Dec Q reached a near-record of 6.6% of revenue vs. the 3.9%\nhistorical Dec Q average (Exhibit 4) \u2013 while this was driven by R&D expense\ncoming in ~$400M more than we had forecasted, we believe this was also a\nresult of Apple's depressed Dec Q revenue base.\n\nApp Store a top 2 Services revenue driver once again, and Music a top 3 Services\ndriver for the first time. Apple's 10-Q highlights that the three largest drivers of\nServices net sales growth in the Dec Q were: 1) cloud services, 2) the App Store,\nand 3) music. Importantly, these disclosures confirm that the App Store did\nreturn to growth in the quarter after 2 quarters of flat Y/Y App Store\nperformance. We estimate App Store net revenue grew 7% Y/Y in the December\nquarter, largely a function of Apple's 14 week quarter, as the App Store would\nhave declined 1% Y/Y (MSe) if not for the 14th week. We estimate that in January,\nthe App Store continued its streak of net revenue growth (growing ~1% Y/Y)\nafter 5 consecutive months of declines last summer/fall (Exhibit 5). Additionally,\nApple Music's inclusion as a top 3 Services driver is notable as the service hasn't\nbeen a top 3 Services driver in 6+ years, which we believe partially reflects the\nearly impact of the ~10% average price increase put into effect in late October.\n\n2\n\n\fExhibits\nExhibit 1: Apple's B/S inventory was up 16% Y/Y and 38% Q/Q in the Dec Q.\nBalance Sheet Inventory ($B)\n\nY/Y Growth (RHS)\n\n$8\n\n90%\n\n$7\n$6\n5.0\n\n$5\n$4\n\n4.9\n\n4.0 13%\n3.4\n\n4.1 4.1\n4%\n3.3\n\n$3\n\n6.8\n\n-36%\n-43%\n\n70%\n\n5.9\n\n50%\n\n5.5 5.4\n4.9\n18%\n\n30%\n16%\n\n5% 5%\n\n-1%\n\n10%\n-10%\n\n-18%\n-32%\n\n-19%\n\n$2\n\n57%\n5.2\n5.0 5.2\n30%\n4.0 4.1 21%\n19%\n\n6.6\n62%\n\n-25%\n\n-30%\n\nDec-22\n\nSep-22\n\nJun-22\n\nMar-22\n\nDec-21\n\nSep-21\n\nJun-21\n\nMar-21\n\nDec-20\n\nSep-20\n\nJun-20\n\nMar-20\n\nDec-19\n\nSep-19\n\nJun-19\n\n-70%\nMar-19\n\n$0\nDec-18\n\n-50%\nSep-18\n\n$1\n\nSource: Company Data, Morgan Stanley Research\n\nExhibit 2: In the Dec Q, Apple's D&A was 2.5% of revenue, down from an average of 3.3%\nhistorically.\n\nApple Depreciation & Amortization as % of Revenue\nD&A as % Revenue\n\nHistorical Average (2013-2021)\n\n4.5%\n4.0%\n\n3.7%\n\n3.5%\n\n3.9%\n\n4.0%\n\n3.8%\n\n3.5%\n3.1%\n\n3.1%\n\n3.0%\n\n2.4%\n\n2.5%\n\n2.5%\n2.2%\n\n2.0%\n1.5%\n1.0%\n0.5%\n0.0%\nDec-13\n\nDec-14\n\nDec-15\n\nDec-16\n\nDec-17\n\nDec-18\n\nDec-19\n\nDec-20\n\nDec-21\n\nDec-22\n\nSource: Company Data, Morgan Stanley Research\n\n3\n\n\fExhibit 3: We estimate the lower run-rate of D&A as a % of revenue vs. the historical 3 year average\nresulted in a 10bps Y/Y tailwind to Dec Q gross margins.\n\nApple Gross Margin Impact from D&A\nReported Gross Margin (excluding D&A benefit)\n45.0%\n\n42.5%\n40.0%\n\n39.8%\n\n1.7%\n\n43.3%\n1.5%\n\n42.2%\n\nBenefit"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "3\n\n\fExhibit 3: We estimate the lower run-rate of D&A as a % of revenue vs. the historical 3 year average\nresulted in a 10bps Y/Y tailwind to Dec Q gross margins.\n\nApple Gross Margin Impact from D&A\nReported Gross Margin (excluding D&A benefit)\n45.0%\n\n42.5%\n40.0%\n\n39.8%\n\n1.7%\n\n43.3%\n1.5%\n\n42.2%\n\nBenefit from Lower D&A\n\n43.8%\n\n43.7%\n\n43.3%\n\n1.0%\n\n1.6%\n\n1.1%\n\n0.9%\n\n42.3%\n\n43.0%\n0.1%\n\n1.1%\n\n1.0%\n\n35.0%\n\n30.0%\n\n25.0%\nDec-20\n\nMar-21\n\nJun-21\n\nSep-21\n\nDec-21\n\nMar-22\n\nJun-22\n\nSep-22\n\nDec-22\n\nSource: Company Data, Morgan Stanley Research\n\nExhibit 4: R&D as a % of revenue rose to 6.6% of revenue in the Dec Q, showing the impact of 1)\nApple accelerating in-house technology development and 2) a depressed December quarter\nrevenue base.\n\nApple R&D as % of Revenue\nR&D as % of Revenue\n\nHistorical Average (2013-2021)\n\n6.6%\n\n7.0%\n6.0%\n\n4.6%\n\n5.0%\n4.0%\n\n3.7%\n\n3.9%\n\nDec-16\n\nDec-17\n\n4.8%\n\n5.1%\n4.6%\n\n3.2%\n3.0%\n\n2.3%\n\n2.5%\n\n2.0%\n1.0%\n0.0%\nDec-13\n\nDec-14\n\nDec-15\n\nDec-18\n\nDec-19\n\nDec-20\n\nDec-21\n\nDec-22\n\nSource: Company Data, Morgan Stanley Research\n\n4\n\n\fExhibit 5: App Store net revenue returned to Y/Y growth in December 2022 and January 2023 after\n5 consecutive months of Y/Y declines.\nApp Store Monthly Net Revenue & Growth\nApp Store Net Revenue ($B)\n$2.3\n15%\n12%\n2.1\n$2.1\n\nY/Y Growth (RHS)\n2.3\n\n2.2\n\n16%\n\n2.2 2.2\n2.1 2.1\n12% 12%\n12%\n2.1\n2.1\n13%\n\n2.2 2.2 2.2\n\n2.2 2.1\n2.1\n\n15%\n2.1\n\n2.0\n\n2.1\n\n2.0\n10%\n\n8%\n6%\n4%\n\n$1.9\n\n20%\n\n2.2\n\n2.2\n\n5% 6%\n2%\n\n5%\n1%\n\n-1%\n\n-2%\n\n-2%\n\n-1%\n\n1% 0.4%\n0%\n\n-4%\n\n$1.7\n\nJan-23\n\nDec-22\n\nNov-22\n\nOct-22\n\nSep-22\n\nJul-22\n\nAug-22\n\nJun-22\n\nApr-22\n\nMay-22\n\nMar-22\n\nFeb-22\n\nJan-22\n\nDec-21\n\nNov-21\n\nOct-21\n\nSep-21\n\nAug-21\n\nJul-21\n\nJun-21\n\n$1.5\n\nMay-21\n\n-5%\n-10%\n\nSource: Sensor Tower, Morgan Stanley Research\n\n5\n\n\fH\n\nRisk Reward \u2013 Apple, Inc. (AAPL.O)\n\nTop Pick\n\nStability and Strength of Ecosystem Underappreciated by Investors\nPRICE TARGET $175.00\n\nOVERWEIGHT THESIS\n\nOur $175 PT is sum-of-the-parts driven. We apply a 6.3x EV/Sales multiple on Apple's Product\nbusiness (iPhone, iPad, Mac, and Wearables) and a 6.7x EV/Sales multiple on Apple's Services\nbusiness, in-line with their respective peer groups. We also assign ~$160B of EV to Apple's\nFuture Products (AR/VR, Autos, etc.), which is driven by $21.5B of revenue and an 7.5x target\nEV/Sales multiple. This implies a 25.5x target P/E on FY24 EPS of $6.85.\n\nApple has the world's most valuable\ntechnology platform with 2.0B active\ndevices. While Apple is exposed to a\npotential slowing of consumer demand, we\nbelieve it is better positioned vs. other\nconsumer hardware names with its sticky\nuser base & history of investment through\ncycles. Tailwinds to drive a re-rating over the\nnext year include 1) new product launches\n(including rumored AR/VR launch), 2) PC\nmarket share gains on the back of M1 Macs,\n3) increasing monetization of high margin\nservices, and 4) strong cash returns. Longerterm investments in augmented reality,\npayments, health, autos and home can help\nsustain growth as Apple captures more of\nits users' time and wallet share.\n\n$170.88\n\nConsensus Price Target Distribution\n\n$122.00\n\n$214.00\n\nMS PT\n\nSource: Refinitiv, Morgan Stanley Research\n\nMean\n\nMorgan Stanley Estimates\n\nRISK REWARD CHART AND OPTIONS IMPLIED PROBABILITIES (12M)\nUSD\n\n320\n\n$230.00(+48.87%)\n$230.00\n(+48.87%)\n(+48.87%)\n\nProb (>230.00)~4.9%\n\nConsensus Rating Distribution\n\n240\n\n$175.00(+13.27%)\n$175.00"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "00\n\nMS PT\n\nSource: Refinitiv, Morgan Stanley Research\n\nMean\n\nMorgan Stanley Estimates\n\nRISK REWARD CHART AND OPTIONS IMPLIED PROBABILITIES (12M)\nUSD\n\n320\n\n$230.00(+48.87%)\n$230.00\n(+48.87%)\n(+48.87%)\n\nProb (>230.00)~4.9%\n\nConsensus Rating Distribution\n\n240\n\n$175.00(+13.27%)\n$175.00\n(+13.27%)\n(+13.27%)\n160\n\n$154.50\n\n80% Overweight\n18% Equal-weight\n3% Underweight\n\nProb (>175.00)~38.7%\n\nMS Rating\nSource: Refinitiv, Morgan Stanley Research\n\n80\n\n$105.00(-32.04%)\n$105.00\n(-32.04%)\n(-32.04%)\n\nProb (<105.00)~9.8%\n\nRisk Reward Themes\n0\nFEB '22\n\nKey:\n\nAUG '22\n\nFEB '23\n\nHistorical Stock Performance\n\nCurrent Stock Price\n\nDisruption:\nSecular Growth:\nNew Data Era:\n\nFEB '24\n\nPrice Target\n\nSource: Refinitiv, Morgan Stanley Research, Morgan Stanley Institutional Equities Division. The probabilities of our Bull,\nBase, and Bear case scenarios playing out were estimated with implied volatility data from the options market as of 03\nFeb, 2023. All figures are approximate risk-neutral probabilities of the stock reaching beyond the scenario price in either\nthree-months\u2019 or one-years\u2019 time. View explanation of Options Probabilities methodology here\n\nBULL CASE\n\n$230.00\n\nBASE CASE\n\n$175.00\n\nPositive\nPositive\nPositive\n\nView descriptions of Risk Rewards Themes here\n\nBEAR CASE\n\n$105.00\n\nLTV-driven; Implies 31.6x Bull FY24 EPS of\n$7.27\n\nSoTP driven; Implies 25.5x FY24 P/E (6.8x\nEV/Revs)\n\n4.7x EV/FY23e Sales; 17.6x FY24 Bear EPS\nof $5.96\n\niPhone shipments reach all-time record in\nFY23. Consumer demand remains resilient,\nand stronger than expected iPhone purchase\nintentions and mix shift to higher end\niPhone models (and capacity SKUs) drive\nstrong iPhone shipments. Total revenue\nreaches $457B in FY23, while EPS reaches\n$7.01. We shift to an lifetime value-based\nvaluation in our bull case, which gives Apple\ncredit for the shift towards subscription.\nOur $230 bull case valuation implies a 31.6x\ntarget P/E multiple.\n\nApple sees some impact from weaker\nconsumer. iPhone replacement cycles\nlengthen, Mac declines 20% Y/Y, and\nWearables/iPad decline low single digits, but\nlow double digit Services growth and iPhone\nASP growth are partial offsets, leading to\nFY23 rev -2% Y/Y. Mix towards higher\nmargin iPhones & Services and lower\nFX/inflationary headwinds leads to a mid44% FY23 GM, and $80B of share buybacks\ndrives EPS of $6.02 for FY23 or $6.85 for\nFY24. Apple starts to get credit for its\nupcoming AR/VR launch.\n\niPhone strength fails to materialize in FY23\n& consumer weakens more than expected.\nGrowth slows across the portfolio as\nconsumer discretionary income is pressured\n& WFH tailwinds fade, causing a weaker\nthan expected year of Product growth.\nWeaker consumer demand and FX\nheadwinds lead Services revenue growth to\ndecline MSD Y/Y. SOTP based bear case\nvaluation of $105 implies 17.6x FY24 bear\ncase EPS of $5.96 (vs. base case EPS of\n$6.85).\n\n6\n\n\fH\n\nRisk Reward \u2013 Apple, Inc. (AAPL.O)\nKEY EARNINGS INPUTS\nDrivers\n\n2022\n\n2023e\n\n2024e\n\n2025e\n\nTotal Revenue Growth (Y/Y) (%)\n\n7.8\n\n(1.7)\n\n9.8\n\n6.6\n\niPhone Revenue Growth (Y/Y) (%)\n\n7.0\n\n(2.5)\n\n9.7\n\n4.1\n\nServices Revenue Growth (Y/Y) (%)\n\n14.2\n\n10.3\n\n12.3\n\n13.2\n\nGross Margin (%)\n\n43.3\n\n44.0\n\n44.5\n\n44.8\n\nEPS Growth (Y/Y) (%)\n\n8.9\n\n(1.6)\n\n13.8\n\n7.3\n\nINVESTMENT DRIVERS\niPhone, Mac and iPad share gains\nGross margin upside\nFaster than expected Services growth\nShift to hardware subscription model\nExpanding product portfolio in new industries\nsuch as AR/VR, healthcare, or autos\n\nGLOBAL REVENUE EXPOSURE\nAPAC, ex Japan, Mainland\n0-10% China and India\n0-10% India\n0-10% Japan\n0-10% Latin America\n0-10% MEA\n0-10% UK\n10-20% Europe ex UK\n10-20% Mainland China\n40-50% North America\nSource: Morgan Stanley Research Estimate\nView explanation of regional hierarchies here\n\nMS ALPHA MODELS\n\n2/5\n\nBEST\n\n24 Month\nHorizon\n\n1/5\n\nMOST\n\n3 Month\nHorizon\n\nSource: Refinitiv, FactSet, Morgan Stanley Research; 1 is\nthe highest favored Quintile and 5 is the least favored\nQuintile\n\nRISKS TO PT/RATING\n\nMS ESTIMATES"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "China\n40-50% North America\nSource: Morgan Stanley Research Estimate\nView explanation of regional hierarchies here\n\nMS ALPHA MODELS\n\n2/5\n\nBEST\n\n24 Month\nHorizon\n\n1/5\n\nMOST\n\n3 Month\nHorizon\n\nSource: Refinitiv, FactSet, Morgan Stanley Research; 1 is\nthe highest favored Quintile and 5 is the least favored\nQuintile\n\nRISKS TO PT/RATING\n\nMS ESTIMATES VS. CONSENSUS\n\nRISKS TO UPSIDE\n\nFY Sep 2024e\n\nPositive est revisions from Product and/or\nServices strength\nNew product launches outperform\nexpectations\niPhone share gains from easing competitive\npressure & aggressive US carrier promotions\nShift to a hardware subscription model\nRISKS TO DOWNSIDE\nWeaker global consumer spending\nProduction shortages/China lockdowns last\nlonger\nGreater competition in key markets\nIncreased regulation, particularly around App\nStore\n\nOWNERSHIP POSITIONING\nInst. Owners, % Active\n\n55%\n\nHF Sector Long/Short Ratio\n\n2.1x\n\nHF Sector Net Exposure\n\n30%\n\n425,548\n\nSales /\nRevenue\n($, mm)\n\n400,515\n\nEBITDA\n($, mm)\n\n126,306\n\nNet income\n($, mm)\n\n92,799\n\nEPS\n($)\n\n448,569\n424,221\n140,916\n147,689\n135,795\n106,154\n111,186\n102,012\n6.85\n\n5.95\n\n7.33\n6.68\n\nMean\n\nMorgan Stanley Estimates\n\nSource: Refinitiv, Morgan Stanley Research\n\nRefinitiv; MSPB Content. Includes certain hedge fund\nexposures held with MSPB. Information may be\ninconsistent with or may not reflect broader market\ntrends. Long/Short Ratio = Long Exposure / Short\nexposure. Sector % of Total Net Exposure = (For a\nparticular sector: Long Exposure - Short Exposure) /\n(Across all sectors: Long Exposure \u2013 Short Exposure).\n\n7\n\n\fDisclosure Section\nThe information and opinions in Morgan Stanley Research were prepared by Morgan Stanley & Co. LLC, and/or Morgan Stanley C.T.V.M. S.A., and/or Morgan\nStanley Mexico, Casa de Bolsa, S.A. de C.V., and/or Morgan Stanley Canada Limited. As used in this disclosure section, \"Morgan Stanley\" includes Morgan\nStanley & Co. LLC, Morgan Stanley C.T.V.M. S.A., Morgan Stanley Mexico, Casa de Bolsa, S.A. de C.V., Morgan Stanley Canada Limited and their affiliates\nas necessary.\nFor important disclosures, stock price charts and equity rating histories regarding companies that are the subject of this report, please see the Morgan\nStanley Research Disclosure Website at www.morganstanley.com/researchdisclosures, or contact your investment representative or Morgan Stanley\nResearch at 1585 Broadway, (Attention: Research Management), New York, NY, 10036 USA.\nFor valuation methodology and risks associated with any recommendation, rating or price target referenced in this research report, please contact the Client\nSupport Team as follows: US/Canada +1 800 303-2495; Hong Kong +852 2848-5999; Latin America +1 718 754-5444 (U.S.); London +44 (0)20-7425-8169;\nSingapore +65 6834-6860; Sydney +61 (0)2-9770-1505; Tokyo +81 (0)3-6836-9000. Alternatively you may contact your investment representative or Morgan\nStanley Research at 1585 Broadway, (Attention: Research Management), New York, NY 10036 USA.\n\nAnalyst Certification\nThe following analysts hereby certify that their views about the companies and their securities discussed in this report are accurately expressed and that they\nhave not received and will not receive direct or indirect compensation in exchange for expressing specific recommendations or views in this report: Erik W\nWoodring.\n.\n\nGlobal Research Conflict Management Policy\nMorgan Stanley Research has been published in accordance with our conflict management policy, which is available at\nwww.morganstanley.com/institutional/research/conflictpolicies. A Portuguese version of the policy can be found at www.morganstanley.com.br\n\nImportant Regulatory Disclosures on Subject Companies\nThe analyst or strategist (or a household member) identified below owns the following securities (or related derivatives): Maya C Neuman - Apple,\nInc.(common or preferred stock).\nAs of December 30, 2022, Morgan Stanley beneficially owned 1% or more of a class of common equity securities of the following companies covered in\nMorgan Stanley Research: Apple, Inc., CDW Corporation, Cricut Inc, Hewlett Packard Enterprise, HP Inc., IBM, Kornit Digital Ltd., Logitech International SA,\nNCR Corp., NetApp Inc, Pure Storage Inc, Seagate Technology, Sonos Inc., Xerox Corp.\nWithin the last 12 months, Morgan Stanley managed or co-managed a public offering (or 144A offering) of securities of Apple, Inc., Dell Technologies Inc..\nWithin the last 12 months, Morgan Stanley has received compensation for investment banking services from Apple, Inc., Dell Technologies Inc., IBM,\nSeagate Technology, Snap One Holdings Corp..\nIn the next 3 months, Morgan Stanley expects to receive or intends to seek compensation for investment banking services from Apple, Inc., CDW\nCorporation, Cricut Inc, Dell Technologies Inc., GoPro Inc, Hewlett Packard Enterprise, HP Inc., IBM, Kornit Digital Ltd., Logitech International SA, NCR Corp.,\nNetApp Inc, Nutanix Inc, Pure Storage Inc, Resideo Technologies"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "., IBM,\nSeagate Technology, Snap One Holdings Corp..\nIn the next 3 months, Morgan Stanley expects to receive or intends to seek compensation for investment banking services from Apple, Inc., CDW\nCorporation, Cricut Inc, Dell Technologies Inc., GoPro Inc, Hewlett Packard Enterprise, HP Inc., IBM, Kornit Digital Ltd., Logitech International SA, NCR Corp.,\nNetApp Inc, Nutanix Inc, Pure Storage Inc, Resideo Technologies Inc, Seagate Technology, SmartRent, Inc., Snap One Holdings Corp., Sonos Inc., Teradata.\nWithin the last 12 months, Morgan Stanley has received compensation for products and services other than investment banking services from Apple, Inc.,\nCDW Corporation, Dell Technologies Inc., Hewlett Packard Enterprise, HP Inc., IBM, NCR Corp., NetApp Inc, Seagate Technology, Snap One Holdings Corp.,\nSonos Inc., Xerox Corp.\nWithin the last 12 months, Morgan Stanley has provided or is providing investment banking services to, or has an investment banking client relationship with,\nthe following company: Apple, Inc., CDW Corporation, Cricut Inc, Dell Technologies Inc., GoPro Inc, Hewlett Packard Enterprise, HP Inc., IBM, Kornit Digital\nLtd., Logitech International SA, NCR Corp., NetApp Inc, Nutanix Inc, Pure Storage Inc, Resideo Technologies Inc, Seagate Technology, SmartRent, Inc., Snap\nOne Holdings Corp., Sonos Inc., Teradata.\nWithin the last 12 months, Morgan Stanley has either provided or is providing non-investment banking, securities-related services to and/or in the past has\nentered into an agreement to provide services or has a client relationship with the following company: Apple, Inc., CDW Corporation, Dell Technologies Inc.,\nGarmin Ltd, GoPro Inc, Hewlett Packard Enterprise, HP Inc., IBM, NCR Corp., NetApp Inc, Nutanix Inc, Pure Storage Inc, Resideo Technologies Inc, Seagate\nTechnology, Snap One Holdings Corp., Sonos Inc., Xerox Corp.\nAn employee, director or consultant of Morgan Stanley is a director of HP Inc.. This person is not a research analyst or a member of a research analyst's\nhousehold.\nMorgan Stanley & Co. LLC makes a market in the securities of Apple, Inc., CDW Corporation, Dell Technologies Inc., Garmin Ltd, GoPro Inc, Hewlett\nPackard Enterprise, HP Inc., IBM, Kornit Digital Ltd., Logitech International SA, NCR Corp., NetApp Inc, Nutanix Inc, Pure Storage Inc, Resideo Technologies\nInc, Seagate Technology, Snap One Holdings Corp., Sonos Inc., Teradata, Vivint Smart Home Inc, Xerox Corp.\nThe equity research analysts or strategists principally responsible for the preparation of Morgan Stanley Research have received compensation based upon\nvarious factors, including quality of research, investor client feedback, stock picking, competitive factors, firm revenues and overall investment banking\nrevenues. Equity Research analysts' or strategists' compensation is not linked to investment banking or capital markets transactions performed by Morgan\nStanley or the profitability or revenues of particular trading desks.\nMorgan Stanley and its affiliates do business that relates to companies/instruments covered in Morgan Stanley Research, including market making, providing\nliquidity, fund management, commercial banking, extension of credit, investment services and investment banking. Morgan Stanley sells to and buys from\ncustomers the securities/instruments of companies covered in Morgan Stanley Research on a principal basis. Morgan Stanley may have a position in the debt\nof the Company or instruments discussed in this report. Morgan Stanley trades or may trade as principal in the debt securities (or in related derivatives) that\nare the subject of the debt research report.\nCertain disclosures listed above are also for compliance with applicable regulations in non-US jurisdictions.\n\nSTOCK RATINGS\nMorgan Stanley uses a relative rating system using terms such as Overweight, Equal-weight, Not-Rated or Underweight (see definitions below). Morgan\nStanley does not assign ratings of Buy, Hold or Sell to the stocks we cover. Overweight, Equal-weight, Not-Rated and Underweight are not the equivalent of\nbuy, hold and sell. Investors should carefully read the definitions of all ratings used in Morgan Stanley Research. In addition, since Morgan Stanley Research\ncontains more complete information concerning the analyst's views, investors should carefully read Morgan Stanley Research, in its entirety, and not infer the\ncontents from the rating alone. In any case, ratings (or research) should not be used or relied upon as investment advice. An investor's decision to buy or sell a\nstock should depend on individual circumstances (such as the investor's existing holdings) and other considerations.\n\nGlobal Stock Ratings Distribution\n(as of January 31, 2023)\nThe Stock Ratings described below apply to Morgan Stanley's Fundamental Equity Research and do not apply to Debt Research produced by the Firm.\nFor disclosure purposes only (in accordance with FINRA requirements), we include the category headings of Buy, Hold, and Sell alongside our ratings of\nOverweight, Equal-weight, Not-Rated and Underweight. Morgan Stanley does not assign ratings of Buy, Hold or Sell to the stocks we cover. Overweight,\n8\n\n\fEqual-weight, Not-Rated and Underweight are not the equivalent of buy, hold, and sell but represent recommended relative weightings (see definitions below).\nTo satisfy regulatory requirements, we correspond Overweight, our most positive stock rating, with a buy recommendation; we correspond Equal-weight and\nNot-Rated to hold and Underweight to sell recommendations, respectively.\nCOVERAGE UNIVERSE\n\nINVESTMENT BANKING CLIENTS (IBC)\n\nOTHER MATERIAL\nINVESTMENT SERVICES\nCLIENTS (MISC)\n\nSTOCK RATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\n\nCOUNT"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "and sell but represent recommended relative weightings (see definitions below).\nTo satisfy regulatory requirements, we correspond Overweight, our most positive stock rating, with a buy recommendation; we correspond Equal-weight and\nNot-Rated to hold and Underweight to sell recommendations, respectively.\nCOVERAGE UNIVERSE\n\nINVESTMENT BANKING CLIENTS (IBC)\n\nOTHER MATERIAL\nINVESTMENT SERVICES\nCLIENTS (MISC)\n\nSTOCK RATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\n\nCOUNT\n\n% OF\nTOTAL IBC\n\n% OF\nRATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\nOTHER\nMISC\n\nOverweight/Buy\nEqual-weight/Hold\nNot-Rated/Hold\nUnderweight/Sell\n\n1360\n1672\n4\n658\n\n37%\n45%\n0%\n18%\n\n277\n292\n0\n82\n\n43%\n45%\n0%\n13%\n\n20%\n17%\n0%\n12%\n\n599\n737\n0\n232\n\n38%\n47%\n0%\n15%\n\nTOTAL\n\n3,694\n\n651\n\n1568\n\nData include common stock and ADRs currently assigned ratings. Investment Banking Clients are companies from whom Morgan Stanley received investment\nbanking compensation in the last 12 months. Due to rounding off of decimals, the percentages provided in the \"% of total\" column may not add up to exactly\n100 percent.\n\nAnalyst Stock Ratings\nOverweight (O). The stock's total return is expected to exceed the average total return of the analyst's industry (or industry team's) coverage universe, on a\nrisk-adjusted basis, over the next 12-18 months.\nEqual-weight (E). The stock's total return is expected to be in line with the average total return of the analyst's industry (or industry team's) coverage universe,\non a risk-adjusted basis, over the next 12-18 months.\nNot-Rated (NR). Currently the analyst does not have adequate conviction about the stock's total return relative to the average total return of the analyst's\nindustry (or industry team's) coverage universe, on a risk-adjusted basis, over the next 12-18 months.\nUnderweight (U). The stock's total return is expected to be below the average total return of the analyst's industry (or industry team's) coverage universe, on a\nrisk-adjusted basis, over the next 12-18 months.\nUnless otherwise specified, the time frame for price targets included in Morgan Stanley Research is 12 to 18 months.\n\nAnalyst Industry Views\nAttractive (A): The analyst expects the performance of his or her industry coverage universe over the next 12-18 months to be attractive vs. the relevant broad\nmarket benchmark, as indicated below.\nIn-Line (I): The analyst expects the performance of his or her industry coverage universe over the next 12-18 months to be in line with the relevant broad market\nbenchmark, as indicated below.\nCautious (C): The analyst views the performance of his or her industry coverage universe over the next 12-18 months with caution vs. the relevant broad market\nbenchmark, as indicated below.\nBenchmarks for each region are as follows: North America - S&P 500; Latin America - relevant MSCI country index or MSCI Latin America Index; Europe MSCI Europe; Japan - TOPIX; Asia - relevant MSCI country index or MSCI sub-regional index or MSCI AC Asia Pacific ex Japan Index.\n\nStock Price, Price Target and Rating History (See Rating Definitions)\n\n9\n\n\fImportant Disclosures for Morgan Stanley Smith Barney LLC & E*TRADE Securities LLC Customers\nImportant disclosures regarding the relationship between the companies that are the subject of Morgan Stanley Research and Morgan Stanley Smith Barney\nLLC or Morgan Stanley or any of their affiliates, are available on the Morgan Stanley Wealth Management disclosure website at\nwww.morganstanley.com/online/researchdisclosures. For Morgan Stanley specific disclosures, you may refer to\nwww.morganstanley.com/researchdisclosures.\nEach Morgan Stanley research report is reviewed and approved on behalf of Morgan Stanley Smith Barney LLC and E*TRADE Securities LLC. This review and\napproval is conducted by the same person who reviews the research report on behalf of Morgan Stanley. This could create a conflict of interest.\n\nOther Important Disclosures\nMorgan Stanley & Co. International PLC and its affiliates have a significant financial interest in the debt securities of Apple, Inc., Hewlett Packard Enterprise,\nHP Inc., IBM, NCR Corp., Nutanix Inc, Snap One Holdings Corp., Sonos Inc., Xerox Corp.\nMorgan Stanley Research policy is to update research reports as and when the Research Analyst and Research Management deem appropriate, based on\ndevelopments with the issuer, the sector, or the market that may have a material impact on the research views or opinions stated therein. In addition, certain\nResearch publications are intended to be updated on a regular periodic basis (weekly/monthly/quarterly/annual) and will ordinarily be updated with that\nfrequency, unless the Research Analyst and Research Management determine that a different publication schedule is appropriate based on current conditions.\nMorgan Stanley is not acting as a municipal advisor and the opinions or views contained herein are not intended to be, and do not constitute, advice within the\nmeaning of Section 975 of the Dodd-Frank Wall Street Reform and Consumer Protection Act.\nMorgan Stanley produces an equity research product called a \"Tactical Idea.\" Views contained in a \"Tactical Idea\" on a particular stock may be contrary to the\nrecommendations or views expressed in research on the same stock. This may be the result of differing time horizons, methodologies, market events, or other\nfactors. For all research available on a particular stock, please contact your sales representative or go to Matrix at http://www.morganstanley.com/matrix.\nMorgan Stanley"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "organ Stanley produces an equity research product called a \"Tactical Idea.\" Views contained in a \"Tactical Idea\" on a particular stock may be contrary to the\nrecommendations or views expressed in research on the same stock. This may be the result of differing time horizons, methodologies, market events, or other\nfactors. For all research available on a particular stock, please contact your sales representative or go to Matrix at http://www.morganstanley.com/matrix.\nMorgan Stanley Research is provided to our clients through our proprietary research portal on Matrix and also distributed electronically by Morgan Stanley to\nclients. Certain, but not all, Morgan Stanley Research products are also made available to clients through third-party vendors or redistributed to clients through\nalternate electronic means as a convenience. For access to all available Morgan Stanley Research, please contact your sales representative or go to Matrix at\nhttp://www.morganstanley.com/matrix.\nAny access and/or use of Morgan Stanley Research is subject to Morgan Stanley's Terms of Use (http://www.morganstanley.com/terms.html). By accessing\nand/or using Morgan Stanley Research, you are indicating that you have read and agree to be bound by our Terms of Use\n(http://www.morganstanley.com/terms.html). In addition you consent to Morgan Stanley processing your personal data and using cookies in accordance with\nour Privacy Policy and our Global Cookies Policy (http://www.morganstanley.com/privacy_pledge.html), including for the purposes of setting your preferences\nand to collect readership data so that we can deliver better and more personalized service and products to you. To find out more information about how Morgan\nStanley processes personal data, how we use cookies and how to reject cookies see our Privacy Policy and our Global Cookies Policy\n(http://www.morganstanley.com/privacy_pledge.html).\nIf you do not agree to our Terms of Use and/or if you do not wish to provide your consent to Morgan Stanley processing your personal data or using cookies\nplease do not access our research.\nMorgan Stanley Research does not provide individually tailored investment advice. Morgan Stanley Research has been prepared without regard to the\ncircumstances and objectives of those who receive it. Morgan Stanley recommends that investors independently evaluate particular investments and\nstrategies, and encourages investors to seek the advice of a financial adviser. The appropriateness of an investment or strategy will depend on an investor's\ncircumstances and objectives. The securities, instruments, or strategies discussed in Morgan Stanley Research may not be suitable for all investors, and\n10\n\n\fcertain investors may not be eligible to purchase or participate in some or all of them. Morgan Stanley Research is not an offer to buy or sell or the solicitation\nof an offer to buy or sell any security/instrument or to participate in any particular trading strategy. The value of and income from your investments may vary\nbecause of changes in interest rates, foreign exchange rates, default rates, prepayment rates, securities/instruments prices, market indexes, operational or\nfinancial conditions of companies or other factors. There may be time limitations on the exercise of options or other rights in securities/instruments\ntransactions. Past performance is not necessarily a guide to future performance. Estimates of future performance are based on assumptions that may not be\nrealized. If provided, and unless otherwise stated, the closing price on the cover page is that of the primary exchange for the subject company's\nsecurities/instruments.\nThe fixed income research analysts, strategists or economists principally responsible for the preparation of Morgan Stanley Research have received\ncompensation based upon various factors, including quality, accuracy and value of research, firm profitability or revenues (which include fixed income trading\nand capital markets profitability or revenues), client feedback and competitive factors. Fixed Income Research analysts', strategists' or economists'\ncompensation is not linked to investment banking or capital markets transactions performed by Morgan Stanley or the profitability or revenues of particular\ntrading desks.\nThe \"Important Regulatory Disclosures on Subject Companies\" section in Morgan Stanley Research lists all companies mentioned where Morgan Stanley\nowns 1% or more of a class of common equity securities of the companies. For all other companies mentioned in Morgan Stanley Research, Morgan Stanley\nmay have an investment of less than 1% in securities/instruments or derivatives of securities/instruments of companies and may trade them in ways different\nfrom those discussed in Morgan Stanley Research. Employees of Morgan Stanley not involved in the preparation of Morgan Stanley Research may have\ninvestments in securities/instruments or derivatives of securities/instruments of companies mentioned and may trade them in ways different from those\ndiscussed in Morgan Stanley Research. Derivatives may be issued by Morgan Stanley or associated persons.\nWith the exception of information regarding Morgan Stanley, Morgan Stanley Research is based on public information. Morgan Stanley makes every effort to\nuse reliable, comprehensive information, but we make no representation that it is accurate or complete. We have no obligation to tell you when opinions or\ninformation in Morgan Stanley Research change apart from when we intend to discontinue equity research coverage of a subject company. Facts and views\npresented in Morgan Stanley Research have not been reviewed by, and may not reflect information known to, professionals in other Morgan Stanley business\nareas, including investment banking personnel.\nMorgan Stanley Research personnel may participate in company events such as site visits and are generally prohibited from accepting payment by the\ncompany of associated expenses unless pre-approved by authorized members of Research management.\nMorgan Stanley may make investment decisions that are inconsistent with the recommendations or views in this report.\nTo our readers based in Taiwan or trading in Taiwan securities/instruments: Information on securities/instruments that trade in Taiwan is distributed by Morgan\nStanley Taiwan Limited (\"MSTL\"). Such information is for your reference only. The reader should independently evaluate the investment risks and is solely\nresponsible for their investment decisions. Morgan Stanley Research may not be distributed to the"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "-approved by authorized members of Research management.\nMorgan Stanley may make investment decisions that are inconsistent with the recommendations or views in this report.\nTo our readers based in Taiwan or trading in Taiwan securities/instruments: Information on securities/instruments that trade in Taiwan is distributed by Morgan\nStanley Taiwan Limited (\"MSTL\"). Such information is for your reference only. The reader should independently evaluate the investment risks and is solely\nresponsible for their investment decisions. Morgan Stanley Research may not be distributed to the public media or quoted or used by the public media without\nthe express written consent of Morgan Stanley. Any non-customer reader within the scope of Article 7-1 of the Taiwan Stock Exchange Recommendation\nRegulations accessing and/or receiving Morgan Stanley Research is not permitted to provide Morgan Stanley Research to any third party (including but not\nlimited to related parties, affiliated companies and any other third parties) or engage in any activities regarding Morgan Stanley Research which may create or\ngive the appearance of creating a conflict of interest. Information on securities/instruments that do not trade in Taiwan is for informational purposes only and is\nnot to be construed as a recommendation or a solicitation to trade in such securities/instruments. MSTL may not execute transactions for clients in these\nsecurities/instruments.\nMorgan Stanley is not incorporated under PRC law and the research in relation to this report is conducted outside the PRC. Morgan Stanley Research does\nnot constitute an offer to sell or the solicitation of an offer to buy any securities in the PRC. PRC investors shall have the relevant qualifications to invest in\nsuch securities and shall be responsible for obtaining all relevant approvals, licenses, verifications and/or registrations from the relevant governmental\nauthorities themselves. Neither this report nor any part of it is intended as, or shall constitute, provision of any consultancy or advisory service of securities\ninvestment as defined under PRC law. Such information is provided for your reference only.\nMorgan Stanley Research is disseminated in Brazil by Morgan Stanley C.T.V.M. S.A. located at Av. Brigadeiro Faria Lima, 3600, 6th floor, S\u00e3o Paulo - SP,\nBrazil; and is regulated by the Comiss\u00e3o de Valores Mobili\u00e1rios; in Mexico by Morgan Stanley M\u00e9xico, Casa de Bolsa, S.A. de C.V which is regulated by\nComision Nacional Bancaria y de Valores. Paseo de los Tamarindos 90, Torre 1, Col. Bosques de las Lomas Floor 29, 05120 Mexico City; in Japan by\nMorgan Stanley MUFG Securities Co., Ltd. and, for Commodities related research reports only, Morgan Stanley Capital Group Japan Co., Ltd; in Hong Kong\nby Morgan Stanley Asia Limited (which accepts responsibility for its contents) and by Morgan Stanley Bank Asia Limited; in Singapore by Morgan Stanley\nAsia (Singapore) Pte. (Registration number 199206298Z) and/or Morgan Stanley Asia (Singapore) Securities Pte Ltd (Registration number 200008434H),\nregulated by the Monetary Authority of Singapore (which accepts legal responsibility for its contents and should be contacted with respect to any matters\narising from, or in connection with, Morgan Stanley Research) and by Morgan Stanley Bank Asia Limited, Singapore Branch (Registration number\nT14FC0118J); in Australia to \"wholesale clients\" within the meaning of the Australian Corporations Act by Morgan Stanley Australia Limited A.B.N. 67 003 734\n576, holder of Australian financial services license No. 233742, which accepts responsibility for its contents; in Australia to \"wholesale clients\" and \"retail\nclients\" within the meaning of the Australian Corporations Act by Morgan Stanley Wealth Management Australia Pty Ltd (A.B.N. 19 009 145 555, holder of\nAustralian financial services license No. 240813, which accepts responsibility for its contents; in Korea by Morgan Stanley & Co International plc, Seoul\nBranch; in India by Morgan Stanley India Company Private Limited; in Canada by Morgan Stanley Canada Limited; in Germany and the European Economic\nArea where required by Morgan Stanley Europe S.E., authorised and regulated by Bundesanstalt fuer Finanzdienstleistungsaufsicht (BaFin) under the\nreference number 149169; in the US by Morgan Stanley & Co. LLC, which accepts responsibility for its contents. Morgan Stanley & Co. International plc,\nauthorized by the Prudential Regulatory Authority and regulated by the Financial Conduct Authority and the Prudential Regulatory Authority, disseminates in\nthe UK research that it has prepared, and approves solely for the purposes of section 21 of the Financial Services and Markets Act 2000, research which has\nbeen prepared by any of its affiliates. RMB Morgan Stanley Proprietary Limited is a member of the JSE Limited and A2X (Pty) Ltd. RMB Morgan Stanley\nProprietary Limited is a joint venture owned equally by Morgan Stanley International Holdings Inc. and RMB Investment Advisory (Proprietary) Limited, which is\nwholly owned by FirstRand Limited. The information in Morgan Stanley Research is being disseminated by Morgan Stanley Saudi Arabia, regulated by the\nCapital Market Authority in the Kingdom of Saudi Arabia , and is directed at Sophisticated investors only.\nThe information in Morgan Stanley Research is being communicated by Morgan Stanley & Co. International plc (DIFC Branch), regulated by the Dubai\nFinancial Services Authority (the DFSA), and is directed at Professional Clients only, as defined by the DFSA. The financial products or financial services to\nwhich this research relates will only be made available to a customer who we are satisfied meets the regulatory criteria to be a Professional Client. A\ndistribution of the different MS Research ratings or recommendations, in percentage terms for Investments in each sector covered, is available upon request"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "& Co. International plc (DIFC Branch), regulated by the Dubai\nFinancial Services Authority (the DFSA), and is directed at Professional Clients only, as defined by the DFSA. The financial products or financial services to\nwhich this research relates will only be made available to a customer who we are satisfied meets the regulatory criteria to be a Professional Client. A\ndistribution of the different MS Research ratings or recommendations, in percentage terms for Investments in each sector covered, is available upon request\nfrom your sales representative.\nThe information in Morgan Stanley Research is being communicated by Morgan Stanley & Co. International plc (QFC Branch), regulated by the Qatar\nFinancial Centre Regulatory Authority (the QFCRA), and is directed at business customers and market counterparties only and is not intended for Retail\nCustomers as defined by the QFCRA.\nAs required by the Capital Markets Board of Turkey, investment information, comments and recommendations stated here, are not within the scope of\ninvestment advisory activity. Investment advisory service is provided exclusively to persons based on their risk and income preferences by the authorized firms.\nComments and recommendations stated here are general in nature. These opinions may not fit to your financial status, risk and return preferences. For this\nreason, to make an investment decision by relying solely to this information stated here may not bring about outcomes that fit your expectations.\nThe trademarks and service marks contained in Morgan Stanley Research are the property of their respective owners. Third-party data providers make no\nwarranties or representations relating to the accuracy, completeness, or timeliness of the data they provide and shall not have liability for any damages relating\n11\n\n\fto such data. The Global Industry Classification Standard (GICS) was developed by and is the exclusive property of MSCI and S&P.\nMorgan Stanley Research, or any portion thereof may not be reprinted, sold or redistributed without the written consent of Morgan Stanley.\nIndicators and trackers referenced in Morgan Stanley Research may not be used as, or treated as, a benchmark under Regulation EU 2016/1011, or any other\nsimilar framework.\nThe issuers and/or fixed income products recommended or discussed in certain fixed income research reports may not be continuously followed. Accordingly,\ninvestors should regard those fixed income research reports as providing stand-alone analysis and should not expect continuing analysis or additional reports\nrelating to such issuers and/or individual fixed income products.\nMorgan Stanley may hold, from time to time, material financial and commercial interests regarding the company subject to the Research report.\nINDUSTRY COVERAGE: IT Hardware\nCOMPANY (TICKER)\n\nRATING (AS OF)\n\nPRICE* (02/03/2023)\n\nO (05/26/2009)\nO (03/30/2022)\nU (08/12/2021)\nE (03/30/2022)\nE (01/07/2015)\nE (11/11/2021)\nU (03/30/2022)\nE (01/18/2023)\nE (01/18/2023)\nU (09/27/2021)\nE (09/19/2022)\nE (03/16/2021)\nO (01/18/2023)\nE (02/14/2022)\nE (12/08/2021)\nE (06/14/2022)\nO (09/19/2021)\nE (08/11/2020)\nU (02/03/2021)\n\n$154.50\n$201.08\n$10.38\n$42.24\n$101.54\n$5.69\n$30.51\n$136.94\n$27.59\n$60.63\n$28.39\n$19.75\n$70.89\n$3.16\n$10.81\n$18.91\n$35.50\n$11.97\n$16.96\n\nU (04/12/2022)\nU (12/13/2022)\nE (05/28/2019)\nO (10/31/2022)\n\n$16.33\n$67.62\n$29.24\n$29.91\n\nErik W Woodring\nApple, Inc. (AAPL.O)\nCDW Corporation (CDW.O)\nCricut Inc (CRCT.O)\nDell Technologies Inc. (DELL.N)\nGarmin Ltd (GRMN.N)\nGoPro Inc (GPRO.O)\nHP Inc. (HPQ.N)\nIBM (IBM.N)\nKornit Digital Ltd. (KRNT.O)\nLogitech International SA (LOGI.O)\nNCR Corp. (NCR.N)\nResideo Technologies Inc (REZI.N)\nSeagate Technology (STX.O)\nSmartRent, Inc. (SMRT.N)\nSnap One Holdings Corp. (SNPO.O)\nSonos Inc. (SONO.O)\nTeradata (TDC.N)\nVivint Smart Home Inc (VVNT.N)\nXerox Corp (XRX.O)\n\nMeta A Marshall\nHewlett Packard Enterprise (HPE.N)\nNetApp Inc (NTAP.O)\nNutanix Inc (NTNX.O)\nPure Storage Inc (PSTG.N)\n\nStock Ratings are subject to change. Please see latest research for each company.\n* Historical prices are not split adjusted.\n\n\u00a9 2023 Morgan Stanley\n\n12"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "January 25, 2023 07:24 AM GMT\nMORGAN STANLEY & CO. LLC\n\nMicrosoft | North America\n\nKeith Weiss, CFA\n\n2Q23 Results \u2013 Seeing the\nSecular Light at the End of the\nCyclical Tunnel\nStock Rating\n\nOverweight\n\nIndustry View\n\nAttractive\n\nPrice Target\n\n$307.00\n\nEQUITY ANALYST\nKeith.Weiss@morganstanley.com\n\n+1 212 761-4149\n\nJosh Baer, CFA\nEQUITY ANALYST\nJosh.Baer@morganstanley.com\n\n+1 212 761-4223\n\nRyan A Bressner\nRESEARCH ASSOCIATE\nRyan.Bressner@morganstanley.com\n\n+1 212 761-5882\n\nFiona G Hynes\nRESEARCH ASSOCIATE\nFiona.Hynes@morganstanley.com\n\n+1 212 761-5444\n\nAngie Song\nRESEARCH ASSOCIATE\nAngie.Song@morganstanley.com\n\n+1 212 761-4336\n\nTheodor J Thun\n\nNear-term cyclical impacts on Azure create an attractive entry\npoint into one of the best secular growth stories in tech.\nEasing compares, price increases, waning FX headwinds and\ndecelerating opex all work to accelerate EPS growth to double\ndigits by Q4, which should bring investors back to MSFT.\nTwo Steps Needed for the Clearing Event, Q2 Brought an Important One.\nComing out of a disappointing Q1 print, there were two high-level questions\ninvestors wanted resolved before getting back on board with MSFT: 1) where\n(and when) does the deceleration in Azure growth stabilize?; and 2) after six\nstraight years of operating margin expansion, does the company still have the\ncapability to protect EPS as growth slows? After the Q2 print, the first question\nremains unresolved \u2013 while Azure growth of 38% YoY constant currency (cc) for\nthe quarter came in ahead of guidance and investor expectations of 35-36% cc\ngrowth, management's commentary on a weakening of growth trends in\nDecember (to mid-30's cc growth) and a guide for a further 4-5% point\ndeceleration from those levels in the March quarter (implying 30-31% cc growth)\ncame in below expectations and, more importantly, failed to show any\nmoderation in the pace of deceleration. That said, the company did more strongly\nargue the near-term impacts (increasing optimization of existing Cloud spend)\nwere cyclical in nature, there were no changes in competitive dynamics and the\nunderlying secular trends remain firmly intact. If anything, the faster pace of\ndevelopment in AI functionality is further expanding the market opportunity\nahead of Azure. Additionally, CEO Satya Nadella did place some bounds on the\nduration they expect these optimization impacts to last, noting, \"I don't think we're\ngoing to take 2 years to optimize, but we're going to take this year to optimize.\" On\nthe second question, the company more clearly laid out the potential for further\nleverage at Microsoft \u2013 a more moderated expansion in headcount in Q2 (up <1%\nQoQ), combined with the restructuring expected to take headcount down by\n~10,000 through the course of Q3, puts the company's anticipated opex growth\nfor Q4 in the low single digits in constant currency. With the management team\nguiding to ~6% cc revenue growth in Q3, FX headwinds turning neutral by Q4\nbased on current rates, compares further easing and Cloud price increases\nstarting on April 1, we see a clear path to operating margins returning to\nexpansion in Q4. Our current model forecasts 8.4% YoY revenue growth against\n\nRESEARCH ASSOCIATE\nTheo.Thun@morganstanley.com\n\n+1 212 761-5356\n\nMicrosoft ( MSFT.O, MSFT US )\nSoftware / United States of America\nStock Rating\nIndustry View\nPrice target\nShr price, close (Jan 24, 2023)\nMkt cap, curr (mm)\n52-Week Range\n\nOverweight\nAttractive\n$307.00\n$242.04\n$1,808,765\n$315.95-213.43\n\nFiscal Year Ending\n\n06/22 06/23e 06/24e 06/25e\n\nModelWare EPS ($)\nPrior ModelWare EPS\n($)\nP/E\nEPS ($)\u00a7\nDiv yld (%)\n\n9.21\n-\n\n9.29\n9.51\n\n11.15\n11.22\n\n13.17\n13.30\n\n27.9\n9.29\n1.0\n\n26.1\n9.55\n1.1\n\n21.7\n11.13\n1.2\n\n18.4\n13.07\n1.4\n\nUnless otherwise noted, all metrics are based on Morgan Stanley ModelWare\nframework\n\u00a7 = Consensus data is provided by Refinitiv Estimates\ne = Morgan Stanley Research estimates\n\nQUARTERLY MODELWARE EPS ($)\n2023e\n2023e\nQuarter\n2022\nPrior Current\nQ1\n2.27\n2.35a\nQ2\n2.48\n2.17a\nQ3\n2.22\n2.38\n2.23\nQ4\n2.23\n2.51\n2.55\n\n2024e\nPrior\n2.68\n2.67\n2.87\n3.00\n\n2024e\nCurrent\n2.74\n2"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "2023e\nQuarter\n2022\nPrior Current\nQ1\n2.27\n2.35a\nQ2\n2.48\n2.17a\nQ3\n2.22\n2.38\n2.23\nQ4\n2.23\n2.51\n2.55\n\n2024e\nPrior\n2.68\n2.67\n2.87\n3.00\n\n2024e\nCurrent\n2.74\n2.64\n2.72\n3.06\n\ne = Morgan Stanley Research estimates, a = Actual Company reported data\n\nMorgan Stanley does and seeks to do business with\ncompanies covered in Morgan Stanley Research. As a\nresult, investors should be aware that the firm may have a\nconflict of interest that could affect the objectivity of\nMorgan Stanley Research. Investors should consider\nMorgan Stanley Research as only a single factor in making\ntheir investment decision.\nFor analyst certification and other important disclosures,\nrefer to the Disclosure Section, located at the end of this\nreport.\n\n1\n\n\f2% YoY total expense growth driving almost 200 bps of operating margin\nexpansion in Q4 and a return to mid-teens EPS growth. Bottom line, while\ninvestors did not get everything they wanted in the Q2 print, a clear road map\nback to mid-teens EPS growth and the solid positioning of Microsoft against the\nmost compelling secular demand trends in tech (see our note, \"Microsoft: 4Q22\nCIO Survey Takeaways \u2014 Not Immune to the Macro, But Well Positioned for the\nSecular\", 01/11/23) with the stock trading at 20x our CY24 EPS estimates\nrepresents an attractive risk/reward for MSFT, remain OW.\nExhibit 1: MSFT Trading in Line With Historical Average PEG Ratio\nMSFT 5-Yr Price to NTM EPS Growth\n(PEG)\n2.6x\n2.4x\n2.2x\n2.0x\n1.8x\n1.6x\n1.4x\n1.2x\n1.0x\n\nSource: Refinitiv, Morgan Stanley Research\n\nWhat We Liked:\nAzure Growth of +38% YoY Beat Guidance and the Buyside Whisper.\nAzure growth of +38% YoY in constant currency (cc) beat management's\nguidance looking for +37% cc growth and came in ahead of investor\nexpectations looking for a 1-2pt miss vs. guidance.\nOffice 365 Commercial Accelerated vs. Last Q and Beat Expectations.\nO365 Commercial grew 18% in cc, ahead of the 17% YoY growth in cc from\nQ1 and ahead of management's expectations. Strength was balanced\nacross seats and ARPU, with upgrades to the premium E5 SKU remaining a\ndurable driver.\nProductivity and Business Processes and Intelligent Cloud (the HighValue Commercial Segments) Beat the Midpoint of Guidance, Even After\nAdjusting the Guidance Ranges for a Lower FX Headwind. Productivity\nand Business Processes (PBP) revenue of $17.0 billion, +7% YoY / +13% in\ncc, came in toward the high end of the updated guidance range looking for\n$16.72-$17.02 billion. Intelligent Cloud (IC) revenue of $21.51 billion, +18%\nYoY/ +24% in cc, came in toward the high end of the updated guidance\nrange looking for $21.27-$21.57 billion.\nMargins and EPS Beat Consensus in 2Q23. Gross margins of 67.1% slightly\nbeat MSe/consensus expectations for 66.9%/67.0%, with a more\nsubstantial ~120bps beat to operating margins, at 40.9% vs. MS/consensus\nat 39.7%. Opex came in roughly $500 million below the mid-point of the\nguidance range, enabling EPS of $2.32 to beat MS/consensus looking for\n$2.27 / $2.30, with moderating expense growth offsetting additional\npressures seen in More Personal Computing revenue.\n2\n\n\fRightsizing Expenses to Defend Margins. Last quarter, management\nguided operating margins down 1pt YoY in USD, which included the $3.7\nbillion benefit from lower depreciation from the useful life accounting\nchange. Now management is guiding down 2pts YoY in USD, but this\nexcludes the accounting change as well as the restructuring change. After\nadding in the $3.7B accounting change, when the like-to-like operating\nmargin guidance on a reported basis actually improves \u2013 from down 1%\nYoY to roughly flat. This improvement can partially be explained by $300\nmillion less of a negative impact from energy costs, some modest\nfavorable FX movement since last Q and the recently announced\nrestructuring being executed on through Q3. The remaining improvement\nstems from the recently announced restructuring and spend moderation.\nBottom line, the company is holding the line on margins, even against a\nweaker top line.\nAreas to Monitor:\nTotal Revenue Missed Consensus in Q2 and in Q3 Guidance. Weaker-thanexpected growth in Windows Commercial, Devices and Gaming contributed\nto More Personal Computing revenues of $14.2 billion (down 19% YoY or 16% cc) coming in $500 million shy of the mid-point of management's $14.5\nto $14.9 billion revenue guide and pulled total revenues of $52.7 billion\n(+2% YoY or +7% cc) slightly below consensus expectations of $52.9\nbillion. The company"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "aker-thanexpected growth in Windows Commercial, Devices and Gaming contributed\nto More Personal Computing revenues of $14.2 billion (down 19% YoY or 16% cc) coming in $500 million shy of the mid-point of management's $14.5\nto $14.9 billion revenue guide and pulled total revenues of $52.7 billion\n(+2% YoY or +7% cc) slightly below consensus expectations of $52.9\nbillion. The company's Q3 guide anticipates the headwinds to More\nPersonal Computing persist (guided down 17% YoY at the mid-point), along\nwith further deceleration in Azure, leaving the mid-point of the total\nrevenue guide at $50.95 billion (+3% YoY or +6% cc) shy of consensus\nexpectations of $52.5 billion.\nDespite Q2 Azure Strength, Azure Decelerated Exiting the Quarter and\nForward Azure Growth Guidance of 30-31% YoY in CC Fell Below\nInvestor Expectations. Azure growth exited Q2 in the mid-30%'s in\nconstant currency and management guided to another 4-5% deceleration\nfrom those levels, implying a 7-8% deceleration vs. the 38% in cc from Q1.\nWe lower our near-term Azure forecasts and now model 27% cc growth in\nQ4 and 1H24.\nStepping Away from 20% CC Commercial Revenue Growth. With the\nexpectation of deteriorating business trends the company saw in December\nto continue into Q3, Microsoft noted the 20% constant currency growth it\nachieved in 1H23 would decelerate in 2H23, implying they will fall short of\nthe 20% constant currency commercial revenue growth outlook for FY23.\nMicrosoft also failed to reiterate its double-digit constant currency\nrevenue and operating income target for FY23.\nMore Personal Computing Worse Than Expected, Down 16% YoY in\nConstant Currency; Q3 Guidance Implies -17% YoY Reported Growth.\nPC Market Continues to Negatively Impact Windows OEM and Devices.\nWindows OEM and Devices revenue both declined 39%% YoY, and Q3\ncommentary suggests Windows OEM down mid-to-high 30%'s and Devices\n3\n\n\fdown mid-40%'s.\n\nWindows Commercial Products and Cloud Services Disappointed. Weaker\nnew business moderation impacted Windows Commercial more significantly\nthan other KPI's given higher mix of upfront revenue recognition under ASC 606\ncreating more volatility. Revenue growth of -3% reported missed our\nexpectation for +5% YoY growth.\n\nLower Revenue and Lower Opex Increases Operating Margins Off a Smaller Top\nLine, Mitigating Negative EPS Revision to ~1%. With management detailing more\nchallenging demand trends from December continuing into Q3, we lower our\nrevenue estimates 1.4% / 3.2% / 3.4% in FY23/FY24 and FY25. However, following\nthe shift in investment philosophy and the restructuring, we lower opex by\n2%/9.5%/9.7% in our forecast years, leading to stronger operating margins off a\nlower revenue base, causing only a 1% decline in EPS forecasts.\n\n4\n\n\fH\n\nRisk Reward \u2013 Microsoft (MSFT.O)\nNavigating Through Choppy Seas, Great Long Term Story\nOVERWEIGHT THESIS\n\nPRICE TARGET $307.00\n~25x Base Case CY24e GAAP EPS of $12.13; Trading at ~20x EPS, MSFT trades at a discount\nto >$50 billion market-cap software peers growing EPS double-digits.\n$291.64\n\nConsensus Price Target Distribution\n\n$212.00\n\n$411.00\n\nMS PT\n\nSource: Refinitiv, Morgan Stanley Research\n\nMean\n\nMorgan Stanley Estimates\n\nRISK REWARD CHART AND OPTIONS IMPLIED PROBABILITIES (12M)\nUSD\n\n\u25aa Strong positioning for public cloud\n\nadoption, large distribution channels and\ninstalled customer base, and improving\nmargins support growth. Although heavier\ncyclical environment is weighing on the NT\nresults, the long term path remain durable.\nThis is supported by Azure , data center\n(share gains and positive pricing trends),\nO365 and LinkedIn. GM % improvement,\nopex discipline and strong capital return\nlead to durable teens total return profile\nlong term .\nAt ~20x CY24e GAAP EPS, MSFT trades\nat a discount to the large cap peers,\nunwarranted due to MSFT's premium return\nprofile. Multiple expansion will likely come\nfrom more comfort in durability of\ncommercial business gross profit dollars.\n\n\u25aa\n$377.00(+55.76%)\n$377.00\n(+55.76%)\n(+55.76%)\n\nProb (>377.00)~2.9%\n\n400\n\n$307.00(+26.84%)\n$307.00\n(+26.84%)\n(+26.84%)\n300\n\nProb (>307.00)~19.5%\n\n$242.04\n\nConsensus Rating Distribution\n\n200\n\n$182.00(-24.81%)\n$182.00\n(-24.81%)\n(-24.81%)\n\n88% Overweight\n10% Equal-weight\n2% Underweight\n\nProb (<182.00)~14.5%\n\n100\n\nMS Rating\n0\nJAN '22\n\nKey:\n\nJUL '22\n\nHistorical Stock Performance\n\nJAN '23\n\nCurrent Stock Price\n\nSource: Refinitiv, Morgan Stanley Research\n\nJAN '24\n\nPrice Target\n\nSource: Refinitiv, Morgan Stanley Research, Morgan Stanley Institutional Equities Division. The probabilities"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "24.81%)\n\n88% Overweight\n10% Equal-weight\n2% Underweight\n\nProb (<182.00)~14.5%\n\n100\n\nMS Rating\n0\nJAN '22\n\nKey:\n\nJUL '22\n\nHistorical Stock Performance\n\nJAN '23\n\nCurrent Stock Price\n\nSource: Refinitiv, Morgan Stanley Research\n\nJAN '24\n\nPrice Target\n\nSource: Refinitiv, Morgan Stanley Research, Morgan Stanley Institutional Equities Division. The probabilities of our Bull,\nBase, and Bear case scenarios playing out were estimated with implied volatility data from the options market as of 24\nJan, 2023. All figures are approximate risk-neutral probabilities of the stock reaching beyond the scenario price in either\nthree-months\u2019 or one-years\u2019 time. View explanation of Options Probabilities methodology here\n\nBULL CASE\n\n$377.00\n\nBASE CASE\n\n$307.00\n\nRisk Reward Themes\nSecular Growth:\nNew Data Era:\n\nPositive\nPositive\n\nView descriptions of Risk Rewards Themes here\n\nBEAR CASE\n\n$182.00\n\n~27x Bull Case CY24e EPS: $13.93\n\n~25x Base Case CY24e EPS of $12.13\n\n~17x Bear Case CY24e EPS: $10.83\n\nAzure and O365 Drive Top-Line\nGrowth. Intelligent Cloud, driven by rapid\nAzure adoption and sustained legacy and\nhybrid Server growth, supports near-term\nrev growth in the mid to high-teens %.\nAdoption of higher priced O365 Commercial\nSKUs and LinkedIn further drive PBP\nrevenues. Operating margins expand to\n~45% and CY24e EPS is $13.93. ~27x PE is at\na premium to large cap software peers.\n\nDurability of Growth \u2014 Continuing the\nMomentum: Top line drivers include Azure\n(winning in public cloud), O365, Dynamic\n365, and LinkedIn. Op margins expand to\n~43% in CY24. Double-digit CY23-CY25 EPS\ngrowth and a ~1.2% div yld drive a mid to\nhigh-teens total return profile and CY24e\nEPS of $12.13. Trading at ~20x EPS, MSFT\ntrades at a discount to >$50B market-cap\nsoftware peers growing EPS double digits.\n\nCommercial Cloud Growth Decelerates\nSignificantly. Slower cloud growth drags on\nPBP and IC segment growth; MPC declines\nfrom current levels. Total revenue grows in\nthe high single digits over the near-term.\nOperating margins reach ~41% in CY24e\nyielding CY24e EPS of $10.83. ~17x multiple\nis at a discount to large cap software peers.\n\n5\n\n\fH\n\nRisk Reward \u2013 Microsoft (MSFT.O)\nKEY EARNINGS INPUTS\nDrivers\n\n2022\n\n2023e\n\n2024e\n\n2025e\n\nAzure Revenue Growth (%)\n\n45.2\n\n29.6\n\n29.6\n\n31.6\n\nServer Products On-Prem Growth (%) 4.3\n\n(1.2)\n\n2.0\n\n1.8\n\nGross Margins (%)\n\n68.4\n\n68.4\n\n68.9\n\n69.3\n\nOperating Margins (%)\n\n42.1\n\n41.3\n\n42.8\n\n43.2\n\nGAAP EPS Growth (%)\n\n14.4\n\n2.6\n\n18.1\n\n18.1\n\nINVESTMENT DRIVERS\nSustainability of commercial growth, cloud\nmomentum, improving cloud margins\nImproving PC data points\n\nAPAC, ex Japan, Mainland\n0-10% China and India\n0-10% India\n0-10% Japan\n0-10% Latin America\n0-10% MEA\n0-10% Mainland China\n0-10% UK\n10-20% Europe ex UK\n50-60% North America\n\nBEST\n\nMOST\n\nFY Jun 2023e\n\nWeak macro impacting global PC sales\nOn-premises cannibalization by Cloud\nIncreased investments hurt margin expansion\nActivision Blizzard acquisition fails to be\naccretive\n\n210,033\n\nSales /\nRevenue\n($, mm)\n\n205,383\n\nEBITDA\n($, mm)\n\n98,381\n\nNet income\n($, mm)\n\n67,546\n\n222,045\n212,157\n100,277\n\nInst. Owners, % Active\n\n58.9%\n\nHF Sector Long/Short Ratio\n\n2.1x\n\nHF Sector Net Exposure\n\n30%\n\nRefinitiv; MSPB Content. Includes certain hedge fund\nexposures held with MSPB. Information may be\ninconsistent with or may not reflect broader market\ntrends. Long/Short Ratio = Long Exposure / Short\nexposure. Sector % of Total Net Exposure = (For a\nparticular sector: Long Exposure - Short Exposure) /\n(Across all sectors: Long Exposure \u2013 Short Exposure).\n\n3 Month\nHorizon\n\nSource: Refinitiv, FactSet, Morgan Stanley Research; 1 is\nthe highest favored Quintile and 5 is the least favored\nQuintile\n\nEPS\n($)\n\n105,637\n101,513\n70,602\n75,058\n71,171\n\nOWNERSHIP POSITIONING\n\nMS ALPHA MODELS\n\n2/5\n\nRISKS TO UPSIDE\n\nRISKS TO DOWNSIDE\n\nSource: Morgan Stanley Research Estimate\nView explanation of regional hierarchies here\n\n24 Month\nHorizon\n\nMS ESTIMATES VS. CONSENSUS\n\nOperational efficiencies leading to greater than\nanticipated economies of scale\nCloud adoption accelerates, with Azure as\nconvincing winner\nActivision Blizzard acquisition results strong\nearnings accretion from the very beginning\n\nGLOBAL REVEN"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "2/5\n\nRISKS TO UPSIDE\n\nRISKS TO DOWNSIDE\n\nSource: Morgan Stanley Research Estimate\nView explanation of regional hierarchies here\n\n24 Month\nHorizon\n\nMS ESTIMATES VS. CONSENSUS\n\nOperational efficiencies leading to greater than\nanticipated economies of scale\nCloud adoption accelerates, with Azure as\nconvincing winner\nActivision Blizzard acquisition results strong\nearnings accretion from the very beginning\n\nGLOBAL REVENUE EXPOSURE\n\n3/5\n\nRISKS TO PT/RATING\n\n9.45\n9.23\n\n10.01\n9.55\n\nMean\n\nMorgan Stanley Estimates\n\nSource: Refinitiv, Morgan Stanley Research\n\nSUSTAINABILITY & ESG\nIndicator of Change\n\n-0.38\n\nDisclosure Rate\n\n64%\n\n+1.0\n\n-1.0\n\n6\n\n\fAnalysis\nExhibit 2: Model Changes\nFY22\n\nFQ1:23\n\nFQ2:23e\n\nFQ3:23e\n\nFQ4:23e\n\nFY23e\n\nFY24e\n\nFY25e\n\nTotal Revenue\n\n$198.27B\n\n$50.12B\n\n$52.75B\n\n$50.94B\n\n$56.23B\n\n$210.03B\n\n$237.22B\n\n$275.53B\n\nYoY Change\nOld Total Revenue\n% Change\n\n18.0%\n$198.27B\n0.0%\n\n10.6%\n$50.12B\n0.0%\n\n2.0%\n$52.84B\n-0.2%\n\n3.2%\n$52.76B\n-3.4%\n\n8.4%\n$57.27B\n-1.8%\n\n5.9%\n$212.99B\n-1.4%\n\n12.9%\n$244.99B\n-3.2%\n\n16.1%\n$285.16B\n-3.4%\n\nTotal Gross Margin\n\n68.4%\n\n69.2%\n\n66.8%\n\n69.1%\n\n68.4%\n\n68.4%\n\n68.9%\n\n69.3%\n\nOld Gross Margin\nNew vs. Old\n\n68.4%\n0.0%\n\n69.2%\n0.0%\n\n66.9%\n0.0%\n\n69.0%\n0.1%\n\n68.4%\n0.0%\n\n68.4%\n0.0%\n\n69.1%\n-0.1%\n\n69.5%\n-0.2%\n\nOperating Expense\nYoY Change\nOld Operating Expense\n% Change\n\n$52.24B\n\n$13.15B\n\n$13.69B\n\n$14.75B\n\n$15.20B\n\n$56.79B\n\n$62.07B\n\n$71.90B\n\n13.7%\n$52.24B\n0.0%\n\n15.0%\n$13.15B\n0.0%\n\n9.3%\n$14.35B\n-4.6%\n\n10.2%\n$14.45B\n2.1%\n\n2.0%\n$16.09B\n-5.5%\n\n8.7%\n$58.04B\n-2.2%\n\n9.3%\n$68.56B\n-9.5%\n\n15.8%\n$79.63B\n-9.7%\n\nOperating Income\nOperating Margin\n\n$83.38B\n42.1%\n\n$21.52B\n42.9%\n\n$21.57B\n40.9%\n\n$20.45B\n40.2%\n\n$23.25B\n41.4%\n\n$86.80B\n41.3%\n\n$101.48B\n42.8%\n\n$118.94B\n43.2%\n\nOld Operating Income\nOld Operating Margin\n% Change in Op. Income\n\n$83.38B\n42.1%\n0.0%\n\n$21.52B\n42.9%\n0.0%\n\n$20.99B\n39.7%\n2.7%\n\n$21.94B\n41.6%\n-6.8%\n\n$23.11B\n40.3%\n0.6%\n\n$87.55B\n41.1%\n-0.9%\n\n$100.62B\n41.1%\n0.9%\n\n$118.56B\n41.6%\n0.3%\n\nEPS\n\n$9.21\n\n$2.35\n\n$2.32\n\n$2.23\n\n$2.55\n\n$9.45\n\n$11.15\n\n$13.17\n\nOld EPS\n% Change\n\n$9.21\n0.0%\n\n$2.35\n0.0%\n\n$2.27\n2.4%\n\n$2.38\n-6.6%\n\n$2.51\n1.5%\n\n$9.51\n-0.7%\n\n$11.22\n-0.6%\n\n$13.30\n-1.0%\n\nTotal FCF\n\n$65.1B\n\n$16.9B\n\n$4.9B\n\n$24.0B\n\n$21.9B\n\n$67.7B\n\n$74.4B\n\n$90.9B\n\nYoY Change\nOld FCF\n% Change\n\n16%\n$65.1B\n0.0%\n\n-10%\n$16.9B\n0.0%\n\n-43%\n$8.4B\n-42.0%\n\n20%\n$18.3B\n30.9%\n\n23%\n$22.2B\n-1.3%\n\n4%\n$65.9B\n2.8%\n\n10%\n$72.8B\n2.2%\n\n22%\n$"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "Change\nOld FCF\n% Change\n\n16%\n$65.1B\n0.0%\n\n-10%\n$16.9B\n0.0%\n\n-43%\n$8.4B\n-42.0%\n\n20%\n$18.3B\n30.9%\n\n23%\n$22.2B\n-1.3%\n\n4%\n$65.9B\n2.8%\n\n10%\n$72.8B\n2.2%\n\n22%\n$90.0B\n1.1%\n\nUnearned Revenue\n\n$48.41B\n\n$43.89B\n\n$39.63B\n\n$38.74B\n\n$50.40B\n\n$50.40B\n\n$53.06B\n\n$55.67B\n\nYoY Change\n\n10%\n\n4%\n\n5%\n\n5%\n\nSource: Company data, Morgan Stanley Research estimates\n\n7\n\n\fFinancials\nExhibit 3: MSFT: Income Statement\nNet Revenue\n% YoY Growth\n% QoQ Growth\nNet Revenue c.c\n% YoY Growth c.c\n\nFY\n2020\n$143,015\n13.6%\n\nFY\n2021\n$168,088\n17.5%\n\nFY\n2022\n$198,270\n18.0%\n\nSep-22\n$50,122\n10.6%\n-3.4%\n$52,568\n16.0%\n\nDec-22\n$52,747\n2.0%\n5.2%\n$55,349\n7.0%\n\nMar-23E\n$50,938\n3.2%\n-3.4%\n$52,419\n6.2%\n\nJun-23E\n$56,226\n8.4%\n10.4%\n$56,226\n8.4%\n\nFY\n2023E\n$210,033\n5.9%\n\nSep-23E\n$55,459\n10.6%\n-1.4%\n\nDec-23E\n$58,554\n11.0%\n5.6%\n\nMar-24E\n$58,575\n15.0%\n0.0%\n\nJun-24E\n$64,635\n15.0%\n10.3%\n\nFY\n2024E\n$237,223\n12.9%\n\nFY\n2025E\n$275,528\n16.1%\n\nFY\n2026E\n$319,399\n15.9%\n\nFY\n2027E\n$370,834\n16.1%\n\n$145,025\n\n$164,586\n\n$200,277\n\nCost of Goods Sold\n% YoY Growth\nGrossProfit\nGross Margin\nGross Profit Growth\nAmort of Intang. From LNKD Acquisition (COGS)\nAdjusted Gross Margin ex-LNKD amort of int.\n\n$46,078\n7%\n$96,937\n67.8%\n16.9%\n$880\n68.4%\n\n$52,232\n13%\n$115,856\n68.9%\n19.5%\n$880\n69.4%\n\n$62,650\n20%\n$135,620\n68.4%\n17.1%\n$880\n68.8%\n\n$15,452\n13%\n$34,670\n69.2%\n9.5%\n$220\n69.6%\n\n$17,488\n3%\n$35,259\n66.8%\n1.4%\n$220\n67.3%\n\n$15,732\n1%\n$35,206\n69.1%\n4.3%\n$220\n69.5%\n\n$17,773\n8%\n$38,452\n68.4%\n8.5%\n$220\n68.8%\n\n$216,562\n8.1%\n$66,446\n6%\n$143,587\n68.4%\n5.9%\n$880\n68.8%\n\n$16,651\n8%\n$38,808\n70.0%\n11.9%\n$220\n70.4%\n\n$18,789\n7%\n$39,765\n67.9%\n12.8%\n$220\n68.3%\n\n$17,941\n14%\n$40,634\n69.4%\n15.4%\n$220\n69.7%\n\n$20,292\n14%\n$44,344\n68.6%\n15.3%\n$220\n68.9%\n\n$73,672\n11%\n$163,551\n68.9%\n13.9%\n$880\n69.3%\n\n$84,688\n15%\n$190,840\n69.3%\n16.7%\n$880\n69.6%\n\n$97,746\n15%\n$221,653\n69.4%\n16.1%\n$880\n69.7%\n\n$111,854\n14%\n$258,979\n69.8%\n16.8%\n$880\n70.1%\n\nResearch & Development\n% of Revenue\n% YoY Growth\nSales and Marketing\n% of Revenue\n% YoY Growth\nGeneral & Administrative\n% of Revenue\n% YoY Growth\nOne-Time Charges\nTotal Operating Expenses\n% of Revenue\n% YoY Growth\nOperating Income\nOperating Margin\n% YoY Growth\n\n$19,269\n13.5%\n14.2%\n$19,598\n13.7%\n7.6%\n$5,111\n3.6%\n4.6%\n$0\n$43,978\n30.8%\n10.0%\n$52,959\n37.0%\n23.3%\n\n$20,716\n12.3%\n7.5%\n$20,117\n12.0%\n2.6%\n$5,107\n3.0%\n-"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "13.5%\n14.2%\n$19,598\n13.7%\n7.6%\n$5,111\n3.6%\n4.6%\n$0\n$43,978\n30.8%\n10.0%\n$52,959\n37.0%\n23.3%\n\n$20,716\n12.3%\n7.5%\n$20,117\n12.0%\n2.6%\n$5,107\n3.0%\n-0.1%\n$0\n$45,940\n27.3%\n4.5%\n$69,916\n41.6%\n32.0%\n\n$24,512\n12.4%\n18.3%\n$21,825\n11.0%\n8.5%\n$5,900\n3.0%\n15.5%\n$0\n$52,237\n26.3%\n13.7%\n$83,383\n42.1%\n19.3%\n\n$6,628\n13.2%\n18.4%\n$5,126\n10.2%\n12.7%\n$1,398\n2.8%\n8.6%\n$0\n$13,152\n26.2%\n15.0%\n$21,518\n42.9%\n6.3%\n\n$6,844\n13.0%\n18.9%\n$5,679\n10.8%\n5.6%\n$2,337\n4.4%\n68.9%\n($1,171)\n$13,689\n26.0%\n9.3%\n$21,570\n40.9%\n-3.0%\n\n$7,017\n13.8%\n11.3%\n$5,825\n11.4%\n4.1%\n$1,909\n3.7%\n29.0%\n$0\n$14,751\n29.0%\n10.2%\n$20,455\n40.2%\n0.4%\n\n$7,228\n12.9%\n5.5%\n$6,131\n10.9%\n-2.7%\n$1,840\n3.3%\n5.2%\n$0\n$15,199\n27.0%\n2.0%\n$23,253\n41.4%\n13.2%\n\n$27,717\n13.2%\n13.1%\n$22,761\n10.8%\n4.3%\n$7,484\n3.6%\n26.9%\n($1,171)\n$56,791\n27.0%\n8.7%\n$86,796\n41.3%\n4.1%\n\n$6,959\n12.5%\n5.0%\n$5,389\n9.7%\n5.1%\n$1,464\n2.6%\n4.7%\n$0\n$13,812\n24.9%\n5.0%\n$24,996\n45.1%\n16.2%\n\n$7,267\n12.4%\n6.2%\n$6,011\n10.3%\n5.9%\n$2,477\n4.2%\n6.0%\n$0\n$15,755\n26.9%\n15.1%\n$24,010\n41.0%\n11.3%\n\n$7,571\n12.9%\n7.9%\n$6,288\n10.7%\n8.0%\n$2,078\n3.5%\n8.9%\n$0\n$15,938\n27.2%\n8.0%\n$24,696\n42.2%\n20.7%\n\n$7,857\n12.2%\n8.7%\n$6,693\n10.4%\n9.2%\n$2,018\n3.1%\n9.7%\n$0\n$16,567\n25.6%\n9.0%\n$27,776\n43.0%\n19.5%\n\n$29,654\n12.5%\n7.0%\n$24,381\n10.3%\n7.1%\n$8,037\n3.4%\n7.4%\n$0\n$62,072\n26.2%\n9.3%\n$101,478\n42.8%\n16.9%\n\n$34,360\n12.5%\n15.9%\n$28,236\n10.2%\n15.8%\n$9,309\n3.4%\n15.8%\n$0\n$71,905\n26.1%\n15.8%\n$118,936\n43.2%\n17.2%\n\n$39,545\n12.4%\n15.1%\n$32,460\n10.2%\n15.0%\n$10,712\n3.4%\n15.1%\n$0\n$82,716\n25.9%\n15.0%\n$138,936\n43.5%\n16.8%\n\n$45,802\n12.4%\n15.8%\n$37,576\n10.1%\n15.8%\n$12,438\n3.4%\n16.1%\n$0\n$95,816\n25.8%\n15.8%\n$163,164\n44.0%\n17.4%\n\nAmort of Intang. From LNKD Acquisition (OPEX)\nAdj. Op. Margin ex-LNKD amort of int.\n\n$620\n37.5%\n\n$620\n42.0%\n\n$620\n42.4%\n\n$155\n43.2%\n\n$155\n41.2%\n\n$155\n40.5%\n\n$155\n41.6%\n\n$620\n41.6%\n\n$155\n45.4%\n\n$155\n41.3%\n\n$155\n42.4%\n\n$155"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "D Acquisition (OPEX)\nAdj. Op. Margin ex-LNKD amort of int.\n\n$620\n37.5%\n\n$620\n42.0%\n\n$620\n42.4%\n\n$155\n43.2%\n\n$155\n41.2%\n\n$155\n40.5%\n\n$155\n41.6%\n\n$620\n41.6%\n\n$155\n45.4%\n\n$155\n41.3%\n\n$155\n42.4%\n\n$155\n43.2%\n\n$620\n43.0%\n\n$620\n43.4%\n\n$620\n43.7%\n\n$620\n44.2%\n\nEBITDA\n% YoY Growth\n\n$65,755\n20.3%\n\n$81,602\n24.1%\n\n$97,843\n19.9%\n\n$24,308\n3.7%\n\n$25,218\n-2.0%\n\n$22,681\n-6.0%\n\n$29,241\n19.3%\n\n$101,448\n3.7%\n\n$29,062\n19.6%\n\n$28,212\n11.9%\n\n$29,035\n28.0%\n\n$32,313\n10.5%\n\n$118,622\n16.9%\n\n$138,224\n16.5%\n\n$160,840\n16.4%\n\n$188,087\n16.9%\n\nNet Interest(Income and Other Income)\n\n$77\n\n$1,186\n\n$333\n\n$54\n\n($60)\n\n$196\n\n$267\n\n$457\n\n$249\n\n$262\n\n$277\n\n$352\n\n$1,140\n\n$2,000\n\n$3,076\n\n$4,506\n\nPre-Tax Profit (incl. Stock Compensation)\nProvision / (Benefit) for Income Taxes\nTax Rate\nOperating Net Income (incl. Stock Comp)\n% YoY Growth\nOperating EPS\n% YoY Growth\n\n$53,036\n$8,755\n16.5%\n$44,281\n20.2%\n$5.76\n21.3%\n\n$71,102\n$9,831\n13.8%\n$61,271\n38.4%\n$8.05\n39.7%\n\n$83,716\n$14,269\n17.0%\n$69,447\n13.3%\n$9.21\n14.4%\n\n$21,572\n$4,016\n18.6%\n$17,556\n2.0%\n$2.35\n3.1%\n\n$21,510\n$4,139\n19.2%\n$17,371\n-7.4%\n$2.32\n-6.4%\n\n$20,651\n$4,027\n19.5%\n$16,624\n-0.6%\n$2.23\n0.2%\n\n$23,520\n$4,469\n19.0%\n$19,051\n13.8%\n$2.55\n14.4%\n\n$87,253\n$16,651\n19.1%\n$70,602\n1.7%\n$9.45\n2.6%\n\n$25,245\n$4,796\n19.0%\n$20,448\n16.5%\n$2.74\n16.9%\n\n$24,272\n$4,612\n19.0%\n$19,661\n13.2%\n$2.64\n13.5%\n\n$24,973\n$4,745\n19.0%\n$20,228\n21.7%\n$2.72\n22.0%\n\n$28,128\n$5,344\n19.0%\n$22,783\n19.6%\n$3.06\n19.9%\n\n$102,618\n$19,497\n19.0%\n$83,121\n17.7%\n$11.15\n18.1%\n\n$120,935\n$22,978\n19.0%\n$97,958\n17.9%\n$13.17\n18.1%\n\n$142,013\n$26,982\n19.0%\n$115,030\n17.4%\n$15.49\n17.6%\n\n$167,670\n$31,857\n19.0%\n$135,813\n18.1%\n$18.31\n18.2%\n\nAmort. Of Intang. From LNKD, net of tax\nAdjusted Net Income excluding LNKD Deal Amort of Intang.\nAdjusted EPS(excl. LNKD Amort of Int.)\n% YoY Change\n\n$1,252\n$45,533\n$5.93\n20.6%\n\n$1,293\n$62,564\n$8.22\n38.7%\n\n$1,244\n$70,691\n$9.37\n14.0%\n\n$305\n$17,861\n$2.39\n3.0%\n\n$303\n$17,674\n$2.37\n-6.3%\n\n$302\n$16,926\n$2.27\n0.2%\n\n$304\n$19,355\n$2.59\n14.2%\n\n$1,214\n$71,816\n$9.61\n2.5%\n\n$304\n$20,752\n$2.78\n16.6%\n\n$304\n$19,964\n$2.68\n13.2%\n\n$304\n$20,532\n$2.76\n21.6%\n\n$304\n$23,087\n$3.10\n19.6%\n\n$1,215\n$84,336\n$11.32\n17.8%\n\n$1,215\n$"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": ".61\n2.5%\n\n$304\n$20,752\n$2.78\n16.6%\n\n$304\n$19,964\n$2.68\n13.2%\n\n$304\n$20,532\n$2.76\n21.6%\n\n$304\n$23,087\n$3.10\n19.6%\n\n$1,215\n$84,336\n$11.32\n17.8%\n\n$1,215\n$99,173\n$13.34\n17.8%\n\n$1,215\n$116,245\n$15.66\n17.4%\n\n$1,215\n$137,028\n$18.47\n18.0%\n\nStock option expense, net of tax\nAdjusted Net Income excluding Option Expense\nAdjusted EPS (excl. Stock comp)\n% YoY Change\n\n$4,416\n$48,697\n$6.34\n20.6%\n\n$5,272\n$66,543\n$8.75\n38.0%\n\n$6,223\n$75,670\n$10.04\n14.7%\n\n$1,784\n$19,340\n$2.58\n4.9%\n\n$2,050\n$19,421\n$2.60\n-3.5%\n\n$2,053\n$18,677\n$2.50\n2.9%\n\n$2,076\n$21,127\n$2.83\n15.6%\n\n$7,966\n$78,568\n$10.51\n4.8%\n\n$2,087\n$22,535\n$3.02\n16.9%\n\n$2,097\n$21,758\n$2.92\n12.3%\n\n$2,108\n$22,336\n$3.00\n19.9%\n\n$2,118\n$24,902\n$3.34\n18.2%\n\n$8,410\n$91,530\n$12.28\n16.8%\n\n$8,579\n$106,537\n$14.33\n16.6%\n\n$8,752\n$123,783\n$16.67\n16.4%\n\n$8,929\n$144,741\n$19.51\n17.0%\n\nReported Net Income\nReported EPS\n\n$44,281\n$5.76\n\n$61,271\n$8.05\n\n$72,738\n$9.65\n\n$17,556\n$2.35\n\n$16,425\n$2.20\n\n$16,624\n$2.23\n\n$19,051\n$2.55\n\n$69,656\n$9.32\n\n$20,448\n$2.74\n\n$19,661\n$2.64\n\n$20,228\n$2.72\n\n$22,783\n$3.06\n\n$83,121\n$11.15\n\n$97,958\n$13.17\n\n$115,030\n$15.49\n\n$135,813\n$18.31\n\nSource: Company data, Morgan Stanley Research estimates\n\n8\n\n\fExhibit 4: Revenue Drivers\nDrivers Detail\nProductivity and Business Processes\nTotal Office Products and Cloud Services\nYoY\nQoQ\nOffice Consumer Total\nYoY\nQoQ\nO365 Consumer\nYoY\nQoQ\nOffice Consumer (non-O365)\nYoY\nQoQ\nOffice Commercial Products and Cloud Services\nYoY\nQoQ\nOffice Business (non-O365)\nYoY\nQoQ\nOffice 365\nYoY\nQoQ\nDynamics Total\nYoY\nQoQ\nDynamics On-Premise\nYoY\nQoQ\nDynamics 365\nYoY\nQoQ\nLinkedIn Total\nYoY\nQoQ\nOther\nProductivity and Business Processes\nYoY\nQoQ\n3 Yr Avg. QoQ\n\n$25,573\n7.1%\n\n$28,316\n10.7%\n\n$31,769\n12.2%\n\n$35,316\n11.2%\n\n$39,872\n12.9%\n\n$44,862\n12.5%\n\n$11,548\n6.8%\n-0.8%\n$1,552\n6.8%\n8.4%\n$1,133\n11.8%\n2.4%\n$419\n-4.7%\n28.9%\n$9,996\n6.9%\n-2.1%\n$678\n-28.3%\n-11.3%\n$9,318\n10.8%\n-1.3%\n$1,254\n14.5%\n0.4%\n$231\n-14.4%\n16.4%\n$1,023\n24.0%\n-2.6%\n$3,663\n16.8%\n-1.3%\n$0\n$16,465\n9.5%\n-0.8%\n2.5%\n\n$11,837\n5.2%\n2.5%\n$1,627\n-2.2%\n4.8%\n$1,130\n7.4%\n-0.2%\n$497\n-18.8%\n18.5%\n$10,210\n6.5%\n2.1%\n$755\n-29.9%\n11.3%\n$9,455\n11.1%\n1.5%\n$1,289\n11.7%\n2.8%\n$208\n-20.2%\n-9.9%\n$1,081\n21.0%\n5.7%\n$3,876"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "%\n-0.2%\n$497\n-18.8%\n18.5%\n$10,210\n6.5%\n2.1%\n$755\n-29.9%\n11.3%\n$9,455\n11.1%\n1.5%\n$1,289\n11.7%\n2.8%\n$208\n-20.2%\n-9.9%\n$1,081\n21.0%\n5.7%\n$3,876\n9.8%\n5.8%\n$0\n$17,002\n6.7%\n3.3%\n7.0%\n\n$12,117\n8.5%\n2.4%\n$1,424\n-0.8%\n-12.5%\n$1,112\n2.4%\n-1.6%\n$312\n-10.8%\n-37.2%\n$10,693\n9.9%\n4.7%\n$593\n-25.0%\n-21.5%\n$10,100\n13.0%\n6.8%\n$1,350\n13.6%\n4.7%\n$141\n-27.0%\n-32.5%\n$1,209\n21.5%\n11.9%\n$3,629\n5.6%\n-6.4%\n($29)\n$17,067\n8.1%\n0.4%\n0.0%\n\n$12,896\n10.8%\n6.4%\n$1,441\n0.6%\n1.2%\n$1,142\n3.2%\n2.7%\n$299\n-8.0%\n-4.1%\n$11,455\n12.2%\n7.1%\n$597\n-22.0%\n0.6%\n$10,859\n15.0%\n7.5%\n$1,449\n16.0%\n7.4%\n$147\n-26.0%\n4.5%\n$1,302\n24.0%\n7.7%\n$3,918\n5.6%\n8.0%\n($29)\n$18,235\n9.8%\n6.8%\n4.5%\n\n$18,388\n22.0%\n-2.4%\n$5,509\n0.0%\n-14.0%\n$1,876\n4.7%\n-1.4%\n$12,879\n34.7%\n3.6%\n$61\n-35.8%\n$20,325\n19.9%\n-2.7%\n-3.4%\n\n$19,594\n19.7%\n6.6%\n$5,391\n-2.3%\n-2.1%\n$1,862\n2.1%\n-0.7%\n$14,203\n30.8%\n10.3%\n$52\n-50.2%\n$21,508\n17.5%\n5.8%\n9.9%\n\n$19,970\n17.2%\n1.9%\n$5,513\n-2.5%\n2.3%\n$1,815\n-4.0%\n-2.5%\n$14,458\n27.0%\n1.8%\n$23\n-80.0%\n$21,809\n14.5%\n1.4%\n3.7%\n\n$22,195\n17.8%\n11.1%\n$6,403\n0.0%\n16.2%\n$1,864\n-2.0%\n2.7%\n$15,792\n27.0%\n9.2%\n$31\n-80.0%\n$24,090\n15.3%\n10.5%\n11.2%\n\n$80,148\n19.1%\n\n$5,313\n-6.4%\n-17.1%\n$3,007\n-14.9%\n-2.4%\n$2,146\n8.0%\n-32.5%\n$160\n5.6%\n6.5%\n$1,448\n2.4%\n-6.0%\n$3,610\n0.5%\n4.5%\n$2,928\n10.2%\n0.1%\n$33\n-320.0%\n$13,332\n0.1%\n-7.2%\n-5.0%\n\n$4,808\n-27.2%\n-9.5%\n$2,854\n-38.7%\n-5.1%\n$1,871\n-3.0%\n-12.8%\n$82\n397.9%\n-48.4%\n$1,430\n-33.4%\n-1.2%\n$4,758\n-12.6%\n31.8%\n$3,223\n5.2%\n10.1%\n$18\n-92.4%\n$14,237\n-18.6%\n6.8%\n25.9%\n\n$4,744\n-21.9%\n-1.3%\n$2,185\n-38.2%\n-23.5%\n$2,536\n0.0%\n35.5%\n$24\n318.3%\n-71.5%\n$902\n-45.5%\n-36.9%\n$3,434\n-8.2%\n-27.8%\n$2,974\n1.0%\n-7.7%\n$8\n-92.4%\n$12,063\n-17.0%\n-15.3%\n-15.8%\n\n$6,532\n1.9%\n37.7%\n$2,200\n-28.6%\n0.7%\n$3,243\n2.0%\n27.9%\n$1,"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "$3,434\n-8.2%\n-27.8%\n$2,974\n1.0%\n-7.7%\n$8\n-92.4%\n$12,063\n-17.0%\n-15.3%\n-15.8%\n\n$6,532\n1.9%\n37.7%\n$2,200\n-28.6%\n0.7%\n$3,243\n2.0%\n27.9%\n$1,088\n624.6%\n4529.9%\n$1,024\n-33.5%\n13.5%\n$3,357\n-2.8%\n-2.2%\n$2,985\n2.0%\n0.3%\n$3\n-91.9%\n$13,901\n-3.3%\n15.2%\n8.1%\n\n$21,397\n-13.6%\n\n$96,571 $110,360 $125,843 $143,015 $168,088 $198,270\n5.9%\n14.3%\n14.0%\n13.6%\n17.5%\n18.0%\n\n$50,122\n10.6%\n-3.4%\n-2.0%\n\n$52,747\n2.0%\n5.2%\n13.9%\n\n$50,938\n3.2%\n-3.4%\n-4.3%\n\n$10,553\n46.2%\n\n$14,850\n40.7%\n\n$19,700\n32.7%\n\n$24,377\n23.7%\n\n$29,877\n22.6%\n\n$35,300\n18.2%\n\n$550\n79.6%\n\n$907\n65.1%\n\n$1,334\n47.1%\n\n$1,894\n41.9%\n\n$2,712\n43.2%\n\n$3,764\n38.8%\n\n$3,969\n98.6%\n\n$7,629\n92.2%\n\n$13,064\n71.2%\n\n$20,364\n55.9%\n\n$30,468\n49.6%\n\n$44,238\n45.2%\n\n$3,374\n0.0%\n\n$4,115\n22.0%\n\n$5,020\n22.0%\n\n$6,000\n19.5%\n\n$7,998\n33.3%\n\n$26,760\n$26.6\n\n$38,213\n\n$51,655\n\n$69,057\n\n$91,300\n\n42.8%\n\n35.2%\n\n33.7%\n\n32.2%\n\n$9,455\n11.1%\n1.5%\n$1,081\n21.0%\n5.7%\n$14,203\n30.8%\n10.3%\n$2,361\n25.1%\n-4.8%\n$27,100\n$27.1\n22.0%\n29.0%\n22.3%\n5.4%\n\n$10,100\n13.0%\n6.8%\n$1,209\n21.5%\n11.9%\n$14,458\n27.0%\n1.8%\n$2,428\n16.6%\n2.8%\n$28,195\n\n77.5%\n\n$9,318\n10.8%\n-1.3%\n$1,023\n24.0%\n-2.6%\n$12,879\n34.7%\n3.6%\n$2,481\n33.7%\n14.2%\n$25,700\n$25.7\n24.0%\n31.0%\n24.5%\n2.4%\n\n20.5%\n4.0%\n\n21.5%\n8.1%\n\n$3,773\n11.0%\n\n$4,160\n10.2%\n\n$4,422\n6.3%\n\n$4,890\n10.6%\n\n$5,385\n10.1%\n\n$5,984\n11.1%\n\n$1,847\n14.8%\n\n$2,157\n16.8%\n\n$2,440\n13.1%\n\n$2,857\n17.1%\n\n$3,653\n27.8%\n\n$4,259\n16.6%\n\n$1,926\n\n$2,003\n4.0%\n\n$1,982\n-1.0%\n\n$2,032\n2.5%\n\n$1,732\n-14.8%\n\n$1,725\n-0.4%\n\n$21,800\n7.0%\n\n$24,156\n10.8%\n\n$27,347\n13.2%\n\n$30,426\n11.3%\n\n$34,487\n13.3%\n\n$38,878\n12.7%\n\n$11,247\n\n$9,306\n-17.3%\n\n$7,647\n-17.8%\n\n$6,050\n-20.9%\n\n$4,610\n-23.8%\n\n$3,578\n-22.4%\n\n$10,553\n46.2%\n\n$14,850\n40.7%\n\n$19,700\n32.7%\n\n$24,377\n23.7%\n\n$29,877\n22.6%\n\n$35,300\n18.2%\n\n$2,026\n5.3%\n\n$2,290\n13.0%\n\n$2,637\n15.2%\n\n$3,005\n14.0%\n\n$3,754\n24.9%\n\n$4,686\n24.8%\n\n$1,476\n-8.8%\n\n$1,383\n-6.3%\n\n$1,303\n-5.8%\n\n$1,111\n-14.7%\n\n$1,042"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "2%\n\n$2,026\n5.3%\n\n$2,290\n13.0%\n\n$2,637\n15.2%\n\n$3,005\n14.0%\n\n$3,754\n24.9%\n\n$4,686\n24.8%\n\n$1,476\n-8.8%\n\n$1,383\n-6.3%\n\n$1,303\n-5.8%\n\n$1,111\n-14.7%\n\n$1,042\n-6.3%\n\n$922\n-11.5%\n\n$550\n79.6%\n\n$907\n65.1%\n\n$1,334\n47.1%\n\n$1,894\n41.9%\n\n$2,712\n43.2%\n\n$3,764\n38.8%\n\n$2,271\n\n$5,259\n\n$6,754\n28.4%\n\n$8,077\n19.6%\n\n$10,289\n27.4%\n\n$13,816\n34.3%\n\n$0\n$29,870\n15.8%\n\n$0\n$35,865\n20.1%\n\n$0\n$41,160\n14.8%\n\n($0)\n$46,398\n12.7%\n\n$0\n$53,915\n16.2%\n\n$0\n$63,364\n17.5%\n\n$21,649\n13.6%\n\n$26,129\n20.7%\n\n$32,622\n24.8%\n\n$41,379\n26.8%\n\n$52,589\n27.1%\n\n$67,321\n28.0%\n\n$17,680\n3.6%\n\n$18,500\n4.6%\n\n$19,558\n5.7%\n\n$21,015\n7.4%\n\n$22,121\n5.3%\n\n$23,083\n4.3%\n\n$5,542\n-2.1%\n\n$5,846\n5.5%\n\n$6,124\n4.8%\n\n$6,409\n4.7%\n\n$6,943\n8.3%\n\n$7,407\n6.7%\n\n$3,969\n98.6%\n\n$7,629\n92.2%\n\n$13,064\n71.2%\n\n$20,364\n55.9%\n\n$30,468\n49.6%\n\n$44,238\n45.2%\n\n$216\n-6.5%\n$27,407\n9.8%\n\n$244\n13.0%\n$32,219\n17.6%\n\n$239\n-2.0%\n$38,985\n21.0%\n\n$578\n141.8%\n$48,366\n24.1%\n\n$548\n-5.2%\n$60,080\n24.2%\n\n$470\n-14.3%\n$75,198\n25.2%\n\n$18,593\n6.0%\n\n$19,518\n5.0%\n\n$20,395\n4.5%\n\n$22,294\n9.3%\n\n$22,488\n0.9%\n\n$24,761\n10.1%\n\n$11,343\n\n$11,829\n4.3%\n\n$12,282\n3.8%\n\n$13,357\n8.8%\n\n$13,355\n0.0%\n\n$14,805\n10.9%\n\n$5,100\n14.0%\n\n$5,768\n13.1%\n\n$6,583\n14.1%\n\n$7,731\n17.4%\n\n$8,739\n13.0%\n\n$9,632\n10.2%\n\n$2,150\n14.9%\n\n$1,920\n-10.7%\n\n$1,531\n-20.3%\n\n$1,206\n-21.2%\n\n$394\n-67.3%\n\n$324\n-17.9%\n\n$4,026\n-1.8%\n\n$4,651\n15.5%\n\n$5,719\n23.0%\n\n$6,176\n8.0%\n\n$6,478\n4.9%\n\n$6,757\n4.3%\n\n$9,051\n\n$10,353\n14.4%\n\n$11,386\n10.0%\n\n$11,575\n1.7%\n\n$15,370\n32.8%\n\n$16,230\n5.6%\n\n$48,398\n7.9%\n\n$12,922\n11.9%\n0.2%\n$1,571\n1.2%\n9.0%\n$1,164\n2.7%\n1.9%\n$407\n-2.8%\n36.3%\n$11,351\n13.6%\n-0.9%\n$543\n-20.0%\n-9.0%\n$10,808\n16.0%\n-0.5%\n$1,497\n19.4%\n3.3%\n$208\n-10.0%\n41.6%\n$1,289\n26.0%\n-1.1%\n$4,144\n13.1%\n5.8%\n($29)\n$18,534\n12.6%\n1.6%\n2.1%\n\n$13,167\n11.2%\n1.9%\n$1,682\n3.4%\n7.0%\n$1,188\n5.1%\n2.1%\n$493\n-0.7%\n21.1%\n$11,485\n12.5%\n1.2%\n$612\n-19.0%\n12.7%\n$10,873\n15.0%\n0.6%\n$1,549\n20.2%\n3.5%\n$187\n-10.0%"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": ".9%\n$1,682\n3.4%\n7.0%\n$1,188\n5.1%\n2.1%\n$493\n-0.7%\n21.1%\n$11,485\n12.5%\n1.2%\n$612\n-19.0%\n12.7%\n$10,873\n15.0%\n0.6%\n$1,549\n20.2%\n3.5%\n$187\n-10.0%\n-9.9%\n$1,362\n26.0%\n5.7%\n$4,377\n12.9%\n5.6%\n($29)\n$19,063\n12.1%\n2.9%\n5.9%\n\n$13,394\n10.5%\n1.7%\n$1,495\n5.0%\n-11.1%\n$1,201\n7.9%\n1.0%\n$295\n-5.5%\n-40.3%\n$11,899\n11.3%\n3.6%\n$486\n-18.0%\n-20.5%\n$11,413\n13.0%\n5.0%\n$1,656\n22.7%\n6.9%\n$127\n-10.0%\n-32.5%\n$1,530\n26.5%\n12.3%\n$4,296\n18.4%\n-1.8%\n($29)\n$19,318\n13.2%\n1.3%\n0.3%\n\n$14,160\n9.8%\n5.7%\n$1,509\n4.7%\n0.9%\n$1,218\n6.7%\n1.5%\n$291\n-2.7%\n-1.3%\n$12,651\n10.4%\n6.3%\n$489\n-18.0%\n0.6%\n$12,162\n12.0%\n6.6%\n$1,786\n23.2%\n7.8%\n$132\n-10.0%\n4.5%\n$1,654\n27.0%\n8.1%\n$4,620\n17.9%\n7.5%\n($29)\n$20,538\n12.6%\n6.3%\n6.8%\n\n$22,233\n20.9%\n0.2%\n$5,620\n2.0%\n-12.2%\n$1,951\n4.0%\n4.7%\n$16,613\n29.0%\n5.2%\n$60\n-2.0%\n$24,244\n19.3%\n0.6%\n-2.7%\n\n$23,821\n21.6%\n7.1%\n$5,499\n2.0%\n-2.1%\n$1,936\n4.0%\n-0.7%\n$18,322\n29.0%\n10.3%\n$51\n-2.0%\n$25,808\n20.0%\n6.5%\n8.7%\n\n$24,273\n21.5%\n1.9%\n$5,623\n2.0%\n2.3%\n$1,888\n4.0%\n-2.5%\n$18,650\n29.0%\n1.8%\n$23\n-2.0%\n$26,184\n20.1%\n1.5%\n3.0%\n\n$27,219 $97,546 $121,443 $150,599 $185,852\n22.6%\n21.7%\n24.5%\n24.0%\n23.4%\n12.1%\n$6,531 $23,272 $23,702 $23,820 $23,939\n2.0%\n2.0%\n1.8%\n0.5%\n0.5%\n16.2%\n$1,939\n$7,714\n$8,023\n$8,303\n$8,552\n4.0%\n4.0%\n4.0%\n3.5%\n3.0%\n2.7%\n$20,688 $74,274 $97,741 $126,779 $161,912\n31.0%\n29.6%\n31.6%\n29.7%\n27.7%\n10.9%\n$30\n$164\n$164\n$164\n$164\n-2.0%\n-2.0%\n0.0%\n0.0%\n0.0%\n$29,188 $105,424 $129,629 $159,067 $194,568\n21.2%\n20.2%\n23.0%\n22.7%\n22.3%\n11.5%\n11.7%\n\n$5,183\n-2.5%\n-20.7%\n$2,769\n-7.9%\n25.8%\n$2,254\n5.0%\n-30.5%\n$160\n0.1%\n-85.3%\n$1,085\n-25.1%\n5.9%\n$3,246\n-10.1%\n-3.3%\n$3,133\n7.0%\n5.0%\n$34\n3.0%\n$12,681\n-4.9%\n-8.8%\n-7.0%\n\n$4,894\n1.8%\n-5.6%\n$2,789\n-2.3%\n0.7%\n$2,021\n8.0%\n-10.3%\n$84\n1.4%\n-47.8%\n$1,302\n-8.9%\n20.1%\n$3,954\n-16.9%\n21.8%\n$3,513\n9.0%\n12."}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "8%\n-7.0%\n\n$4,894\n1.8%\n-5.6%\n$2,789\n-2.3%\n0.7%\n$2,021\n8.0%\n-10.3%\n$84\n1.4%\n-47.8%\n$1,302\n-8.9%\n20.1%\n$3,954\n-16.9%\n21.8%\n$3,513\n9.0%\n12.1%\n$19\n3.0%\n$13,682\n-3.9%\n7.9%\n21.9%\n\n$5,007\n5.5%\n2.3%\n$2,245\n2.7%\n-19.5%\n$2,739\n8.0%\n35.5%\n$24\n1.1%\n-71.6%\n$1,134\n25.8%\n-12.9%\n$3,651\n6.3%\n-7.7%\n$3,272\n10.0%\n-6.9%\n$9\n3.0%\n$13,073\n8.4%\n-4.5%\n-15.3%\n\n$6,891\n5.5%\n37.6%\n$2,280\n3.6%\n1.6%\n$3,503\n8.0%\n27.9%\n$1,108\n1.9%\n4563.0%\n$1,226\n19.7%\n8.1%\n$3,475\n3.5%\n-4.8%\n$3,313\n11.0%\n1.3%\n$3\n3.0%\n$14,909\n7.3%\n14.0%\n7.4%\n\n$56,226 $210,033\n8.4%\n5.9%\n10.4%\n8.1%\n\n$55,459\n10.6%\n-1.4%\n-2.5%\n\n$58,554\n11.0%\n5.6%\n11.8%\n\n$58,575\n15.0%\n0.0%\n-3.7%\n\n$64,635 $237,223 $275,528 $319,399 $370,834\n15.0%\n12.9%\n16.1%\n15.9%\n16.1%\n10.3%\n8.7%\n\n$10,859 $39,731\n15.0%\n12.6%\n7.5%\n$1,302\n$4,615\n24.0%\n22.6%\n7.7%\n$15,792 $57,332\n27.0%\n29.6%\n9.2%\n$2,532\n$9,803\n16.6%\n22.6%\n4.3%\n$30,486 $111,481\n\n$10,808\n16.0%\n-0.5%\n$1,289\n26.0%\n-1.1%\n$16,613\n29.0%\n5.2%\n$2,903\n17.0%\n14.6%\n$31,613\n\n$10,873\n15.0%\n0.6%\n$1,362\n26.0%\n5.7%\n$18,322\n29.0%\n10.3%\n$2,786\n18.0%\n-4.0%\n$33,343\n\n$11,413\n13.0%\n5.0%\n$1,530\n26.5%\n12.3%\n$18,650\n29.0%\n1.8%\n$3,035\n25.0%\n8.9%\n$34,628\n\n$12,162 $45,256 $50,687 $56,516 $62,732\n12.0%\n13.9%\n12.0%\n11.5%\n11.0%\n6.6%\n$1,654\n$5,835\n$7,334\n$9,072 $11,040\n27.0%\n26.4%\n25.7%\n23.7%\n21.7%\n8.1%\n$20,688 $74,274 $97,741 $126,779 $161,912\n31.0%\n29.6%\n31.6%\n29.7%\n27.7%\n10.9%\n$3,165 $11,890 $14,594 $17,620 $20,922\n25.0%\n21.3%\n22.7%\n20.7%\n18.7%\n4.3%\n$37,669 $137,254 $170,355 $209,987 $256,607\n\n22.1%\n\n23.0%\n3.7%\n\n23.0%\n5.5%\n\n22.8%\n3.9%\n\n23.6%\n8.8%\n\n23.1%\n\n24.1%\n\n23.3%\n\n22.2%\n\n$6,044\n1.0%\n$4,518\n6.1%\n$1,526\n-11.5%\n$42,354\n8.9%\n$2,623\n-26.7%\n$39,731\n12.6%\n$5,342\n14.0%\n$727\n-21.2%\n$4,615\n22.6%\n$15,086\n9.2%\n($58)\n$68,769\n8.5%\n\n$53,643\n10.8%\n\n$58,775\n9.6%\n\n$64,262\n9.3%\n\n$70,422\n9.6%\n\n$6,257\n3.5%\n\n$6,342\n1.4%\n\n$6,297\n-0.7%\n\n$6,472\n2.8%\n\n$4,771\n5."}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "15,086\n9.2%\n($58)\n$68,769\n8.5%\n\n$53,643\n10.8%\n\n$58,775\n9.6%\n\n$64,262\n9.3%\n\n$70,422\n9.6%\n\n$6,257\n3.5%\n\n$6,342\n1.4%\n\n$6,297\n-0.7%\n\n$6,472\n2.8%\n\n$4,771\n5.6%\n\n$4,836\n1.3%\n\n$4,745\n-1.9%\n\n$4,873\n2.7%\n\n$1,486\n-2.6%\n\n$1,506\n1.4%\n\n$1,552\n3.0%\n\n$1,599\n3.0%\n\n$47,386\n11.9%\n\n$52,433\n10.7%\n\n$57,965\n10.6%\n\n$63,950\n10.3%\n\n$2,130\n-18.8%\n\n$1,746\n-18.0%\n\n$1,450\n-17.0%\n\n$1,218\n-16.0%\n\n$45,256\n13.9%\n\n$50,687\n12.0%\n\n$56,516\n11.5%\n\n$62,732\n11.0%\n\n$6,489\n21.5%\n\n$7,923\n22.1%\n\n$9,617\n21.4%\n\n$11,558\n20.2%\n\n$654\n-10.0%\n\n$589\n-10.0%\n\n$545\n-7.5%\n\n$517\n-5.0%\n\n$5,835\n26.4%\n\n$7,334\n25.7%\n\n$9,072\n23.7%\n\n$11,040\n21.7%\n\n$17,437\n15.6%\n\n$21,583\n23.8%\n\n$26,008\n20.5%\n\n$30,987\n19.1%\n\n($116)\n$77,453\n12.6%\n\n($116)\n$88,165\n13.8%\n\n($116)\n($116)\n$99,770 $112,851\n13.2%\n13.1%\n\n78.9%\nIntelligent Cloud\nServer Products and Cloud Services\nYoY\nQoQ\nServer Products\nYoY\nQoQ\nEnterprise Services\nYoY\nQoQ\nAzure\nYoY\nQoQ\nOther (MSFT Partners Network, etc)\nYoY\nIntelligent Cloud\nYoY\nQoQ\n3 Yr Avg. QoQ\n\n$22,816\n-1.2%\n$7,417\n0.1%\n$57,332\n29.6%\n$167\n-64.4%\n$87,732\n16.7%\n\n0\nMore Personal Computing\nTotal Windows\nYoY\nQoQ\nWindows OEM\nYoY\nQoQ\nWindows Commercial Products and Cloud Services\nYoY\nQoQ\nWindows Patent Licensing, IP, IoT, Embedded & Other\nYoY\nQoQ\nDevices\nYoY\nQoQ\nGaming (Hardware, Xbox Live, Video Games, 3rd Party Royalties)\nYoY\nQoQ\nSearch Advertising & Online Services\nYoY\nQoQ\nOther (Mostly Retail Stores ex-Surface, ex-Xbox)\nYoY\nMore Personal Computing\nYoY\nQoQ\n3 Yr Avg. QoQ\nTotal Revenue\nYoY\nQoQ\n3 Yr Avg. QoQ\nAdditional Detail\nMicrosoft Cloud\nO365 Commercial\nYoY\nQoQ\nDynamics 365\nYoY\nQoQ\nAzure\nYoY\nQoQ\nLinkedIn Commercial\nYoY\nQoQ\nMicrosoft Cloud\nReported (Billions)\nKPI YoY Growth Reported\nKPI YoY Growthin Constant Currency\nYoY\nQoQ\nMicrosoft Cloud Organic, Ex-LinkedIn\nYoY Organic, ex-LinkedIn\nQoQ Organic, ex-LinkedIn\nDevices\nSurface Units Shipped\nYoY\nAvg. ASP\nPC Accessories and Others\nYoY\nTotal Devices Revenue\nYoY\nGaming (Hardware, Xbox Live, Video Games, 3rd Party Royalties)\nTotal Gaming Revenue\nGaming RevenueYoY Growth\nGaming Revenue (cc)YoY Growth\nQoQ Growth\nXbox Content and Services Gaming Revenue\nSoftware and Services YoY Growth (implied)\nSoftware and Services YoY Growth\nSoftware and Services (cc)YoY Growth\nQoQ Growth\nSoftware and Services as % of Total\nYoY Growth\nHardware Gaming Revenue\nHardware Revenue YoY Growth\nHardware Revenue (cc)YoY Growth\nQoQ Growth\nHardware as % of Total\n\n$6,219\n14.7%\n\n$7,012\n12.8%\n\n$7,628\n8.8%\n\n$7,740\n1.5%\n\n$9,267\n19.7%\n\n$11,591\n25.1%\n\n$916\n\n$742\n-19.0%\n$42,276\n7.6%\n\n$570\n-23.2%\n$45,698\n8.1%\n\n$466\n-18.2%\n$48,251\n5.6%\n\n$490\n5.2%\n$54,093\n12.1%\n\n$370\n-24.5%\n$59,709\n10.4%\n\n$39,294\n-2.8%\n\n$15,072\n$14.9\n58.2%\n\n$10,246\n-30.8%\n$9,797\n1.7%\n$"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "698\n8.1%\n\n$466\n-18.2%\n$48,251\n5.6%\n\n$490\n5.2%\n$54,093\n12.1%\n\n$370\n-24.5%\n$59,709\n10.4%\n\n$39,294\n-2.8%\n\n$15,072\n$14.9\n58.2%\n\n$10,246\n-30.8%\n$9,797\n1.7%\n$1,354\n318.1%\n$4,804\n-28.9%\n$15,159\n-6.6%\n$12,110\n4.5%\n$63\n-83.1%\n$53,532\n-10.3%\n\n$21,976\n2.7%\n\n$22,789\n3.7%\n\n$23,618\n3.6%\n\n$24,440\n3.5%\n\n$10,083\n-1.6%\n\n$10,150\n0.7%\n\n$10,294\n1.4%\n\n$10,508\n2.1%\n\n$10,516\n7.3%\n\n$11,253\n7.0%\n\n$11,928\n6.0%\n\n$12,524\n5.0%\n\n$1,376\n1.6%\n\n$1,387\n0.8%\n\n$1,397\n0.8%\n\n$1,408\n0.8%\n\n$4,748\n-1.2%\n\n$5,422\n14.2%\n\n$5,633\n3.9%\n\n$5,905\n4.8%\n\n$14,327\n-5.5%\n\n$15,036\n4.9%\n\n$15,668\n4.2%\n\n$16,335\n4.3%\n\n$13,231\n9.3%\n\n$14,422\n9.0%\n\n$15,575\n8.0%\n\n$16,665\n7.0%\n\n$64\n3.0%\n$54,346\n1.5%\n\n$66\n3.0%\n$57,734\n6.2%\n\n$68\n3.0%\n$60,563\n4.9%\n\n$70\n3.0%\n$63,415\n4.7%\n\n$23,386\n55.2%\n\n4.9\n-7.0%\n$816\n\n5.8\n17.5%\n$803\n\n6.8\n17.7%\n$839\n\n6.7\n-1.5%\n$919\n\n6.7\n0.3%\n$962\n\n0.0%\n$4,026\n-1.8%\n\n0.0%\n$4,651\n15.5%\n\n0.0%\n$5,719\n23.0%\n\n0.0%\n$6,176\n8.0%\n\n0.0%\n$6,478\n4.9%\n\n7.7\n14.1%\n$879\n$247\n0.0%\n$6,757\n4.3%\n\n1.8\n23.3%\n$780\n$24\n-84.8%\n$1,448\n2.4%\n\n1.9\n-21.1%\n$720\n$28\n-43.1%\n$1,430\n-33.4%\n\n1.5\n-23.8%\n$605\n$12\n-5.0%\n$902\n-45.5%\n\n1.4\n-20.8%\n$696\n$31\n7.0%\n$1,024\n-33.5%\n\n6.7\n-13.2%\n$720\n$95\n-61.5%\n$4,804\n-28.9%\n\n1.5\n-16.5%\n$696\n$24\n1.0%\n$1,085\n-25.1%\n\n1.7\n-12.5%\n$748\n$28\n1.0%\n$1,302\n-8.9%\n\n1.5\n-0.5%\n$766\n$13\n5.0%\n$1,134\n25.8%\n\n1.5\n1.6%\n$824\n$31\n1.0%\n$1,226\n19.7%\n\n6.1\n-7.9%\n$773\n$97\n1.5%\n$4,748\n-1.2%\n\n6.4\n4.0%\n$849\n$98\n1.0%\n$5,422\n14.2%\n\n6.5\n1.1%\n$872\n$99\n1.0%\n$5,633\n3.9%\n\n6.7\n3.9%\n$881\n$100\n1.0%\n$5,905\n4.8%\n\n$9,051\n-1.0%\n\n$10,353\n14.4%\n\n$11,386\n10.0%\n\n$11,575\n1.7%\n\n$15,370\n32.8%\n\n$16,229\n5.6%\n\n$3,610\n0.5%\n4.0%\n4.5%\n\n$4,758\n-12.6%\n-9.0%\n31.8%\n\n$3,434\n-8.2%\n\n$3,357\n-2.8%\n\n$15,159\n-6.6%\n\n$3,246\n-10.1%\n\n$3,954\n-16.9%\n\n$3,651\n6.3%\n\n$3,475\n3.5%\n\n$14,327\n-5.5%\n\n$15,036\n4.9%\n\n$15,668\n4.2%\n\n$16,335\n4.3%\n\n-27."}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "2%\n\n$3,357\n-2.8%\n\n$15,159\n-6.6%\n\n$3,246\n-10.1%\n\n$3,954\n-16.9%\n\n$3,651\n6.3%\n\n$3,475\n3.5%\n\n$14,327\n-5.5%\n\n$15,036\n4.9%\n\n$15,668\n4.2%\n\n$16,335\n4.3%\n\n-27.8%\n\n-2.2%\n\n-3.3%\n\n21.8%\n\n-7.7%\n\n-4.8%\n\n$6,358\n11.0%\n11.0%\n\n$7,591\n19.4%\n19.4%\n\n$9,018\n18.8%\n18.8%\n\n$9,958\n10.4%\n10.4%\n\n$12,240\n22.9%\n22.9%\n\n$12,568\n2.7%\n2.7%\n\n$2,849\n-2.5%\n-2.5%\n1.0%\n2.9%\n79%\n\n$3,394\n-12.4%\n-12.4%\n-8.0%\n19.1%\n71%\n\n$2,897\n-3.5%\n-3.5%\n\n$2,880\n4.0%\n4.0%\n\n$12,020\n-4.4%\n-4.4%\n\n$2,991\n5.0%\n5.0%\n\n$3,631\n7.0%\n7.0%\n\n$3,129\n8.0%\n8.0%\n\n$3,111\n8.0%\n8.0%\n\n$12,862\n7.0%\n7.0%\n\n$13,634\n6.0%\n6.0%\n\n$14,316\n5.0%\n5.0%\n\n$15,032\n5.0%\n5.0%\n\n-14.6%\n84%\n\n-0.6%\n86%\n\n21.4%\n92%\n\n-13.8%\n86%\n\n-0.6%\n90%\n\n70%\n\n73%\n\n79%\n\n86%\n\n80%\n\n77%\n\n79%\n\n3.8%\n92%\n\n90%\n\n91%\n\n91%\n\n92%\n\n$2,693\n-23.4%\n\n$2,762\n2.6%\n\n$2,368\n-14.3%\n\n$1,617\n-31.7%\n\n$3,130\n93.6%\n\n$3,661\n17.0%\n\n$3,138\n-14.3%\n\n$255\n-66.5%\n\n$323\n-76.3%\n\n$522\n-2.7%\n\n$364\n-23.5%\n\n$1,465\n-53.3%\n\n$1,402\n-4.3%\n\n$1,352\n-3.6%\n\n$1,303\n-3.6%\n\n21%\n\n14%\n\n20%\n\n23%\n\n$1,364\n-13.0%\n-9.0%\n79.2%\n29%\n\n$477\n-30.4%\n\n27%\n\n$761\n13.4%\n19.0%\n11.2%\n21%\n\n$536\n-27.3%\n\n30%\n\n-60.7%\n16%\n\n-11.1%\n14%\n\n21%\n\n-91.9%\n8%\n\n26.7%\n8%\n\n61.6%\n14%\n\n-30.2%\n10%\n\n10%\n\n9%\n\n9%\n\n8%\n\nWindows Patent Licensing, IP, IoT, Embedded & Other\nAvg. ASP\n# of Devices\nYoY\nWindows Phone Licensing and IP\nYoY\n\n$2\n234.3\n-7.5%\n$618\n-13.4%\n\n$3\n210.9\n-10.0%\n$550\n-11.1%\n\n$3\n154.6\n-26.7%\n$422\n-23.3%\n\n$3\n121.7\n-21.3%\n$360\n-14.7%\n\n$2\n81.9\n-32.7%\n$219\n-39.0%\n\n$2\n42.9\n-47.6%\n$83\n-62.3%\n\n$2\n23.7\n-5.0%\n$50\n4.5%\n\n$2\n3.8\n-5.0%\n$8\n4.5%\n\n$2\n1.6\n-5.0%\n$3\n4.5%\n\n$2\n11.7\n-5.0%\n$25\n4.5%\n\n$2\n40.7\n-5.0%\n$86\n4.5%\n\n$2\n22.8\n-4.0%\n$48\n-4.0%\n\n$2\n3.6\n-4.0%\n$8\n-4.0%\n\n$2\n1.5\n-4.0%\n$3\n-4.0%\n\n$2\n11.2\n-4.0%\n$24\n-4.0%\n\n$2\n39.1\n-4.0%\n$83\n-4.0%\n\n$2\n37.9\n-3.0%\n$80\n-3.0%\n\n$2\n36.8\n-3.0%\n$78\n-3.0%\n\n$2\n35.7\n-3.0%\n$76\n-3.0%\n\nWindows Embedded & Other\nYoY\nWindows Patent Licensing, IP, IoT, Embedded & Other\n\n$1,532\n32.4%\n$2,150\n14.9%\n\n$1,370\n-10.6%\n$1,920\n-10.7%\n\n$1,109\n-19.1%\n$1,531\n-"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "-3.0%\n\n$2\n35.7\n-3.0%\n$76\n-3.0%\n\nWindows Embedded & Other\nYoY\nWindows Patent Licensing, IP, IoT, Embedded & Other\n\n$1,532\n32.4%\n$2,150\n14.9%\n\n$1,370\n-10.6%\n$1,920\n-10.7%\n\n$1,109\n-19.1%\n$1,531\n-20.3%\n\n$846\n-23.7%\n$1,206\n-21.2%\n\n$175\n-79.3%\n$394\n-67.3%\n\n$241\n37.9%\n$324\n-17.9%\n\n$110\n6.1%\n$160\n5.6%\n\n$74\n740.4%\n$82\n397.9%\n\n$20\n740.4%\n$24\n318.3%\n\n$1,064\n740.4%\n$1,088\n624.6%\n\n$1,268\n425.6%\n$1,354\n318.1%\n\n$112\n2.0%\n$160\n0.1%\n\n$76\n2.0%\n$84\n1.4%\n\n$21\n2.0%\n$24\n1.1%\n\n$1,085\n2.0%\n$1,108\n1.9%\n\n$1,293\n2.0%\n$1,376\n1.6%\n\n$1,306\n1.0%\n$1,387\n0.8%\n\n$1,319\n1.0%\n$1,397\n0.8%\n\n$1,332\n1.0%\n$1,408\n0.8%\n\n$380\n$235\n$111\n$34\n\n$414\n$225\n$163\n$26\n\n$299\n$166\n$116\n$16\n\n$13,978\n28.7%\n30.8%\n\n$14,292\n25.5%\n27.0%\n\n2024E\n66.9\n49%\n69.5\n3.4\n51%\n136.4\n6.4%\n\n2025E\n71.8\n50%\n72.9\n3.4\n50%\n144.7\n6.1%\n\n2026E\n76.8\n51%\n74.9\n2.0\n49%\n151.7\n4.8%\n\n2027E\n81.9\n52%\n76.9\n2.0\n48%\n158.8\n4.7%\n\nNuance Analysis\nNuance In-Organic Revenue Contribution\nNuance Azure\nNuance Server Products\nNuance Enterprise Services\nOrganic Azure\nOrganic Azure YoY Growth\nvs. Reported/Estimated Azure YoY\n\n49.6%\n\n45.2%\n\n$12,644\n32.2%\n34.7%\n\n27.0%\n\n29.6%\n\n29.0%\n\n29.0%\n\n29.0%\n\n31.0%\n\n29.6%\n\nOrganic Server Products\nOrganic Server Products YoY Growth\nvs. Reported/Estimated Server YoY\n\n5.3%\n\n4.3%\n\n$5,398\n-2.0%\n0.0%\n\n$5,228\n-5.2%\n-2.3%\n\n$5,396\n-4.6%\n-2.5%\n\n0.0%\n\n-1.2%\n\n2.0%\n\n2.0%\n\n2.0%\n\n2.0%\n\n2.0%\n\nOrganic Enterprise Services\nOrganic Enterprise Services YoY Growth\nvs. Reported/Estimated Services YoY\n\n8.3%\n\n6.7%\n\n$1,842\n2.8%\n4.7%\n\n$1,836\n0.7%\n2.1%\n\n$1,799\n-4.9%\n-4.0%\n\n-2.0%\n\n0.1%\n\n4.0%\n\n4.0%\n\n4.0%\n\n4.0%\n\n4.0%\n\n24.2%\n\n25.2%\n\n$19,945\n17.6%\n19.9%\n\n$21,094\n15.3%\n17.5%\n\n$21,510\n12.9%\n14.5%\n\n15.3%\n\n16.7%\n\n20.2%\n\nTotal Intelligent Cloud Organic\nOrganic Intelligent Cloud YoY Growth\nvs. Reported/Estimated IC YoY\nPhone Hardware\n\n19.3%\n\n20.0%\n\n20.1%\n\n21.2%\n\n1.2%\n\n3.4%\n\n5.0%\n\n4.7%\n\nConsumer Office Analysis\nPerpetual Office Est. Installed Base-- Consumer\n% of Base\nMicrosoft 365 Home Users\nNet NewO365 Users\n% of Base\nConsumer Office Installed Base\nYoY\n\n2017\n89.1\n77%\n27.0\n3.9\n23%\n116.1\n-7.8%\n\n2018E\n77.7\n71%\n31.4\n4.4\n29%\n109.1\n-6.0%\n\n2019\n67.8\n66%\n34.8\n3.4\n34%\n102.6\n-6.0%\n\n2020\n59.5\n58%\n42.7\n7.9\n42%\n102.2\n-0.4%\n\n2021\n55.1\n52%\n51.9\n9.2\n48%\n107.0\n4.8%\n\n2022\n57.3\n49%\n59.7\n7.8\n51%\n117.0\n9.3%\n\nSep-22\n59.7\n49%\n61.3\n1.6\n51%\n121.0\n8.3%\n\nO365 Units Up for Renewal\nRenew"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": ".2\n-0.4%\n\n2021\n55.1\n52%\n51.9\n9.2\n48%\n107.0\n4.8%\n\n2022\n57.3\n49%\n59.7\n7.8\n51%\n117.0\n9.3%\n\nSep-22\n59.7\n49%\n61.3\n1.6\n51%\n121.0\n8.3%\n\nO365 Units Up for Renewal\nRenewal Rate\nRenewal O365 Units\nYoY\nNew O365 Units\nYoY\nTotal O365 Units Billed\nYoY\n\n23.0\n75%\n17.3\n52.2%\n9.7\n-17.3%\n26.9\n16.9%\n\n26.9\n75%\n20.2\n16.9%\n11.1\n15.3%\n31.3\n16.3%\n\n31.3\n75%\n23.5\n16.3%\n11.2\n0.9%\n34.7\n10.8%\n\n34.7\n73%\n25.3\n7.6%\n17.36\n54.5%\n42.6\n22.7%\n\n42.6\n75%\n32.0\n26.5%\n19.86\n14.4%\n51.8\n21.6%\n\n51.8\n75%\n38.9\n21.6%\n20.76\n4.5%\n59.6\n15.0%\n\n13.7\n75%\n10.3\n19.1%\n5.03\n-1.0%\n15.3\n11.7%\n\n15.1\n75%\n11.4\n17.9%\n5.68\n3.2%\n17.0\n12.6%\n\n17.0\n75%\n12.7\n13.4%\n5.44\n-5.2%\n18.2\n7.1%\n\n13.8\n75%\n10.4\n10.4%\n5.16\n16.4%\n15.5\n12.3%\n\n59.6\n75%\n44.7\n15.0%\n21.31\n2.6%\n66.0\n10.7%\n\n15.3\n74%\n11.3\n10.2%\n5.49\n9.0%\n16.8\n9.8%\n\n17.0\n74%\n12.6\n11.1%\n5.53\n-2.7%\n18.1\n6.5%\n\n18.2\n74%\n13.4\n5.6%\n5.02\n-7.7%\n18.5\n1.7%\n\n15.5\n74%\n11.5\n10.8%\n4.54\n-12.0%\n16.0\n3.2%\n\n66.0\n74%\n48.9\n9.3%\n20.57\n-3.5%\n69.4\n5.1%\n\n69.4\n72%\n50.0\n2.3%\n22.89\n11.2%\n72.9\n5.0%\n\n72.9\n72%\n52.5\n5.0%\n22.41\n-2.1%\n74.9\n2.7%\n\n74.9\n72%\n53.9\n2.7%\n22.97\n2.5%\n76.9\n2.7%\n\nO365 Avg. ASP\nO365 Billings\nYoY\nO365 Home Premium Revenue\nYoY\n% of Billings\n\n$73\n$1,954\n16.9%\n$1,847\n14.8%\n\n$73\n$2,273\n16.3%\n$2,157\n16.8%\n\n$73\n$2,519\n10.8%\n$2,440\n13.1%\n\n$75\n$3,187\n26.5%\n$2,857\n17.1%\n\n$75\n$3,889\n22.0%\n$3,653\n27.8%\n\n$74\n$4,428\n13.9%\n$4,259\n16.6%\n\n$74\n$1,134\n10.2%\n$1,133\n11.8%\n100%\n\n$65\n$1,109\n-1.0%\n$1,130\n7.4%\n102%\n\n$65\n$1,183\n-5.8%\n$1,112\n2.4%\n94%\n\n$74\n$1,142\n11.7%\n$1,142\n3.2%\n100%\n\n$69\n$4,569\n3.2%\n$4,518\n6.1%\n\n$73\n$1,221\n7.7%\n$1,164\n2.7%\n95%\n\n$67\n$1,208\n8.9%\n$1,188\n5.1%\n98%\n\n$67\n$1,231\n4.1%\n$1,201\n7.9%\n98%\n\n$76\n$1,212\n6.2%\n$1,218\n6.7%\n100%\n\n$70\n$4,873\n6.7%\n$4,771\n5.6%\n\n$65\n$4,753\n-2.5%\n$4,836\n1.3%\n\n$64\n$4,793\n0.8%\n$4,745\n-1.9%\n\n$64\n$4,921\n2.7%\n$4,873\n2.7%\n\n10.7\n\n11.1\n4.0%\n50.0%\n$180\n0.0%\n$2,003\n4.0%\n\n11.0\n-1.0%\n49.5"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "2.5%\n$4,836\n1.3%\n\n$64\n$4,793\n0.8%\n$4,745\n-1.9%\n\n$64\n$4,921\n2.7%\n$4,873\n2.7%\n\n10.7\n\n11.1\n4.0%\n50.0%\n$180\n0.0%\n$2,003\n4.0%\n\n11.0\n-1.0%\n49.5%\n$180\n0.0%\n$1,982\n-1.0%\n\n11.3\n2.5%\n39.4%\n$180\n0.0%\n$2,032\n2.5%\n\n9.6\n-14.8%\n32.6%\n$180\n0.0%\n$1,732\n-14.8%\n\n9.6\n-0.4%\n31.6%\n$180\n0.0%\n$1,725\n-0.4%\n\n2.3\n-4.7%\n\n3.0\n-12.7%\n\n1.8\n-6.0%\n\n1.8\n-3.0%\n\n$180\n0.0%\n$419\n-4.7%\n\n$167\n-7.0%\n$497\n-18.8%\n\n$171\n-5.1%\n$312\n-10.8%\n\n$171\n-5.1%\n$299\n-8.0%\n\n8.9\n-7.5%\n29.4%\n$172\n-4.4%\n$1,526\n-11.5%\n\n9.0\n1.7%\n30.5%\n$165\n-4.3%\n$1,486\n-2.6%\n\n9.2\n2.0%\n28.7%\n$164\n-0.6%\n$1,506\n1.4%\n\n9.4\n2.0%\n29.5%\n$165\n1.0%\n$1,552\n3.0%\n\n9.6\n2.0%\n29.4%\n$167\n1.0%\n$1,599\n3.0%\n\nOffice Units Shipped (M)\nYoY\n% Total Office Units Shipped\nASP\nYoY\nConsumer Office (non-O365)\nYoY\nTotal Office Units Sold (Office + O365)\nYoY\n% O365\n\n52.5%\n$180\n$1,926\n\nDec-22 Mar-23E Jun-23E\n60.3\n61.5\n62.1\n49%\n49%\n48%\n63.2\n64.4\n66.1\n1.9\n1.2\n1.7\n51%\n51%\n52%\n123.5\n125.9\n128.2\n7.5%\n7.8%\n9.5%\n\n2023E\nSep-23E Dec-23E Mar-24E Jun-24E\n62.1\n64.4\n65.1\n66.3\n66.9\n48%\n49%\n49%\n49%\n49%\n66.1\n67.6\n68.7\n69.0\n69.5\n6.4\n1.5\n1.1\n0.3\n0.5\n52%\n51%\n51%\n51%\n51%\n128.2\n132.0\n133.8\n135.3\n136.4\n9.5%\n9.1%\n8.3%\n7.4%\n6.4%\n\n2.4\n1.5%\n\n3.0\n1.5%\n\n1.9\n1.5%\n\n1.8\n2.5%\n\n$172\n-4.2%\n$407\n-2.8%\n\n$164\n-2.1%\n$493\n-0.7%\n\n$159\n-6.9%\n$295\n-5.5%\n\n$162\n-5.1%\n$291\n-2.7%\n\n20.4\n\n22.3\n9.3%\n50%\n\n22.2\n-0.1%\n51%\n\n28.6\n28.8%\n61%\n\n29.5\n2.9%\n67%\n\n30.3\n2.9%\n68%\n\n7.4\n-2.2%\n68%\n\n8.7\n-2.9%\n66%\n\n7.3\n-5.4%\n75%\n\n6.9\n10.8%\n75%\n\n30.2\n-0.5%\n71%\n\n7.8\n6.6%\n70%\n\n8.5\n-1.3%\n65%\n\n6.9\n-5.4%\n73%\n\n6.3\n-8.3%\n72%\n\n29.6\n-2.0%\n70%\n\n32.1\n8.4%\n71%\n\n31.8\n-0.9%\n70%\n\n32.5\n2.4%\n71%\n\nTotal Consumer Office Revenue\nYoY\n% O365\n\n$3,773\n\n$4,160\n10%\n52%\n\n$4,422\n6%\n55%\n\n$4,890\n11%\n58%\n\n$5,385\n10%\n68%\n\n$5,984\n11%\n71%\n\n$1,552\n7%\n73%\n\n$1,627\n-2%\n69%\n\n$1,424\n-1%\n78%\n\n$1,441\n1%\n79%\n\n$6,044\n1%\n75%\n\n$1,571\n1%\n74%\n\n$1,682\n3%\n71%\n\n$1,495\n5%\n80%\n\n$1,509\n5%\n81%\n\n$6,257\n4%\n76%\n\n$6,342\n1%\n76%\n\n$6,297\n-1%\n75%"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": ",627\n-2%\n69%\n\n$1,424\n-1%\n78%\n\n$1,441\n1%\n79%\n\n$6,044\n1%\n75%\n\n$1,571\n1%\n74%\n\n$1,682\n3%\n71%\n\n$1,495\n5%\n80%\n\n$1,509\n5%\n81%\n\n$6,257\n4%\n76%\n\n$6,342\n1%\n76%\n\n$6,297\n-1%\n75%\n\n$6,472\n3%\n75%\n\nGross Subscription Impact\nNet Subscription Impact\n\n($4,851)\n$107.6\n\n($5,643)\n$152.1\n\n($6,255)\n$416.8\n\n($7,677)\n($267.2)\n\n($9,333) ($10,737)\n$78.0\n$521.9\n\n($2,759)\n$227.4\n\n($2,852)\n$178.9\n\n($3,102)\n$183.2\n\n($2,650) ($11,362)\n$261.9\n$851.4\n\n($2,902)\n$218.0\n\n($2,971)\n$282.6\n\n($2,934)\n$402.4\n\n($2,597) ($11,404) ($11,933) ($12,383) ($12,841)\n$483.1 $1,386.1 $1,088.8 $1,039.5 $1,036.9\n\nMicrosoft Cloud / Commercial Cloud\nCommercial Revenue Estimate\nCommercial Annuity %\nAnnuity Non Commercial Cloud\nRecurring Other than Annuity On-prem Estimate\nRecurring Revenue Estimate\nRecurring Revenue as % of Total\nCommercial Rev YoY %\n\n$15,072\n$58,484\n$52,635\n$37,563\n$20,098\n$57,661\n59.7%\n\n$26,760\n$69,728\n$62,755\n$35,995\n$32,712\n$68,707\n62.3%\n\n$38,213\n$81,198\n$73,078\n$34,865\n$45,162\n$80,026\n63.6%\n\n$51,655 $69,057 $91,300\n$95,755 $113,454 $136,716\n$87,137 $103,243 $131,247\n$35,482 $34,185 $39,947\n$59,491 $78,830 $101,843\n$94,973 $113,016 $141,790\n66.4%\n67.2%\n71.5%\n17.9%\n18.5%\n20.5%\n\n$25,700\n$36,362\n$34,544\n$8,844\n$28,257\n$37,102\n74.0%\n15.8%\n\n$27,100\n$37,322\n$35,829\n$8,729\n$29,927\n$38,657\n73.3%\n13.5%\n\n$28,195\n$38,839\n$37,285\n$9,090\n$30,756\n$39,846\n78.2%\n12.3%\n\n$30,486 $111,481\n$43,859 $156,383\n$42,104 $150,127\n$11,619 $38,646\n$33,068 $122,009\n$44,687 $160,655\n79.5%\n76.5%\n15.9%\n14.4%\n\n$31,613\n$42,408\n$40,712\n$9,099\n$34,273\n$43,372\n78.2%\n16.6%\n\n$33,343\n$43,733\n$41,984\n$8,641\n$36,347\n$44,988\n76.8%\n17.2%\n\n$34,628\n$45,537\n$43,716\n$9,087\n$37,393\n$46,481\n79.4%\n17.2%\n\n$37,669 $137,254 $170,355 $209,987 $256,607\n$51,402 $183,081 $217,217 $257,593 $304,930\n$49,346 $175,757 $208,528 $247,289 $292,733\n$11,677 $38,503 $38,173 $37,303 $36,125\n$40,443 $148,456 $182,008 $221,890 $268,996\n$52,119 $186,960 $220,181 $259,192 $305,121\n80.6%\n78.8%\n79.9%\n81.1%\n82.3%\n17.2%\n17.1%\n18.6%\n18.6%\n18.4%\n\nSource: Company data, Morgan Stanley Research estimates\n\n9\n\n\fExhibit 5: MSFT: Balance Sheet\n(US$ in Millions, Except per Share Data)\n\nFY\n2021\nAssets:\nCash & Cash Equivalents\n$14,224\nShort-Term Investments\n116,110\nAccounts Receivable\n38,043\nInventory\n2,636\nCurrent Deferred Taxes\n0\nOther\n13,393\nCurrent Assets\n$184,406\nProperty & Equipment\n59,715\nEquity and Other Investments\n5,984\nGoodwill\n49,711\nOther Intangibles\n7,800\nLong-Term Deferred Taxes\n0\nOther Assets\n26,163\nTotal Assets\n$333,779\nLiabilities& Equity:\nAccounts Payable\n$15,163"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": ",043\nInventory\n2,636\nCurrent Deferred Taxes\n0\nOther\n13,393\nCurrent Assets\n$184,406\nProperty & Equipment\n59,715\nEquity and Other Investments\n5,984\nGoodwill\n49,711\nOther Intangibles\n7,800\nLong-Term Deferred Taxes\n0\nOther Assets\n26,163\nTotal Assets\n$333,779\nLiabilities& Equity:\nAccounts Payable\n$15,163\nST Debt\n$8,072\nAccrued Compensation and Benefits 10,057\nCurrent Income Taxes\n2,174\nCurrent Unearned Revenue\n41,525\nCurrent Deferred Taxes\n0\nSecurities Lending Payable\n0\nOther\n11,666\nTotal Current Liabilities\n$88,657\nLong-Term Unearned Revenue\n2,616\nOther Long-Term Liabilities\n50,444\nLong term Debt\n50,074\nMinority Interest\n0\nTotal Liabilities\n$191,791\nPreferred Stock\n0\nCommon Stock and Paid-In Capital 83,111\nRetained Earnings\n57,055\nAccumulated Other Comprehensive Income\n1,822\nShareholders' Equity\n$141,988\nTotal Liabilities& Equity\n$333,779\n\nFY\n2022\n\nSep-22\n\nDec-22\n\nMar-23E\n\nJun-23E\n\nFY\n2023E\n\nSep-23E\n\nDec-23E\n\nMar-24E\n\nJun-24E\n\nFY\n2024E\n\nFY\n2025E\n\nFY\n2026E\n\nFY\n2027E\n\n$13,931\n90,826\n44,261\n3,742\n0\n16,924\n$169,684\n74,398\n6,891\n67,524\n11,298\n0\n35,045\n$364,840\n\n$22,884\n84,378\n31,279\n4,268\n0\n18,003\n$160,812\n77,037\n6,839\n67,459\n10,808\n0\n36,829\n$359,784\n\n$15,646\n83,862\n35,833\n2,980\n0\n19,502\n$157,823\n82,755\n7,097\n67,905\n10,354\n0\n38,618\n$364,552\n\n$8,000\n104,170\n34,206\n3,838\n1,200\n14,684\n$166,098\n87,897\n7,398\n67,905\n10,073\n0\n38,911\n$378,282\n\n$8,000\n113,555\n48,590\n4,243\n1,200\n17,261\n$192,849\n90,639\n7,699\n67,905\n9,787\n0\n35,440\n$404,319\n\n$8,000\n113,555\n48,590\n4,243\n1,200\n17,261\n$192,849\n90,639\n7,699\n67,905\n9,787\n0\n35,440\n$404,319\n\n$8,000\n114,505\n36,407\n4,417\n1,200\n19,459\n$183,988\n95,006\n8,000\n67,905\n8,853\n0\n40,334\n$404,087\n\n$8,000\n115,713\n37,245\n3,819\n1,200\n20,555\n$186,533\n99,233\n8,301\n67,905\n7,914\n0\n46,338\n$416,223\n\n$8,000\n125,554\n39,966\n5,360\n1,200\n16,503\n$196,582\n103,480\n8,602\n67,905\n6,969\n0\n43,953\n$427,491\n\n$8,000\n135,408\n56,555\n5,289\n1,200\n19,478\n$225,930\n109,066\n8,903\n67,905\n6,020\n0\n41,281\n$459,105\n\n$8,000\n135,408\n56,555\n5,289\n1,200\n19,478\n$225,930\n109,066\n8,903\n67,905\n6,020\n0\n41,281\n$459,105\n\n$8,500\n170,354\n65,533\n6,839\n1,200\n23,274\n$275,700\n130,234\n10,107\n67,905\n3,815\n0\n46,172\n$533,934\n\n$9,000\n216,840\n75,811\n7,887\n1,200\n27,593\n$338,331\n153,892\n11,311\n67,905\n2,914\n0\n49,919\n$624,272\n\n$9,500\n275,848\n87,914\n9,030\n1,200\n32,939\n$416,430\n179,928\n12,515\n67,905\n3,276\n0\n54,192\n$734,246\n\n$19,000\n$2,749\n10,661\n4,067\n45,538\n0\n0\n13,067\n$95,082\n2,870\n53,314\n47,032\n0\n$198,298\n0\n86,939\n84,281\n(4"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "939\n$416,430\n179,928\n12,515\n67,905\n3,276\n0\n54,192\n$734,246\n\n$19,000\n$2,749\n10,661\n4,067\n45,538\n0\n0\n13,067\n$95,082\n2,870\n53,314\n47,032\n0\n$198,298\n0\n86,939\n84,281\n(4,678)\n$166,542\n$364,840\n\n$16,609\n$3,248\n7,405\n6,729\n41,340\n0\n0\n12,058\n$87,389\n2,549\n50,906\n45,374\n0\n$186,218\n0\n88,535\n92,374\n(7,343)\n$173,566\n$359,784\n\n$15,354\n$3,997\n9,030\n3,553\n36,982\n0\n0\n12,802\n$81,718\n2,644\n52,935\n44,119\n0\n$181,416\n0\n90,225\n99,368\n(6,457)\n$183,136\n$364,552\n\n$15,516\n$3,997\n9,995\n4,752\n35,254\n0\n0\n13,080\n$82,595\n3,487\n56,122\n44,119\n0\n$186,323\n0\n93,111\n105,304\n(6,457)\n$191,959\n$378,282\n\n$20,360\n$3,997\n11,482\n5,845\n45,866\n0\n0\n13,328\n$100,877\n4,536\n52,730\n43,119\n0\n$201,263\n0\n96,011\n113,502\n(6,457)\n$203,056\n$404,319\n\n$20,360\n$3,997\n11,482\n5,845\n45,866\n0\n0\n13,328\n$100,877\n4,536\n52,730\n43,119\n0\n$201,263\n0\n96,011\n113,502\n(6,457)\n$203,056\n$404,319\n\n$17,533\n$3,997\n7,777\n9,389\n41,877\n0\n0\n12,663\n$93,236\n4,142\n49,920\n41,807\n0\n$189,105\n0\n98,923\n122,517\n(6,457)\n$214,982\n$404,087\n\n$16,084\n$3,997\n10,393\n6,437\n37,978\n0\n0\n14,734\n$89,623\n3,756\n56,096\n40,494\n0\n$189,969\n0\n101,848\n130,864\n(6,457)\n$226,255\n$416,223\n\n$16,908\n$3,997\n10,799\n7,245\n37,091\n0\n0\n14,132\n$90,172\n3,668\n56,530\n39,182\n0\n$189,552\n0\n104,785\n139,610\n(6,457)\n$237,939\n$427,491\n\n$23,245\n$3,997\n12,515\n8,678\n48,286\n0\n0\n14,527\n$111,248\n4,776\n53,197\n37,869\n0\n$207,089\n0\n107,736\n150,737\n(6,457)\n$252,016\n$459,105\n\n$23,245\n$3,997\n12,515\n8,678\n48,286\n0\n0\n14,527\n$111,248\n4,776\n53,197\n37,869\n0\n$207,089\n0\n107,736\n150,737\n(6,457)\n$252,016\n$459,105\n\n$25,925\n$3,997\n14,462\n10,196\n50,656\n0\n0\n16,788\n$122,023\n5,010\n58,642\n35,619\n0\n$221,294\n0\n119,671\n199,426\n(6,457)\n$312,640\n$533,934\n\n$29,750\n$3,997\n16,600\n11,934\n53,152\n0\n0\n19,268\n$134,701\n5,257\n64,755\n32,619\n0\n$237,332\n0\n131,819\n261,578\n(6,457)\n$386,940\n$624,272\n\n$33,892\n$3,997\n19,204\n14,054\n55,780\n0\n0\n22,292\n$149,220\n5,517\n72,513\n28,619\n0\n$255,868\n0\n144,185\n340,649\n(6,457)\n$478,378\n$734,246\n\nSource: Company data, Morgan Stanley Research estimates\n\nExhibit 6: MSFT: Cash Flow Statement\n(US$ in Millions, Except per Share Data)\n\nFY\n2021\nNet Income\n$61,271\nDepreciation and Amortization\n11,686\nStock-Based"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "72,513\n28,619\n0\n$255,868\n0\n144,185\n340,649\n(6,457)\n$478,378\n$734,246\n\nSource: Company data, Morgan Stanley Research estimates\n\nExhibit 6: MSFT: Cash Flow Statement\n(US$ in Millions, Except per Share Data)\n\nFY\n2021\nNet Income\n$61,271\nDepreciation and Amortization\n11,686\nStock-Based Compensation\n6,118\nTax Benefit from Exercise of Stock Options\n0\nDeferred Taxes\n(150)\n(Gain) / Loss on Sale of Short-Term Investments (1,249)\nAcquired In-Process R&D\n0\nCumulative Change in Accounting\n0\nOther Items\n0\nFundsfrom Operations\n$77,676\n(Inc.) Dec. in Accounts Receivable\n(6,481)\n(Inc.) Dec. in Other Current Assets\n(1,669)\n(Inc.) Dec. in Other Long-Term Assets\n(3,459)\nInc. (Dec.) in Other Current Liabilities\n6,947\nInc. (Dec.) in Other Long-Term Liabilities\n(907)\nBooking of Unearned Revenue\n94,237\nRecognition of Unearned Revenue\n(89,604)\nChange in Net Working Capital\n($936)\nCash Flow from Operations\n$76,740\nYoY Growth\n26%\n\nFY\n2022\n$72,738\n14,460\n7,502\n0\n(5,702)\n(409)\n0\n0\n0\n$88,589\n(6,834)\n(1,832)\n(2,805)\n5,287\n1,521\n111,297\n(106,188)\n$446\n$89,035\n16%\n\nSep-22\nDec-22\nMar-23E\n$17,556\n$16,425\n$16,624\n2,790\n3,648\n2,226\n2,192\n2,538\n2,551\n0\n0\n0\n(1,191)\n(1,305)\n(1,200)\n(22)\n214\n0\n0\n0\n0\n0\n0\n0\n0\n0\n$21,325\n$21,520\n$20,201\n11,729\n(3,164)\n1,627\n(875)\n913\n3,960\n(666)\n(65)\n(293)\n(5,591)\n(239)\n2,605\n598\n(2,606)\n3,187\n24,774\n23,688\n28,290\n(28,096)\n(28,874)\n(29,175)\n$1,873\n($10,347)\n$10,202\n$23,198\n$11,173\n$30,403\n-5%\n-23%\n20%\n\nJun-23E\n$19,051\n5,988\n2,563\n0\n0\n0\n0\n0\n$27,602\n(14,384)\n(2,982)\n3,471\n7,670\n(3,392)\n42,356\n(30,694)\n$2,044\n$29,646\n20%\n\nFY\n2023E\n$69,656\n14,652\n9,844\n0\n(3,696)\n192\n0\n0\n0\n$90,648\n(4,192)\n1,016\n2,447\n4,445\n(2,213)\n119,108\n(116,840)\n$3,772\n$94,420\n6%\n\nCapital Expenditures\n(20,622)\nAcquisitions, Net of Cash Acquired\n(8,909)\nPurchase of Short-Term Investments\n(62,924)\nProceeds from Sales/Maturities of Short-Term Investments\n65,800\nProceeds from Sales/Maturities of Long-Term Investments\n0\nOther\n(922)\nNet Cash Used in Investing Activities\n($27,577)\nDebt issuance (repayment)\n(5,504)\nCommon Stock Dividends\n(16,521)\nProceeds from Sale of Common Stock\n1,693\nRepurchase of Common Stock (Treasury Shares) (27,385)\nOther\n(769)\nNet Cash Provided by Financing Activities ($48,486)\nTranslation Gains (Losses)\n(29)\nInc. (Dec.) in Cash and Cash Equivalents\n$648\nBeginning Cash and Cash Equivalents\n13,576\nEnding Cash and Cash Equivalents\n$14,224\n\n(23,886)\n(22,038)\n(26,456)\n44,894\n0\n(2,825)\n($30,311)\n(9,023)\n(18,135)\n1,841\n(32,696)\n(863)\n($58,876)\n(141)\n($293)\n14,224\n$13,931\n\n(6,283)\n(349)\n(5,013)\n9,373\n0\n(860)\n($3,132)\n(1,000)\n(4,621)\n575\n(5,573)\n(264)\n($10,883)\n(230)\n$8,953\n13,931\n$22,884\n\n(7,764)\n(679)\n(51,885)\n42,500\n0\n(301)\n($18,129)\n(1,000)\n(5,059)\n336\n(5,794)\n0\n($11,517)\n0\n$0\n8,000\n$8,000\n\n(26,729)\n(2,386)\n(131,305)\n106,076\n0\n(1,763"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "13,931\n$22,884\n\n(7,764)\n(679)\n(51,885)\n42,500\n0\n(301)\n($18,129)\n(1,000)\n(5,059)\n336\n(5,794)\n0\n($11,517)\n0\n$0\n8,000\n$8,000\n\n(26,729)\n(2,386)\n(131,305)\n106,076\n0\n(1,763)\n($56,107)\n(2,750)\n(19,808)\n1,490\n(22,452)\n(581)\n($44,101)\n(142)\n($5,931)\n13,931\n$8,000\n\nFree Cash Flow\nYoY\n\n56,118\n24%\n\n65,149\n16%\n\n16,915\n-10%\n\n(6,274)\n(679)\n(11,599)\n11,703\n0\n(301)\n($7,150)\n(750)\n(5,066)\n243\n(5,459)\n(317)\n($11,349)\n88\n($7,238)\n22,884\n$15,646\n\n4,899\n-43%\n\n(6,408)\n(679)\n(62,808)\n42,500\n0\n(301)\n($27,696)\n0\n(5,063)\n336\n(5,625)\n0\n($10,352)\n0\n($7,646)\n15,646\n$8,000\n\n23,995\n20%\n\n21,882\n23%\n\n67,690\n4%\n\nSep-23E\n$20,448\n4,066\n2,576\n0\n0\n0\n0\n0\n\nDec-23E\n$19,661\n4,202\n2,589\n0\n0\n0\n0\n0\n\nMar-24E\n$20,228\n4,338\n2,602\n0\n0\n0\n0\n0\n\n$27,091\n12,182\n(2,371)\n(4,895)\n(3,652)\n(2,810)\n25,961\n(30,344)\n($5,929)\n$21,162\n-9%\n\n$26,452\n(838)\n(499)\n(6,003)\n286\n6,175\n26,899\n(31,184)\n($5,163)\n$21,288\n91%\n\n$27,169\n(2,720)\n2,512\n2,385\n1,437\n434\n30,534\n(31,509)\n$3,073\n$30,242\n-1%\n\nFY\nFY\nFY\nFY\n2024E\n2025E\n2026E\n2027E\n$83,121\n$97,958\n$115,030\n$135,813\n17,144\n19,289\n21,903\n24,924\n10,383\n10,592\n10,805\n11,023\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n$29,935\n$110,647\n$127,838\n$147,739\n$171,759\n(16,590)\n(7,966)\n(8,978)\n(10,278)\n(12,103)\n(2,905)\n(3,263)\n(5,346)\n(5,366)\n(6,489)\n2,672\n(5,841)\n(4,891)\n(3,747)\n(4,273)\n9,880\n7,951\n8,405\n10,182\n11,890\n(3,333)\n467\n5,445\n6,114\n7,758\n45,452\n128,846\n138,886\n149,927\n161,848\n(33,150)\n(126,187)\n(136,282)\n(147,184)\n(158,959)\n$2,027\n($5,993)\n($2,761)\n($353)\n($328)\n$31,962\n$104,654\n$125,078\n$147,386\n$171,431\n8%\n11%\n20%\n18%\n16%\n\n(7,100)\n(400)\n(43,450)\n42,500\n0\n(301)\n($8,751)\n(1,313)\n(5,561)\n336\n(5,873)\n0\n($12,410)\n0\n$0\n8,000\n$8,000\n\n(7,090)\n(400)\n(43,708)\n42,500\n0\n(301)\n($8,999)\n(1,313)\n(5,557)\n336\n(5,756)\n0\n($12,290)\n0\n($0)\n8,000\n$8,000\n\n(7,241)\n(400)\n(52,341)\n42,500\n0\n(301)\n($17,783)\n(1,313)\n(5,554)\n336\n(5,928)\n0\n($12,459)\n0\n$0\n8,000\n$8,000\n\n(8,774)\n(400)\n(52,354)\n42,500\n0\n(301)\n($19,328)\n(1,313)\n(5,551)\n336\n(6,106)\n0\n($12,634)\n0\n($0)\n8,000\n$8,000\n\n14,062\n-17%\n\n14,199\n190%\n\n23,001\n-4%\n\nJun-"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "$0\n8,000\n$8,000\n\n(8,774)\n(400)\n(52,354)\n42,500\n0\n(301)\n($19,328)\n(1,313)\n(5,551)\n336\n(6,106)\n0\n($12,634)\n0\n($0)\n8,000\n$8,000\n\n14,062\n-17%\n\n14,199\n190%\n\n23,001\n-4%\n\nJun-24E\n$22,783\n4,537\n2,615\n0\n0\n0\n0\n0\n\n23,189\n6%\n\n(30,204)\n(1,600)\n(191,853)\n170,000\n0\n(1,204)\n($54,861)\n(5,250)\n(22,223)\n1,343\n(23,663)\n0\n($49,793)\n0\n($0)\n8,000\n$8,000\n\n74,450\n10%\n\n(34,131)\n(4,122)\n(204,946)\n170,000\n0\n(1,204)\n($74,402)\n(2,250)\n(24,397)\n1,343\n(24,872)\n0\n($50,176)\n0\n$500\n8,000\n$8,500\n\n90,947\n22%\n\n(38,226)\n(6,435)\n(216,486)\n170,000\n0\n(1,204)\n($92,351)\n(3,000)\n(26,798)\n1,343\n(26,080)\n0\n($54,535)\n0\n$500\n8,500\n$9,000\n\n109,160\n20%\n\n(42,431)\n(8,889)\n(229,008)\n170,000\n0\n(1,204)\n($111,533)\n(4,000)\n(29,452)\n1,343\n(27,289)\n0\n($59,398)\n0\n$500\n9,000\n$9,500\n\n129,000\n18%\n\nSource: Company data, Morgan Stanley Research estimates\n\n10\n\n\fDisclosure Section\nThe information and opinions in Morgan Stanley Research were prepared by Morgan Stanley & Co. LLC, and/or Morgan Stanley C.T.V.M. S.A., and/or Morgan\nStanley Mexico, Casa de Bolsa, S.A. de C.V., and/or Morgan Stanley Canada Limited. As used in this disclosure section, \"Morgan Stanley\" includes Morgan\nStanley & Co. LLC, Morgan Stanley C.T.V.M. S.A., Morgan Stanley Mexico, Casa de Bolsa, S.A. de C.V., Morgan Stanley Canada Limited and their affiliates\nas necessary.\nFor important disclosures, stock price charts and equity rating histories regarding companies that are the subject of this report, please see the Morgan\nStanley Research Disclosure Website at www.morganstanley.com/researchdisclosures, or contact your investment representative or Morgan Stanley\nResearch at 1585 Broadway, (Attention: Research Management), New York, NY, 10036 USA.\nFor valuation methodology and risks associated with any recommendation, rating or price target referenced in this research report, please contact the Client\nSupport Team as follows: US/Canada +1 800 303-2495; Hong Kong +852 2848-5999; Latin America +1 718 754-5444 (U.S.); London +44 (0)20-7425-8169;\nSingapore +65 6834-6860; Sydney +61 (0)2-9770-1505; Tokyo +81 (0)3-6836-9000. Alternatively you may contact your investment representative or Morgan\nStanley Research at 1585 Broadway, (Attention: Research Management), New York, NY 10036 USA.\n\nAnalyst Certification\nThe following analysts hereby certify that their views about the companies and their securities discussed in this report are accurately expressed and that they\nhave not received and will not receive direct or indirect compensation in exchange for expressing specific recommendations or views in this report: Keith\nWeiss, CFA.\n.\n\nGlobal Research Conflict Management Policy\nMorgan Stanley Research has been published in accordance with our conflict management policy, which is available at\nwww.morganstanley.com/institutional/research/conflictpolicies. A Portuguese version of the policy can be found at www.morganstanley.com.br\n\nImportant Regulatory Disclosures on Subject Companies\nThe analyst or strategist (or a household member) identified below owns the following securities (or related derivatives): Ryan A Bressner - Microsoft(common\nor preferred stock), Salesforce.com(common or preferred stock); Theodor J Thun - Microsoft(common or preferred stock), Snowflake Inc.(common or preferred\nstock), Twilio Inc(common or preferred stock).\nAs of December 30, 2022, Morgan Stanley beneficially owned 1% or more of a class of common equity securities of the following companies covered in\nMorgan Stanley Research: 2u Inc, 8x8 Inc, Adobe Inc., Akamai Technologies, Inc., Appian Corp, Autodesk, BigCommerce Holdings, Inc., Bill.com Holdings,\nBox Inc, Chegg Inc, Cloudflare Inc, Confluent, Inc., Couchbase, Inc., Coupa Software Inc, CrowdStrike Holdings Inc, CyberArk Software Ltd, Datadog, Inc.,\nDocuSign Inc, Domo Inc, Fastly Inc., Five9 Inc, ForgeRock Inc, Freshworks Inc, GoDaddy Inc, HashiCorp, Intuit, Liveramp Holdings Inc, Microsoft, MongoDB\nInc, Okta, Inc., PagerDuty, Inc., Palo Alto Networks Inc, Qualys Inc, Rapid7 Inc, RingCentral Inc, Sabre"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "., Coupa Software Inc, CrowdStrike Holdings Inc, CyberArk Software Ltd, Datadog, Inc.,\nDocuSign Inc, Domo Inc, Fastly Inc., Five9 Inc, ForgeRock Inc, Freshworks Inc, GoDaddy Inc, HashiCorp, Intuit, Liveramp Holdings Inc, Microsoft, MongoDB\nInc, Okta, Inc., PagerDuty, Inc., Palo Alto Networks Inc, Qualys Inc, Rapid7 Inc, RingCentral Inc, Sabre Corp, Salesforce.com, Samsara Inc, Semrush\nHoldings Inc -A, SentinelOne, Inc., ServiceNow Inc, Shopify Inc, Snowflake Inc., Splunk Inc, Sprout Social Inc, Sumo Logic Inc, Twilio Inc, Wix.Com Ltd,\nZoom Video Communications Inc, ZoomInfo Technologies Inc, Zscaler Inc.\nWithin the last 12 months, Morgan Stanley managed or co-managed a public offering (or 144A offering) of securities of Workday Inc.\nWithin the last 12 months, Morgan Stanley has received compensation for investment banking services from 2u Inc, Akamai Technologies, Inc., Autodesk,\nCvent, DigitalOcean Holdings Inc, Docebo Inc., Fastly Inc., Gen Digital Inc., GoDaddy Inc, Intuit, KnowBe4, Matterport Inc, Palantir Technologies Inc., Sabre\nCorp, Shopify Inc, Toast, Inc., Workday Inc, ZoomInfo Technologies Inc.\nIn the next 3 months, Morgan Stanley expects to receive or intends to seek compensation for investment banking services from 2u Inc, 8x8 Inc, Adobe Inc.,\nAkamai Technologies, Inc., Alteryx Inc, Amplitude Inc., Appian Corp, Asana Inc, Atlassian Corporation PLC, Autodesk, BigCommerce Holdings, Inc., Bill.com\nHoldings, Box Inc, C3.ai, Check Point Software Technologies Ltd., Chegg Inc, Cloudflare Inc, Confluent, Inc., Couchbase, Inc., Coupa Software Inc, Coursera,\nInc., CrowdStrike Holdings Inc, Cvent, CyberArk Software Ltd, Datadog, Inc., DigitalOcean Holdings Inc, Docebo Inc., DocuSign Inc, Fastly Inc., Five9 Inc,\nForgeRock Inc, Fortinet Inc., Freshworks Inc, Gen Digital Inc., GoDaddy Inc, HashiCorp, HubSpot, Inc., Instructure Holdings Inc, Intuit, JFrog Ltd., Karooooo\nLtd, KnowBe4, LegalZoom.com Inc, Lightspeed POS Inc., Liveramp Holdings Inc, Matterport Inc, Microsoft, MongoDB Inc, New Relic Inc, NICE Ltd., Okta,\nInc., Oracle Corporation, PagerDuty, Inc., Palantir Technologies Inc., Palo Alto Networks Inc, Qualtrics, Qualys Inc, Rapid7 Inc, RingCentral Inc, Sabre Corp,\nSalesforce.com, Samsara Inc, Semrush Holdings Inc -A, SentinelOne, Inc., ServiceNow Inc, Shopify Inc, Smartsheet Inc, Snowflake Inc., Solarwinds Corp,\nSplunk Inc, Sprinklr Inc, Sprout Social Inc, Sumo Logic Inc, Tenable Holdings Inc, Toast, Inc., Twilio Inc, Udemy Inc, UiPath Inc, Varonis Systems, Inc.,\nVertex Inc., WalkMe Ltd, Workday Inc, Zeta Global Holdings Corp, Zoom Video Communications Inc, ZoomInfo Technologies Inc, Zscaler Inc.\nWithin the last 12 months, Morgan Stanley has received compensation for products and services other than investment banking services from Adobe Inc.,\nAkamai Technologies, Inc., Atlassian Corporation PLC, Autodesk, Box Inc, Check Point Software Technologies Ltd., Confluent, Inc., DocuSign Inc,\nFreshworks Inc, Gen Digital Inc., GoDaddy Inc, Intuit, Liveramp Holdings Inc, Microsoft, NICE Ltd., Oracle Corporation, Qualys Inc, RingCentral Inc, Sabre\nCorp, Salesforce.com, Snowflake Inc., Solarwinds Corp, Workday Inc, Zoom Video Communications Inc, Zscaler Inc.\nWithin the last 12 months, Morgan Stanley has provided or is providing investment banking services to, or has an investment banking client relationship with,\nthe following company: 2u Inc, 8x8 Inc, Adobe Inc., Akamai Technologies, Inc., Alteryx Inc, Amplitude Inc., Appian Corp, Asana Inc, Atlassian Corporation\nPLC, Autodesk, BigCommerce Holdings, Inc., Bill.com Holdings, Box Inc, C3.ai, Check Point Software Technologies Ltd., Chegg Inc, Cloudflare Inc,\nConfluent, Inc., Couchbase, Inc., Coupa Software Inc, Coursera, Inc., CrowdStrike Holdings Inc, Cvent, CyberArk Software Ltd, Datadog, Inc., DigitalOcean\nHoldings Inc, Docebo Inc., DocuSign Inc, Fastly Inc., Five9 Inc, ForgeRock Inc, Fortinet Inc., Freshworks Inc, Gen Digital Inc., GoDaddy Inc, HashiCorp,\nHubSpot, Inc., Instructure Holdings Inc, Intuit, JFrog Ltd., Karooooo Ltd, KnowBe4, LegalZoom.com Inc, Lightspeed POS Inc., Liveramp Holdings Inc,\nMatterport Inc, Microsoft, MongoDB Inc, New Relic Inc, NICE Ltd., Okta, Inc., Oracle Corporation, PagerDuty, Inc., Palantir Technologies Inc., Palo Alto\nNetworks Inc, Qualtrics, Qualys Inc, Rapid7 Inc, RingCentral Inc, Sabre Corp, Salesforce.com, Samsara Inc, Semrush Holdings Inc -A, SentinelOne, Inc.,\nServiceNow Inc, Shopify Inc, Smartsheet Inc, Snowflake Inc., Solarwinds Corp, Splunk Inc, Sprinklr Inc"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "NICE Ltd., Okta, Inc., Oracle Corporation, PagerDuty, Inc., Palantir Technologies Inc., Palo Alto\nNetworks Inc, Qualtrics, Qualys Inc, Rapid7 Inc, RingCentral Inc, Sabre Corp, Salesforce.com, Samsara Inc, Semrush Holdings Inc -A, SentinelOne, Inc.,\nServiceNow Inc, Shopify Inc, Smartsheet Inc, Snowflake Inc., Solarwinds Corp, Splunk Inc, Sprinklr Inc, Sprout Social Inc, Sumo Logic Inc, Tenable Holdings\nInc, Toast, Inc., Twilio Inc, Udemy Inc, UiPath Inc, Varonis Systems, Inc., Vertex Inc., WalkMe Ltd, Workday Inc, Zeta Global Holdings Corp, Zoom Video\nCommunications Inc, ZoomInfo Technologies Inc, Zscaler Inc.\nWithin the last 12 months, Morgan Stanley has either provided or is providing non-investment banking, securities-related services to and/or in the past has\nentered into an agreement to provide services or has a client relationship with the following company: 2u Inc, 8x8 Inc, Adobe Inc., Akamai Technologies, Inc.,\nAtlassian Corporation PLC, Autodesk, BigCommerce Holdings, Inc., Box Inc, Check Point Software Technologies Ltd., Chegg Inc, Cloudflare Inc, Confluent,\nInc., Coupa Software Inc, CyberArk Software Ltd, Datadog, Inc., DocuSign Inc, Five9 Inc, Fortinet Inc., Freshworks Inc, Gen Digital Inc., GoDaddy Inc,\nHubSpot, Inc., Intuit, Liveramp Holdings Inc, Microsoft, MongoDB Inc, NICE Ltd., Okta, Inc., Oracle Corporation, PagerDuty, Inc., Palo Alto Networks Inc,\nQualys Inc, RingCentral Inc, Sabre Corp, Salesforce.com, Secureworks Corp, ServiceNow Inc, Shopify Inc, Snowflake Inc., Solarwinds Corp, Splunk Inc, Twilio\nInc, VMware Inc, Wix.Com Ltd, Workday Inc, Zoom Video Communications Inc, Zscaler Inc.\nAn employee, director or consultant of Morgan Stanley is a director of GoDaddy Inc, Tenable Holdings Inc. This person is not a research analyst or a member\nof a research analyst's household.\nMorgan Stanley & Co. LLC makes a market in the securities of 2u Inc, 8x8 Inc, Adobe Inc., Akamai Technologies, Inc., Alteryx Inc, Amplitude Inc., Appian\nCorp, Atlassian Corporation PLC, Autodesk, BigCommerce Holdings, Inc., Box Inc, C3.ai, Check Point Software Technologies Ltd., Chegg Inc, Confluent, Inc.,\n11\n\n\fCouchbase, Inc., Coursera, Inc., CyberArk Software Ltd, Datadog, Inc., DigitalOcean Holdings Inc, Docebo Inc., DocuSign Inc, Domo Inc, Five9 Inc, Fortinet\nInc., Freshworks Inc, Gen Digital Inc., GoDaddy Inc, HashiCorp, Intuit, JFrog Ltd., Karooooo Ltd, KnowBe4, LegalZoom.com Inc, Liveramp Holdings Inc,\nMicrosoft, New Relic Inc, Oracle Corporation, PagerDuty, Inc., Palo Alto Networks Inc, Qualtrics, Qualys Inc, Rapid7 Inc, RingCentral Inc, Sabre Corp,\nSalesforce.com, Secureworks Corp, Semrush Holdings Inc -A, ServiceNow Inc, Shopify Inc, Smartsheet Inc, Solarwinds Corp, Splunk Inc, Sprinklr Inc, Sprout\nSocial Inc, Sumo Logic Inc, Tenable Holdings Inc, Udemy Inc, Varonis Systems, Inc., Vertex Inc., VMware Inc, WalkMe Ltd, Wix.Com Ltd, Workday Inc, Zeta\nGlobal Holdings Corp, Zoom Video Communications Inc, ZoomInfo Technologies Inc, Zscaler Inc.\nThe equity research analysts or strategists principally responsible for the preparation of Morgan Stanley Research have received compensation based upon\nvarious factors, including quality of research, investor client feedback, stock picking, competitive factors, firm revenues and overall investment banking\nrevenues. Equity Research analysts' or strategists' compensation is not linked to investment banking or capital markets transactions performed by Morgan\nStanley or the profitability or revenues of particular trading desks.\nMorgan Stanley and its affiliates do business that relates to companies/instruments covered in Morgan Stanley Research, including market making, providing\nliquidity, fund management, commercial banking, extension of credit, investment services and investment banking. Morgan Stanley sells to and buys from\ncustomers the securities/instruments of companies covered in Morgan Stanley Research on a principal basis. Morgan Stanley may have a position in the debt\nof the Company or instruments discussed in this report. Morgan Stanley trades or may trade as principal in the debt securities (or in related derivatives) that\nare the subject of the debt research report.\nCertain disclosures listed above are also for compliance with applicable regulations in non-US jurisdictions.\n\nSTOCK RATINGS\nMorgan Stanley uses a relative rating system using terms such as Overweight, Equal-weight, Not-Rated or Underweight (see definitions below). Morgan\nStanley does not assign ratings of Buy, Hold or Sell to the stocks we cover. Overweight, Equal-weight, Not-Rated and Underweight are not the equivalent of\nbuy, hold and sell. Investors should carefully read the definitions of all ratings used in Morgan Stanley Research. In addition, since Morgan Stanley Research\ncontains more complete information concerning the analyst's views, investors should carefully read Morgan Stanley Research, in its entirety, and not infer the\ncontents from the rating alone. In any case, ratings (or research) should not be used or relied upon as investment advice. An investor's decision to buy or sell a\nstock should depend on individual circumstances (such as the investor's existing holdings)"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "should carefully read the definitions of all ratings used in Morgan Stanley Research. In addition, since Morgan Stanley Research\ncontains more complete information concerning the analyst's views, investors should carefully read Morgan Stanley Research, in its entirety, and not infer the\ncontents from the rating alone. In any case, ratings (or research) should not be used or relied upon as investment advice. An investor's decision to buy or sell a\nstock should depend on individual circumstances (such as the investor's existing holdings) and other considerations.\n\nGlobal Stock Ratings Distribution\n(as of December 31, 2022)\nThe Stock Ratings described below apply to Morgan Stanley's Fundamental Equity Research and do not apply to Debt Research produced by the Firm.\nFor disclosure purposes only (in accordance with FINRA requirements), we include the category headings of Buy, Hold, and Sell alongside our ratings of\nOverweight, Equal-weight, Not-Rated and Underweight. Morgan Stanley does not assign ratings of Buy, Hold or Sell to the stocks we cover. Overweight,\nEqual-weight, Not-Rated and Underweight are not the equivalent of buy, hold, and sell but represent recommended relative weightings (see definitions below).\nTo satisfy regulatory requirements, we correspond Overweight, our most positive stock rating, with a buy recommendation; we correspond Equal-weight and\nNot-Rated to hold and Underweight to sell recommendations, respectively.\nCOVERAGE UNIVERSE\n\nINVESTMENT BANKING CLIENTS (IBC)\n\nOTHER MATERIAL\nINVESTMENT SERVICES\nCLIENTS (MISC)\n\nSTOCK RATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\n\nCOUNT\n\n% OF\nTOTAL IBC\n\n% OF\nRATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\nOTHER\nMISC\n\nOverweight/Buy\nEqual-weight/Hold\nNot-Rated/Hold\nUnderweight/Sell\n\n1352\n1659\n3\n651\n\n37%\n45%\n0%\n18%\n\n278\n309\n0\n82\n\n42%\n46%\n0%\n12%\n\n21%\n19%\n0%\n13%\n\n593\n735\n0\n224\n\n38%\n47%\n0%\n14%\n\nTOTAL\n\n3,665\n\n669\n\n1552\n\nData include common stock and ADRs currently assigned ratings. Investment Banking Clients are companies from whom Morgan Stanley received investment\nbanking compensation in the last 12 months. Due to rounding off of decimals, the percentages provided in the \"% of total\" column may not add up to exactly\n100 percent.\n\nAnalyst Stock Ratings\nOverweight (O). The stock's total return is expected to exceed the average total return of the analyst's industry (or industry team's) coverage universe, on a\nrisk-adjusted basis, over the next 12-18 months.\nEqual-weight (E). The stock's total return is expected to be in line with the average total return of the analyst's industry (or industry team's) coverage universe,\non a risk-adjusted basis, over the next 12-18 months.\nNot-Rated (NR). Currently the analyst does not have adequate conviction about the stock's total return relative to the average total return of the analyst's\nindustry (or industry team's) coverage universe, on a risk-adjusted basis, over the next 12-18 months.\nUnderweight (U). The stock's total return is expected to be below the average total return of the analyst's industry (or industry team's) coverage universe, on a\nrisk-adjusted basis, over the next 12-18 months.\nUnless otherwise specified, the time frame for price targets included in Morgan Stanley Research is 12 to 18 months.\n\nAnalyst Industry Views\nAttractive (A): The analyst expects the performance of his or her industry coverage universe over the next 12-18 months to be attractive vs. the relevant broad\nmarket benchmark, as indicated below.\nIn-Line (I): The analyst expects the performance of his or her industry coverage universe over the next 12-18 months to be in line with the relevant broad market\nbenchmark, as indicated below.\nCautious (C): The analyst views the performance of his or her industry coverage universe over the next 12-18 months with caution vs. the relevant broad market\nbenchmark, as indicated below.\nBenchmarks for each region are as follows: North America - S&P 500; Latin America - relevant MSCI country index or MSCI Latin America Index; Europe MSCI Europe; Japan - TOPIX; Asia - relevant MSCI country index or MSCI sub-regional index or MSCI AC Asia Pacific ex Japan Index.\n12\n\n\fStock Price, Price Target and Rating History (See Rating Definitions)\n\nImportant Disclosures for Morgan Stanley Smith Barney LLC & E*TRADE Securities LLC Customers\nImportant disclosures regarding the relationship between the companies that are the subject of Morgan Stanley Research and Morgan Stanley Smith Barney\nLLC or Morgan Stanley or any of their affiliates, are available on the Morgan Stanley Wealth Management disclosure website at\nwww.morganstanley.com/online/researchdisclosures. For Morgan Stanley specific disclosures, you may refer to\nwww.morganstanley.com/researchdisclosures.\nEach Morgan Stanley research report is reviewed and approved on behalf of Morgan Stanley Smith Barney LLC and E*TRADE Securities LLC. This review and\napproval is conducted by the same person who reviews the research report on behalf of Morgan Stanley. This could create a conflict of interest.\n\nOther Important Disclosures\nMorgan Stanley & Co. International PLC and its affiliates have a significant financial interest in the debt securities of 2u Inc, Adobe Inc., Akamai Technologies,\nInc., Autodesk, Bill.com Holdings, Box Inc, Chegg Inc, Coupa Software Inc, CrowdStrike Holdings Inc, Cvent, Datadog, Inc., DigitalOcean Holdings Inc,\nDocuSign Inc, Intuit, KnowBe4, LegalZoom.com Inc, Microsoft, N"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "interest.\n\nOther Important Disclosures\nMorgan Stanley & Co. International PLC and its affiliates have a significant financial interest in the debt securities of 2u Inc, Adobe Inc., Akamai Technologies,\nInc., Autodesk, Bill.com Holdings, Box Inc, Chegg Inc, Coupa Software Inc, CrowdStrike Holdings Inc, Cvent, Datadog, Inc., DigitalOcean Holdings Inc,\nDocuSign Inc, Intuit, KnowBe4, LegalZoom.com Inc, Microsoft, NICE Ltd., Okta, Inc., Oracle Corporation, Palantir Technologies Inc., Palo Alto Networks Inc,\nSabre Corp, Salesforce.com, ServiceNow Inc, Splunk Inc, Toast, Inc., VMware Inc, Workday Inc, Zscaler Inc.\nMorgan Stanley Research policy is to update research reports as and when the Research Analyst and Research Management deem appropriate, based on\ndevelopments with the issuer, the sector, or the market that may have a material impact on the research views or opinions stated therein. In addition, certain\nResearch publications are intended to be updated on a regular periodic basis (weekly/monthly/quarterly/annual) and will ordinarily be updated with that\nfrequency, unless the Research Analyst and Research Management determine that a different publication schedule is appropriate based on current conditions.\nMorgan Stanley is not acting as a municipal advisor and the opinions or views contained herein are not intended to be, and do not constitute, advice within the\nmeaning of Section 975 of the Dodd-Frank Wall Street Reform and Consumer Protection Act.\nMorgan Stanley produces an equity research product called a \"Tactical Idea.\" Views contained in a \"Tactical Idea\" on a particular stock may be contrary to the\nrecommendations or views expressed in research on the same stock. This may be the result of differing time horizons, methodologies, market events, or other\nfactors. For all research available on a particular stock, please contact your sales representative or go to Matrix at http://www.morganstanley.com/matrix.\nMorgan Stanley Research is provided to our clients through our proprietary research portal on Matrix and also distributed electronically by Morgan Stanley to\nclients. Certain, but not all, Morgan Stanley Research products are also made available to clients through third-party vendors or redistributed to clients through\nalternate electronic means as a convenience. For access to all available Morgan Stanley Research, please contact your sales representative or go to Matrix at\nhttp://www.morganstanley.com/matrix.\nAny access and/or use of Morgan Stanley Research is subject to Morgan Stanley's Terms of Use (http://www.morganstanley.com/terms.html). By accessing\nand/or using Morgan Stanley Research, you are indicating that you have read and agree to be bound by our Terms of Use\n(http://www.morganstanley.com/terms.html). In addition you consent to Morgan Stanley processing your personal data and using cookies in accordance with\nour Privacy Policy and our Global Cookies Policy (http://www.morganstanley.com/privacy_pledge.html), including for the purposes of setting your preferences\nand to collect readership data so that we can deliver better and more personalized service and products to you. To find out more information about how Morgan\nStanley processes personal data, how we use cookies and how to reject cookies see our Privacy Policy and our Global Cookies Policy\n(http://www.morganstanley.com/privacy_pledge.html).\nIf you do not agree to our Terms of Use and/or if you do not wish to provide your consent to Morgan Stanley processing your personal data or using cookies\nplease do not access our research.\nMorgan Stanley Research does not provide individually tailored investment advice. Morgan Stanley Research has been prepared without regard to the\ncircumstances and objectives of those who receive it. Morgan Stanley recommends that investors independently evaluate particular investments and\nstrategies, and encourages investors to seek the advice of a financial adviser. The appropriateness of an investment or strategy will depend on an investor's\n13\n\n\fcircumstances and objectives. The securities, instruments, or strategies discussed in Morgan Stanley Research may not be suitable for all investors, and\ncertain investors may not be eligible to purchase or participate in some or all of them. Morgan Stanley Research is not an offer to buy or sell or the solicitation\nof an offer to buy or sell any security/instrument or to participate in any particular trading strategy. The value of and income from your investments may vary\nbecause of changes in interest rates, foreign exchange rates, default rates, prepayment rates, securities/instruments prices, market indexes, operational or\nfinancial conditions of companies or other factors. There may be time limitations on the exercise of options or other rights in securities/instruments\ntransactions. Past performance is not necessarily a guide to future performance. Estimates of future performance are based on assumptions that may not be\nrealized. If provided, and unless otherwise stated, the closing price on the cover page is that of the primary exchange for the subject company's\nsecurities/instruments.\nThe fixed income research analysts, strategists or economists principally responsible for the preparation of Morgan Stanley Research have received\ncompensation based upon various factors, including quality, accuracy and value of research, firm profitability or revenues (which include fixed income trading\nand capital markets profitability or revenues), client feedback and competitive factors. Fixed Income Research analysts', strategists' or economists'\ncompensation is not linked to investment banking or capital markets transactions performed by Morgan Stanley or the profitability or revenues of particular\ntrading desks.\nThe \"Important Regulatory Disclosures on Subject Companies\" section in Morgan Stanley Research lists all companies mentioned where Morgan Stanley\nowns 1% or more of a class of common equity securities of the companies. For all other companies mentioned in Morgan Stanley Research, Morgan Stanley\nmay have an investment of less than 1% in securities/instruments or derivatives of securities/instruments of companies and may trade them in ways different"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "transactions performed by Morgan Stanley or the profitability or revenues of particular\ntrading desks.\nThe \"Important Regulatory Disclosures on Subject Companies\" section in Morgan Stanley Research lists all companies mentioned where Morgan Stanley\nowns 1% or more of a class of common equity securities of the companies. For all other companies mentioned in Morgan Stanley Research, Morgan Stanley\nmay have an investment of less than 1% in securities/instruments or derivatives of securities/instruments of companies and may trade them in ways different\nfrom those discussed in Morgan Stanley Research. Employees of Morgan Stanley not involved in the preparation of Morgan Stanley Research may have\ninvestments in securities/instruments or derivatives of securities/instruments of companies mentioned and may trade them in ways different from those\ndiscussed in Morgan Stanley Research. Derivatives may be issued by Morgan Stanley or associated persons.\nWith the exception of information regarding Morgan Stanley, Morgan Stanley Research is based on public information. Morgan Stanley makes every effort to\nuse reliable, comprehensive information, but we make no representation that it is accurate or complete. We have no obligation to tell you when opinions or\ninformation in Morgan Stanley Research change apart from when we intend to discontinue equity research coverage of a subject company. Facts and views\npresented in Morgan Stanley Research have not been reviewed by, and may not reflect information known to, professionals in other Morgan Stanley business\nareas, including investment banking personnel.\nMorgan Stanley Research personnel may participate in company events such as site visits and are generally prohibited from accepting payment by the\ncompany of associated expenses unless pre-approved by authorized members of Research management.\nMorgan Stanley may make investment decisions that are inconsistent with the recommendations or views in this report.\nTo our readers based in Taiwan or trading in Taiwan securities/instruments: Information on securities/instruments that trade in Taiwan is distributed by Morgan\nStanley Taiwan Limited (\"MSTL\"). Such information is for your reference only. The reader should independently evaluate the investment risks and is solely\nresponsible for their investment decisions. Morgan Stanley Research may not be distributed to the public media or quoted or used by the public media without\nthe express written consent of Morgan Stanley. Any non-customer reader within the scope of Article 7-1 of the Taiwan Stock Exchange Recommendation\nRegulations accessing and/or receiving Morgan Stanley Research is not permitted to provide Morgan Stanley Research to any third party (including but not\nlimited to related parties, affiliated companies and any other third parties) or engage in any activities regarding Morgan Stanley Research which may create or\ngive the appearance of creating a conflict of interest. Information on securities/instruments that do not trade in Taiwan is for informational purposes only and is\nnot to be construed as a recommendation or a solicitation to trade in such securities/instruments. MSTL may not execute transactions for clients in these\nsecurities/instruments.\nMorgan Stanley is not incorporated under PRC law and the research in relation to this report is conducted outside the PRC. Morgan Stanley Research does\nnot constitute an offer to sell or the solicitation of an offer to buy any securities in the PRC. PRC investors shall have the relevant qualifications to invest in\nsuch securities and shall be responsible for obtaining all relevant approvals, licenses, verifications and/or registrations from the relevant governmental\nauthorities themselves. Neither this report nor any part of it is intended as, or shall constitute, provision of any consultancy or advisory service of securities\ninvestment as defined under PRC law. Such information is provided for your reference only.\nMorgan Stanley Research is disseminated in Brazil by Morgan Stanley C.T.V.M. S.A. located at Av. Brigadeiro Faria Lima, 3600, 6th floor, S\u00e3o Paulo - SP,\nBrazil; and is regulated by the Comiss\u00e3o de Valores Mobili\u00e1rios; in Mexico by Morgan Stanley M\u00e9xico, Casa de Bolsa, S.A. de C.V which is regulated by\nComision Nacional Bancaria y de Valores. Paseo de los Tamarindos 90, Torre 1, Col. Bosques de las Lomas Floor 29, 05120 Mexico City; in Japan by\nMorgan Stanley MUFG Securities Co., Ltd. and, for Commodities related research reports only, Morgan Stanley Capital Group Japan Co., Ltd; in Hong Kong\nby Morgan Stanley Asia Limited (which accepts responsibility for its contents) and by Morgan Stanley Bank Asia Limited; in Singapore by Morgan Stanley\nAsia (Singapore) Pte. (Registration number 199206298Z) and/or Morgan Stanley Asia (Singapore) Securities Pte Ltd (Registration number 200008434H),\nregulated by the Monetary Authority of Singapore (which accepts legal responsibility for its contents and should be contacted with respect to any matters\narising from, or in connection with, Morgan Stanley Research) and by Morgan Stanley Bank Asia Limited, Singapore Branch (Registration number\nT14FC0118J); in Australia to \"wholesale clients\" within the meaning of the Australian Corporations Act by Morgan Stanley Australia Limited A.B.N. 67 003 734\n576, holder of Australian financial services license No. 233742, which accepts responsibility for its contents; in Australia to \"wholesale clients\" and \"retail\nclients\" within the meaning of the Australian Corporations Act by Morgan Stanley Wealth Management Australia Pty Ltd (A.B.N. 19 009 145 555, holder of\nAustralian financial services license No. 240813, which accepts responsibility for its contents; in Korea by Morgan Stanley & Co International plc, Seoul\nBranch; in India by Morgan Stanley India Company Private Limited; in Canada by Morgan Stanley Canada Limited; in Germany and the European Economic\nArea where required by Morgan Stanley Europe S.E., authorised and regulated by Bundesanstalt fuer Finanzdienstleistungsaufsicht (BaFin) under the\nreference number 149169; in the US by Morgan"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "services license No. 240813, which accepts responsibility for its contents; in Korea by Morgan Stanley & Co International plc, Seoul\nBranch; in India by Morgan Stanley India Company Private Limited; in Canada by Morgan Stanley Canada Limited; in Germany and the European Economic\nArea where required by Morgan Stanley Europe S.E., authorised and regulated by Bundesanstalt fuer Finanzdienstleistungsaufsicht (BaFin) under the\nreference number 149169; in the US by Morgan Stanley & Co. LLC, which accepts responsibility for its contents. Morgan Stanley & Co. International plc,\nauthorized by the Prudential Regulatory Authority and regulated by the Financial Conduct Authority and the Prudential Regulatory Authority, disseminates in\nthe UK research that it has prepared, and approves solely for the purposes of section 21 of the Financial Services and Markets Act 2000, research which has\nbeen prepared by any of its affiliates. RMB Morgan Stanley Proprietary Limited is a member of the JSE Limited and A2X (Pty) Ltd. RMB Morgan Stanley\nProprietary Limited is a joint venture owned equally by Morgan Stanley International Holdings Inc. and RMB Investment Advisory (Proprietary) Limited, which is\nwholly owned by FirstRand Limited. The information in Morgan Stanley Research is being disseminated by Morgan Stanley Saudi Arabia, regulated by the\nCapital Market Authority in the Kingdom of Saudi Arabia , and is directed at Sophisticated investors only.\nThe information in Morgan Stanley Research is being communicated by Morgan Stanley & Co. International plc (DIFC Branch), regulated by the Dubai\nFinancial Services Authority (the DFSA), and is directed at Professional Clients only, as defined by the DFSA. The financial products or financial services to\nwhich this research relates will only be made available to a customer who we are satisfied meets the regulatory criteria to be a Professional Client. A\ndistribution of the different MS Research ratings or recommendations, in percentage terms for Investments in each sector covered, is available upon request\nfrom your sales representative.\nThe information in Morgan Stanley Research is being communicated by Morgan Stanley & Co. International plc (QFC Branch), regulated by the Qatar\nFinancial Centre Regulatory Authority (the QFCRA), and is directed at business customers and market counterparties only and is not intended for Retail\nCustomers as defined by the QFCRA.\nAs required by the Capital Markets Board of Turkey, investment information, comments and recommendations stated here, are not within the scope of\ninvestment advisory activity. Investment advisory service is provided exclusively to persons based on their risk and income preferences by the authorized firms.\nComments and recommendations stated here are general in nature. These opinions may not fit to your financial status, risk and return preferences. For this\nreason, to make an investment decision by relying solely to this information stated here may not bring about outcomes that fit your expectations.\nThe trademarks and service marks contained in Morgan Stanley Research are the property of their respective owners. Third-party data providers make no\n14\n\n\fwarranties or representations relating to the accuracy, completeness, or timeliness of the data they provide and shall not have liability for any damages relating\nto such data. The Global Industry Classification Standard (GICS) was developed by and is the exclusive property of MSCI and S&P.\nMorgan Stanley Research, or any portion thereof may not be reprinted, sold or redistributed without the written consent of Morgan Stanley.\nIndicators and trackers referenced in Morgan Stanley Research may not be used as, or treated as, a benchmark under Regulation EU 2016/1011, or any other\nsimilar framework.\nThe issuers and/or fixed income products recommended or discussed in certain fixed income research reports may not be continuously followed. Accordingly,\ninvestors should regard those fixed income research reports as providing stand-alone analysis and should not expect continuing analysis or additional reports\nrelating to such issuers and/or individual fixed income products.\nMorgan Stanley may hold, from time to time, material financial and commercial interests regarding the company subject to the Research report.\nINDUSTRY COVERAGE: Software\nCOMPANY (TICKER)\n\nRATING (AS OF)\n\nPRICE* (01/24/2023)\n\nE (10/25/2021)\nE (10/18/2021)\nE (07/19/2021)\nU (07/28/2022)\nO (07/15/2019)\nE (04/19/2022)\nE (06/06/2022)\nE (07/19/2021)\nE (11/17/2020)\nE (05/19/2022)\nE (07/06/2021)\nO (11/18/2020)\n\n$13.34\n$15.31\n$80.96\n$8.41\n$25.32\n$3.10\n$7.89\n$9.34\n$63.42\n$86.84\n$8.98\n$26.73\n\nU (01/13/2020)\nO (06/06/2022)\nO (10/01/2020)\nE (10/11/2021)\nO (10/07/2022)\nE (03/29/2022)\n++\nE (09/01/2022)\nO (10/10/2017)\nU (02/09/2021)\nE (08/11/2015)\nE (09/09/2020)\nE (01/12/2023)\nE (01/12/2023)\nE (06/27/2022)\nE (01/12/2023)\n\n$128.10\n$104.60\n$136.13\n$19.87\n$51.09\n$22.66\n$24.83\n$68.70\n$151"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "/2021)\nE (08/11/2015)\nE (09/09/2020)\nE (01/12/2023)\nE (01/12/2023)\nE (06/27/2022)\nE (01/12/2023)\n\n$128.10\n$104.60\n$136.13\n$19.87\n$51.09\n$22.66\n$24.83\n$68.70\n$151.14\n$110.66\n$34.58\n$7.26\n$14.50\n$39.15\n$25.57\n$122.65\n\nE (11/24/2020)\nE (10/26/2020)\nO (10/03/2022)\nE (11/02/2021)\nO (04/26/2021)\nE (06/17/2022)\nU (07/11/2022)\nE (04/26/2022)\nU (10/03/2022)\nO (12/09/2021)\nE (02/18/2021)\nE (03/16/2021)\nO (05/22/2018)\nO (12/16/2021)\nE (11/23/2021)\nE (06/07/2022)\n\n$7.70\n$13.96\n$31.40\n$20.63\n$14.14\n$6.28\n$28.39\n$35.73\n$57.95\n$26.41\n$17.10\n$6.97\n$42.70\n$21.46\n$11.47\n$10.51\n\nElizabeth Porter, CFA\nAmplitude Inc. (AMPL.O)\nFreshworks Inc (FRSH.O)\nGoDaddy Inc (GDDY.N)\nLegalZoom.com Inc (LZ.O)\nLiveramp Holdings Inc (RAMP.N)\nMatterport Inc (MTTR.O)\nSemrush Holdings Inc -A (SEMR.N)\nSprinklr Inc (CXM.N)\nSprout Social Inc (SPT.O)\nWix.Com Ltd (WIX.O)\nZeta Global Holdings Corp (ZETA.N)\nZoomInfo Technologies Inc (ZI.O)\n\nHamza Fodderwala\nCheck Point Software Technologies Ltd. (CHKP.O)\nCrowdStrike Holdings Inc (CRWD.O)\nCyberArk Software Ltd (CYBR.O)\nForgeRock Inc (FORG.N)\nFortinet Inc. (FTNT.O)\nGen Digital Inc. (GEN.O)\nKnowBe4 (KNBE.O)\nOkta, Inc. (OKTA.O)\nPalo Alto Networks Inc (PANW.O)\nQualys Inc (QLYS.O)\nRapid7 Inc (RPD.O)\nSecureworks Corp (SCWX.O)\nSentinelOne, Inc. (S.N)\nTenable Holdings Inc (TENB.O)\nVaronis Systems, Inc. (VRNS.O)\nZscaler Inc (ZS.O)\n\nJosh Baer, CFA\n2u Inc (TWOU.O)\nAsana Inc (ASAN.N)\nBox Inc (BOX.N)\nChegg Inc (CHGG.N)\nCoursera, Inc. (COUR.N)\nCvent (CVT.O)\nDigitalOcean Holdings Inc (DOCN.N)\nDocebo Inc. (DCBO.O)\nDocuSign Inc (DOCU.O)\nInstructure Holdings Inc (INST.N)\nLightspeed POS Inc. (LSPD.N)\nSabre Corp (SABR.O)\nSmartsheet Inc (SMAR.N)\nToast, Inc. (TOST.N)\nUdemy Inc (UDMY.O)\nWalkMe Ltd (WKME.O)\n\nKeith Weiss, CFA\n\n15\n\n\fAdobe Inc. (ADBE.O)\nAkamai Technologies, Inc. (AKAM.O)\nAtlassian Corporation PLC (TEAM.O)\nAutodesk (ADSK.O)\nBigCommerce Holdings, Inc. (BIGC.O)\nBill.com Holdings (BILL.N)\nCloudflare Inc (NET.N)\nCoupa Software Inc (COUP.O)\nHubSpot, Inc. (HUBS.N)\nIntuit (INTU.O)\nMicrosoft (MSFT.O)\nOracle Corporation (ORCL.N)\nPalantir Technologies Inc. (PLTR.N)\nQualtrics (XM.O)\nSalesforce.com (CRM.N)\nSamsara Inc (IOT.N)\nServiceNow Inc (NOW.N)\nShopify Inc (SHOP.N)\nSnowflake Inc. (SNOW.N)\nSplunk Inc (SPLK.O)\nUiPath Inc (PATH.N)\nVertex Inc. (VERX.O)\nVMware Inc (VMW.N)\nWorkday Inc (WDAY.O)\n\nE (06/21/2022)\nE (04/29/2020)\nO (01/13/2020)\nE (08/19/2021)\nE (05/11/2021)\nO (09/12/2022)\nE (06/18/2020)\nO (04/14/2020)\nO (03/25/2020)\nO (10/05/2020)\nO (01/13/2016)\nE (01/15/2019)\nE (03/07/2022)\nO (12/16/2021)\nO (05/19/2021)\nO (01/10/2022)\nO (11/12/2020)\nE (06/24/2022)\nO (02/07/2022)\nE (04/27/2021)\nE (09/07/2022)\nU (04/07/2021)\n++\nO (04/14/2020)\n\n$361.32"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "January 27, 2023 03:42 PM GMT\nMORGAN STANLEY & CO. LLC\n\nTesla Inc | North America\n\nAdam Jonas, CFA\n\nIt's 1913 All Over Again: Tesla\nPrice Cuts Usher in the Great EV\nDeflation\nStock Rating\n\nOverweight\n\nIndustry View\n\nIn-Line\n\nPrice Target\n\n$220.00\n\nEQUITY ANALYST\nAdam.Jonas@morganstanley.com\n\n+1 212 761-1726\n\nEvan Silverberg, CFA, CPA\nRESEARCH ASSOCIATE\nEvan.Silverberg@morganstanley.com\n\n+1 212 761-4376\n\nDaniela M Haigian\nRESEARCH ASSOCIATE\nDaniela.Haigian@morganstanley.com\n\n+1 212 761-6071\n\nMatias B Ovrum\nRESEARCH ASSOCIATE\nMatias.Ovrum@morganstanley.com\n\n+1 212 761-5956\n\nDiego Ortega Laya\nRESEARCH ASSOCIATE\nDiego.Ortega.Laya@morganstanley.com\n\n+1 212 761-9835\n\nTesla Inc ( TSLA.O, TSLA US ) Top Pick\nAutos & Shared Mobility / United States of America\n\nIn recent days, I\u2019ve asked several dealers and automotive experts if they\u2019ve ever\nseen a car company cut prices by 13 to 20% across the vast majority of its\nproduct range in one move. Nobody can think of a precedent. Some clients\nbemoan Tesla\u2019s move as upsetting customers who recently paid far higher prices\nfor the exact same car. But we've seen this before\u2026 just 110 years ago. When\nHenry Ford introduced the Model T and re-invented mass manufacturing, prices\nof automobiles declined even more sharply. I reckon someone who paid 825\nhard-earned US dollars for a Model T \u2018Runabout\u2019 in 1909 would have been\nmildly perturbed to know that a few years later, in 1913, the same model would\nsell for 40% less.\nPre-Model T cars cost around $80k (in today's dollars) on avg. Prior to the\nintroduction of the Ford Model T in 1908, gasoline-powered automobiles were\nrather limited in use and extremely expensive. In the year 1907 (the last full year\nprior to the Model T intro), there were 255 carmakers in the US (223 US-owned\nand 32 foreign, according to \u2018Motor\u2019 magazine). The average price of a gasoline\ncar at the time was $2,834, or nearly $80k in 2023 dollars. There were 43k\nvehicles produced in 1907 for an average production per carmaker of just 169\nvehicles per year.\nDeflation transformed the automotive competitive landscape and drove out\nmuch of industry. By 1929 there were 44 surviving automobile manufacturers in\nthe United States with 80% of sales accounted for by General Motors, Ford and\nChrysler.\n\nStock Rating\nIndustry View\nPrice target\nShr price, close (Jan 26, 2023)\nMkt cap, curr (mm)\n52-Week Range\n\nOverweight\nIn-Line\n$220.00\n$160.27\n$561,310\n$384.29-101.81\n\nFiscal Year Ending\n\n12/22 12/23e 12/24e 12/25e\n\nEPS ($)**\nPrior EPS ($)**\nModelWare EPS ($)\n\n4.07\n3.62\n\n3.57\n3.11\n\n4.57\n4.10\n\n5.74\n5.26\n\nUnless otherwise noted, all metrics are based on Morgan Stanley ModelWare\nframework\n** = Based on consensus methodology\ne = Morgan Stanley Research estimates\n\nMorgan Stanley does and seeks to do business with\ncompanies covered in Morgan Stanley Research. As a\nresult, investors should be aware that the firm may have a\nconflict of interest that could affect the objectivity of\nMorgan Stanley Research. Investors should consider\nMorgan Stanley Research as only a single factor in making\ntheir investment decision.\nFor analyst certification and other important disclosures,\nrefer to the Disclosure Section, located at the end of this\nreport.\n\n1\n\n\fExhibit 1: Number of Auto Manufacturers in the US: 1907 vs 1929\n300\n255\n\nUS Automakers\n\n250\n200\n150\n100\n44\n\n50\n0\n1907\n\n1929\n\nSource: Motor Magazine, History.com, Morgan Stanley Research\n\nThe Model T entry level \u2018Runabout\u2019 cost $825 in 1909 (around $24k/unit in\ntoday's dollars), or less than 1/3 the price of the average car at the time. But\nhigher volumes and the moving assembly line brought far greater deflation in\nthe price of the automobile from there. The price of a Model T \u2018Runabout\u2019 fell to\n$525 by 1913 ($13.5k in today\u2019s dollars) and $395 by 1920. By 1925 the average\nprice of a Model T Runabout was $260 ($3,790 in today\u2019s dollars) which was\naround 1/20th of the average inflation adjusted price of a car in 1907.\nExhibit 2: Ford Model T 'Runabout' Cost per Unit: A Path of Deflation from 1909 to\n1925\n$900\n\n$825\n\n$800\n\nUS Dollars\n\n$700\n$600\n\n$525\n\n$500\n$395\n\n$400\n\n$260\n\n$300\n$200\n$100\n$0\n1909\n\n1913"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "around 1/20th of the average inflation adjusted price of a car in 1907.\nExhibit 2: Ford Model T 'Runabout' Cost per Unit: A Path of Deflation from 1909 to\n1925\n$900\n\n$825\n\n$800\n\nUS Dollars\n\n$700\n$600\n\n$525\n\n$500\n$395\n\n$400\n\n$260\n\n$300\n$200\n$100\n$0\n1909\n\n1913\n\n1920\n\n1925\n\nSource: Morgan Stanley Research. Model T 'Runabout' price in today's dollars declined from $24/unit in 1909 to $3,790 by 1925.\n\nIt wasn\u2019t the automobile or even the Model T itself that moved horse drawn\ncarriages off of the road, it was innovation in manufacturing that drove dramatic\nlevels of deflation. Henry Ford introduced mass manufacturing in his Highland\nPark, Michigan factory in 1910 and his world-changing moving assembly in 1913.\nTaking nothing away from Tesla or the ever-growing number of EV players\nentering the market every month, we have not truly had the equivalent\nrevolution in high volume manufacturing for EVs at this point. Have we finally\nreached the 'step change' in EV/Battery manufacturing? We look forward to\nseeing many of you at the Tesla Investor Day in Austin March 1st.\nTesla's recent price cuts move their products into mainstream car territory. Last\nnight, I comparison shopped a 2023 Tesla Model Y Long Range with a Toyota\nRAV4 Hybrid in stock at a dealership 2 miles up the road. According to Tesla\u2019s\nwebsite, the Model Y lists for $53,490 or $45,990 including the $7,500 IRA tax\ncredit (assuming income threshold eligibility). The 2023 RAV4 Hybrid Premium\n2\n\n\fhas an MSRP of $41,148 but is on sale for the \u2018SmartPath\u2019 price of $45,147 (like\nmany cars sold in the US recently, the dealer is charging above MSRP). The 2023\nRAV4 Hybrid Limited (41/38 mpg highway/city with 0-60mph acceleration of 5.7\nseconds) MSRP is $43,293 but sells for the \u2018SmartPath\u2019 price of $46,292. Perhaps\nif we got to the dealership we may have been able to haggle for a better price.\nPerhaps not. Toyota inventory is still so low these days.\n\nWhile it\u2019s still early days following the Tesla price cuts, we believe history will\nreflect upon this time as the moment when changes in design, manufacturing\ntechnology, and scale enabled profound deflation in the price of EVs. Potential\nchanges to industry composition and market share may take years to play out.\nBut we believe the EV forecasts and manufacturing plans of competing EV\nplayers (startup and legacy) may potentially need to be fundamentally reconceived.\nTesla Model Y ($45,990 after $7,500 tax incentive) vs. Toyota RAV4 Hybrid ($43,293\nMSRP): Same neighborhood of price - which is better value?\n\nTesla Media Kit, Toyota, Morgan Stanley Research\n\n3\n\n\fH\n\nRisk Reward \u2013 Tesla Inc (TSLA.O)\n\nTop Pick\n\nBeyond EVs: Internet of Cars and Network/Software Services Optionality\nOVERWEIGHT THESIS\n\nPRICE TARGET $220.00\nOur PT of $220 is comprised of 6 components: (1) $117/share for core Tesla Auto business on\n7.2mm units in 2030, 9.0% WACC, 12x 2030 exit EBITDA multiple, exit EBITDA margin of\n20.0%. (2) Tesla Mobility at $9 on DCF with ~425k cars at $1.7/mile by 2030. (3) Tesla as a\n3rd party supplier at $29/share. 4) Energy at $26/share, 5) Insurance at $8/share,\n& 6) Network Services at $32, 18.9mm MAUs, $80 ARPU by 2030, 50% discount.\n\n\u25aa A double-fly-wheel. We believe TSLA can\n\n400\n\nleverage its cost leadership in EVs to\naggressively expand its user base and over\ntime generate a higher % of revenue from\nrecurring/high-margin software & services.\nServices drives the upside. We forecast\nTesla's services EBITDA to account for 13%\nof total EBITDA by 2030 & ~32% by 2040.\nIncludes: FSD, infotainment, upgrades,\ncharging, maintenance, telematics, etc.\nValuation supportive vs. tech. Including\nServices, Energy & Insurance in our forecast,\nat $220, Tesla trades at ~10x 2030 EBITDA\nand ~2.0x 2030 sales. Expensive vs. auto\nbut not vs. software/tech.\nGrowth: We forecast Tesla to sell 7.2mm\nunits by 2030 and grow total revenue at a\n24% 8yr CAGR.\n\n300\n\nConsensus Rating Distribution\n\n$194.14\n\nConsensus Price Target Distribution\n\n$24.33\n\n$436.00\n\nMS PT\n\nSource: Refinitiv, Morgan Stanley Research\n\nMean\n\nMorgan Stanley Estimates\n\n\u25aa\n\u25aa\n\nRISK REWARD CHART AND OPTIONS IMPLIED PROBABILITIES (12M)\nUSD\n\n$390.00(+143.34%)\n$390.00\n(+143.34%)\n(+143.34%)\n\n$220.00(+37.27%)\n$220.00\n(+37.27%)\n(+37.27%)\n200"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "MS PT\n\nSource: Refinitiv, Morgan Stanley Research\n\nMean\n\nMorgan Stanley Estimates\n\n\u25aa\n\u25aa\n\nRISK REWARD CHART AND OPTIONS IMPLIED PROBABILITIES (12M)\nUSD\n\n$390.00(+143.34%)\n$390.00\n(+143.34%)\n(+143.34%)\n\n$220.00(+37.27%)\n$220.00\n(+37.27%)\n(+37.27%)\n200\n\nProb (>390.00)~0.0%\n\n60% Overweight\n29% Equal-weight\n12% Underweight\n\nProb (>220.00)~16.3%\n\n$160.27\n\nMS Rating\n\n100\n\nSource: Refinitiv, Morgan Stanley Research\n\n0\nJAN '22\n\nKey:\n\n\u25aa\n\n$70.00(-56.32%)\n$70.00\n(-56.32%)\n(-56.32%)\nJUL '22\n\nHistorical Stock Performance\n\nJAN '23\n\nCurrent Stock Price\n\nProb (<70.00)~12.5%\n\nJAN '24\n\nPrice Target\n\nSource: Refinitiv, Morgan Stanley Research, Morgan Stanley Institutional Equities Division. The probabilities of our Bull,\nBase, and Bear case scenarios playing out were estimated with implied volatility data from the options market as of 26\nJan, 2023. All figures are approximate risk-neutral probabilities of the stock reaching beyond the scenario price in either\nthree-months\u2019 or one-years\u2019 time. View explanation of Options Probabilities methodology here\n\nBULL CASE\n\n$390.00\n\nBASE CASE\n\n$220.00\n\nRisk Reward Themes\nDisruption:\nSecular Growth:\nElectric Vehicles:\n\nPositive\nPositive\nPositive\n\nView descriptions of Risk Rewards Themes here\n\nBEAR CASE\n\n$70.00\n\n~17.2x 2030e EV/EBITDA\n\n~9.6x 2030e EV/EBITDA\n\n~2.9x 2030e EV/EBITDA\n\nFor the core auto business, we assume TSLA\nis able to deliver 10mm units by 2030 with\n~22% EBITDA margins, which implies a value\nof ~$194/share. We value Tesla Mobility /\nRidesharing at $37 (1mm fleet by 2030). For\nEnergy, $55 (35% 20yr rev CAGR). $40\nallocated for Tesla as an EV powertrain &\nbattery supplier (assumes 3mm units at 25%\nEBITDA margin and 25x exit EV/EBITDA at\n2030). Insurance is valued at $16/share.\nTesla Network Services valued at $48, on\n25mm connected MAUs at $120 Monthly\nRRU.\n\nOur PT of $220 is comprised of 6\ncomponents: (1) $117/share for core Tesla\nAuto business on 7.2mm units in 2030, 9.0%\nWACC, 12x 2030 exit EBITDA multiple, exit\nEBITDA margin of 20.0%. (2) Tesla Mobility\nat $9 on DCF with ~425k cars at $1.7/mile by\n2030. (3) Tesla as a 3rd party supplier at\n$29/share. 4) Energy at\n$26/share, 5) Insurance at $8/share,\n& 6) Network Services at $32, 18.9mm\nMAUs, $80 ARPU by 2030, 50% discount.\n\nOur $70 bear case ascribes $57/share for\nautomotive which assumes 5mn units by\n2030 at a 12% EBITDA margin. Other value\nis ascribed to Tesla Mobility at $0, Tesla\nNetwork Services at $10/share (10m MAUs\nby 2030) and Tesla Energy at $3/share.\nTesla as a 3rd party supplier valued at\n$0/share, $0 value for insurance.\n\n4\n\n\fH\n\nRisk Reward \u2013 Tesla Inc (TSLA.O)\nKEY EARNINGS INPUTS\nDrivers\n\n2022\n\n2023e\n\n2024e\n\n2025e\n\nTotal Deliveries\n\n1,313,851\n\n1,799,500\n\n2,426,910\n\n3,128,426\n\nTotal Revenue ($, mm)\n\n81,462\n\n101,680\n\n132,099\n\n159,954\n\nAuto Gross Margin (%)\n\n28.5\n\n22.2\n\n22.6\n\n22.8\n\nFree Cash Flow ($, mm)\n\n7,566\n\n10,747\n\n16,288\n\n20,437\n\nNet Debt (Cash) ($, mm)\n\n(19,086)\n\n(29,833)\n\n(46,121)\n\n(66,559)\n\nINVESTMENT DRIVERS\nSales, China Market Announcements\nPricing Adjustments\nBerlin/Austin Giga Ramp\nFremont Battery Pilot Ramp\nCybertruck & New Model announcements\nEmerging Competition (from traditional OEMs,\nstartups, & large tech firms)\nServices disclosure\n\n0-10% Latin America\n0-10% MEA\n0-10% UK\n20-30% Europe ex UK\n20-30% Mainland China\n30-40% North America\n\nFY Dec 2024e\n\nDisclosure on service revs\nIncreased FSD attach rate\nCost milestones on new battery\nNew model intro (Cybertruck, multivan, Semi)\n3rd party battery win\nGeographic penetration& new capacity\nRISKS TO DOWNSIDE\n\nInst. Owners, % Active\n\n5/5\n\nMOST\n\n3 Month\nHorizon\n\nSUSTAINABILITY & ESG\n0.75\n\nDisclosure Rate"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "30-40% North America\n\nFY Dec 2024e\n\nDisclosure on service revs\nIncreased FSD attach rate\nCost milestones on new battery\nNew model intro (Cybertruck, multivan, Semi)\n3rd party battery win\nGeographic penetration& new capacity\nRISKS TO DOWNSIDE\n\nInst. Owners, % Active\n\n5/5\n\nMOST\n\n3 Month\nHorizon\n\nSUSTAINABILITY & ESG\n0.75\n\nDisclosure Rate\n\n25%\n\n+1.0\n\n116,300\n\nEBITDA\n($, mm)\n\n21,801\n\nEPS\n($)\n\n179,247\n137,890\n25,528\n39,688\n28,367\n4.57\n\n3.90\n\n8.33\n5.59\n\nMean\n\nMorgan Stanley Estimates\n\n51.9%\n\nHF Sector Long/Short Ratio\n\n1.3x\n\nHF Sector Net Exposure\n\n7.1%\n\nRefinitiv; MSPB Content. Includes certain hedge fund\nexposures held with MSPB. Information may be\ninconsistent with or may not reflect broader market\ntrends. Long/Short Ratio = Long Exposure / Short\nexposure. Sector % of Total Net Exposure = (For a\nparticular sector: Long Exposure - Short Exposure) /\n(Across all sectors: Long Exposure \u2013 Short Exposure).\n\nSource: Refinitiv, FactSet, Morgan Stanley Research; 1 is\nthe highest favored Quintile and 5 is the least favored\nQuintile\n\nIndicator of Change\n\n132,099\n\nSales /\nRevenue\n($, mm)\n\nOWNERSHIP POSITIONING\n\nMS ALPHA MODELS\nBEST\n\nRISKS TO UPSIDE\n\nSource: Refinitiv, Morgan Stanley Research\n\nSource: Morgan Stanley Research Estimate\nView explanation of regional hierarchies here\n\n5/5\n\nMS ESTIMATES VS. CONSENSUS\n\nCompetition: legacy OEMs/Chinese\ndomestics/mega-tech\nExecution risk with multiple factory ramps\nFailure for market to recognize services op &\nlower than expected attach rate & RPU\nChina risks\nDilution\nValuation\n\nGLOBAL REVENUE EXPOSURE\n\n24 Month\nHorizon\n\nRISKS TO PT/RATING\n\n-1.0\n\n5\n\n\fDisclosure Section\nThe information and opinions in Morgan Stanley Research were prepared by Morgan Stanley & Co. LLC, and/or Morgan Stanley C.T.V.M. S.A., and/or Morgan\nStanley Mexico, Casa de Bolsa, S.A. de C.V., and/or Morgan Stanley Canada Limited. As used in this disclosure section, \"Morgan Stanley\" includes Morgan\nStanley & Co. LLC, Morgan Stanley C.T.V.M. S.A., Morgan Stanley Mexico, Casa de Bolsa, S.A. de C.V., Morgan Stanley Canada Limited and their affiliates\nas necessary.\nFor important disclosures, stock price charts and equity rating histories regarding companies that are the subject of this report, please see the Morgan\nStanley Research Disclosure Website at www.morganstanley.com/researchdisclosures, or contact your investment representative or Morgan Stanley\nResearch at 1585 Broadway, (Attention: Research Management), New York, NY, 10036 USA.\nFor valuation methodology and risks associated with any recommendation, rating or price target referenced in this research report, please contact the Client\nSupport Team as follows: US/Canada +1 800 303-2495; Hong Kong +852 2848-5999; Latin America +1 718 754-5444 (U.S.); London +44 (0)20-7425-8169;\nSingapore +65 6834-6860; Sydney +61 (0)2-9770-1505; Tokyo +81 (0)3-6836-9000. Alternatively you may contact your investment representative or Morgan\nStanley Research at 1585 Broadway, (Attention: Research Management), New York, NY 10036 USA.\n\nAnalyst Certification\nThe following analysts hereby certify that their views about the companies and their securities discussed in this report are accurately expressed and that they\nhave not received and will not receive direct or indirect compensation in exchange for expressing specific recommendations or views in this report: Adam\nJonas, CFA.\n.\n\nGlobal Research Conflict Management Policy\nMorgan Stanley Research has been published in accordance with our conflict management policy, which is available at\nwww.morganstanley.com/institutional/research/conflictpolicies. A Portuguese version of the policy can be found at www.morganstanley.com.br\n\nImportant Regulatory Disclosures on Subject Companies\nThe analyst or strategist (or a household member) identified below owns the following securities (or related derivatives): Diego Ortega Laya - Ferrari\nNV(common or preferred stock), General Motors Company(common or preferred stock).\nAs of December 30, 2022, Morgan Stanley beneficially owned 1% or more of a class of common equity securities of the following companies covered in\nMorgan Stanley Research: American Axle & Manufacturing Holdings Inc, Aptiv Plc, Asbury Automotive Group Inc, AutoNation Inc., BorgWarner Inc., Carmax\nInc, Carvana Co, Ferrari NV, Fisker Inc, Ford Motor Company, FREYR Battery SA, General Motors Company, Group 1 Automotive, Inc, Harley-Davidson Inc,\nLear Corporation, Lithia Motors Inc., Quantumscape Corp, Sonic Automotive Inc, Tesla Inc, Visteon Corporation.\nWithin the last 12 months, Morgan Stanley managed or co-managed a public offering (or 144A offering) of securities of Avis Budget Group Inc, Ford Motor\nCompany, FREYR Battery SA, General Motors Company, Mobileye Global Inc.\nWithin the last 12 months, Morgan Stanley has received compensation for investment banking services from A"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "son Inc,\nLear Corporation, Lithia Motors Inc., Quantumscape Corp, Sonic Automotive Inc, Tesla Inc, Visteon Corporation.\nWithin the last 12 months, Morgan Stanley managed or co-managed a public offering (or 144A offering) of securities of Avis Budget Group Inc, Ford Motor\nCompany, FREYR Battery SA, General Motors Company, Mobileye Global Inc.\nWithin the last 12 months, Morgan Stanley has received compensation for investment banking services from Avis Budget Group Inc, Ford Motor Company,\nGeneral Motors Company, Hertz Global Holdings Inc, Mobileye Global Inc, Tesla Inc.\nIn the next 3 months, Morgan Stanley expects to receive or intends to seek compensation for investment banking services from American Axle &\nManufacturing Holdings Inc, Aptiv Plc, AutoNation Inc., Avis Budget Group Inc, BorgWarner Inc., Carvana Co, Ferrari NV, Fisker Inc, Ford Motor Company,\nGeneral Motors Company, Hertz Global Holdings Inc, Lear Corporation, Li-Cycle Holdings Corp., Lithia Motors Inc., Lucid Group Inc, Magna International Inc.,\nMobileye Global Inc, Quantumscape Corp, Rivian Automotive, Inc., Tesla Inc, Visteon Corporation.\nWithin the last 12 months, Morgan Stanley has received compensation for products and services other than investment banking services from American Axle\n& Manufacturing Holdings Inc, Avis Budget Group Inc, BorgWarner Inc., Ferrari NV, Ford Motor Company, General Motors Company, Harley-Davidson Inc,\nHertz Global Holdings Inc, Lear Corporation, Rivian Automotive, Inc., Tesla Inc, Visteon Corporation.\nWithin the last 12 months, Morgan Stanley has provided or is providing investment banking services to, or has an investment banking client relationship with,\nthe following company: American Axle & Manufacturing Holdings Inc, Aptiv Plc, AutoNation Inc., Avis Budget Group Inc, BorgWarner Inc., Carvana Co, Ferrari\nNV, Fisker Inc, Ford Motor Company, FREYR Battery SA, General Motors Company, Hertz Global Holdings Inc, Lear Corporation, Li-Cycle Holdings Corp.,\nLithia Motors Inc., Lucid Group Inc, Magna International Inc., Mobileye Global Inc, Quantumscape Corp, Rivian Automotive, Inc., Tesla Inc, Visteon\nCorporation.\nWithin the last 12 months, Morgan Stanley has either provided or is providing non-investment banking, securities-related services to and/or in the past has\nentered into an agreement to provide services or has a client relationship with the following company: American Axle & Manufacturing Holdings Inc, Aptiv Plc,\nAvis Budget Group Inc, BorgWarner Inc., Ferrari NV, Fisker Inc, Ford Motor Company, General Motors Company, Harley-Davidson Inc, Hertz Global Holdings\nInc, Lear Corporation, Rivian Automotive, Inc., Sonic Automotive Inc, Tesla Inc, Visteon Corporation.\nAn employee, director or consultant of Morgan Stanley is a director of General Motors Company. This person is not a research analyst or a member of a\nresearch analyst's household.\nMorgan Stanley & Co. LLC makes a market in the securities of Adient PLC, American Axle & Manufacturing Holdings Inc, Aptiv Plc, Asbury Automotive Group\nInc, AutoNation Inc., Avis Budget Group Inc, BorgWarner Inc., Carmax Inc, Ford Motor Company, General Motors Company, Group 1 Automotive, Inc, HarleyDavidson Inc, Lear Corporation, Lithia Motors Inc., Magna International Inc., Mobileye Global Inc, Penske Automotive Group, Inc, Rivian Automotive, Inc.,\nSonic Automotive Inc, Tesla Inc, Visteon Corporation.\nThe equity research analysts or strategists principally responsible for the preparation of Morgan Stanley Research have received compensation based upon\nvarious factors, including quality of research, investor client feedback, stock picking, competitive factors, firm revenues and overall investment banking\nrevenues. Equity Research analysts' or strategists' compensation is not linked to investment banking or capital markets transactions performed by Morgan\nStanley or the profitability or revenues of particular trading desks.\nMorgan Stanley and its affiliates do business that relates to companies/instruments covered in Morgan Stanley Research, including market making, providing\nliquidity, fund management, commercial banking, extension of credit, investment services and investment banking. Morgan Stanley sells to and buys from\ncustomers the securities/instruments of companies covered in Morgan Stanley Research on a principal basis. Morgan Stanley may have a position in the debt\nof the Company or instruments discussed in this report. Morgan Stanley trades or may trade as principal in the debt securities (or in related derivatives) that\nare the subject of the debt research report.\nCertain disclosures listed above are also for compliance with applicable regulations in non-US jurisdictions.\n\nSTOCK RATINGS\nMorgan Stanley uses a relative rating system using terms such as Overweight, Equal-weight, Not-Rated or Underweight (see definitions below). Morgan\nStanley does not assign ratings of Buy, Hold or Sell to the stocks we cover. Overweight, Equal-weight, Not-Rated and Underweight are not the equivalent of\nbuy, hold and sell. Investors should carefully read the definitions of all ratings used in Morgan Stanley Research. In addition, since Morgan Stanley Research\ncontains more complete information concerning the analyst's views, investors should carefully read Morgan Stanley Research, in its entirety, and not infer the\ncontents from the rating alone. In any case, ratings (or research) should not be used or relied upon as investment advice. An investor's decision to buy or sell a\nstock should depend on individual circumstances (such as the investor's existing holdings) and other considerations.\n\n6\n\n\fGlobal Stock Ratings Distribution\n(as of December 31, 2022)\nThe Stock Ratings described below apply to Morgan Stanley's Fundamental Equity Research and do not apply to Debt Research produced"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": ", and not infer the\ncontents from the rating alone. In any case, ratings (or research) should not be used or relied upon as investment advice. An investor's decision to buy or sell a\nstock should depend on individual circumstances (such as the investor's existing holdings) and other considerations.\n\n6\n\n\fGlobal Stock Ratings Distribution\n(as of December 31, 2022)\nThe Stock Ratings described below apply to Morgan Stanley's Fundamental Equity Research and do not apply to Debt Research produced by the Firm.\nFor disclosure purposes only (in accordance with FINRA requirements), we include the category headings of Buy, Hold, and Sell alongside our ratings of\nOverweight, Equal-weight, Not-Rated and Underweight. Morgan Stanley does not assign ratings of Buy, Hold or Sell to the stocks we cover. Overweight,\nEqual-weight, Not-Rated and Underweight are not the equivalent of buy, hold, and sell but represent recommended relative weightings (see definitions below).\nTo satisfy regulatory requirements, we correspond Overweight, our most positive stock rating, with a buy recommendation; we correspond Equal-weight and\nNot-Rated to hold and Underweight to sell recommendations, respectively.\nCOVERAGE UNIVERSE\n\nINVESTMENT BANKING CLIENTS (IBC)\n\nOTHER MATERIAL\nINVESTMENT SERVICES\nCLIENTS (MISC)\n\nSTOCK RATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\n\nCOUNT\n\n% OF\nTOTAL IBC\n\n% OF\nRATING\nCATEGORY\n\nCOUNT\n\n% OF\nTOTAL\nOTHER\nMISC\n\nOverweight/Buy\nEqual-weight/Hold\nNot-Rated/Hold\nUnderweight/Sell\n\n1352\n1659\n3\n651\n\n37%\n45%\n0%\n18%\n\n278\n309\n0\n82\n\n42%\n46%\n0%\n12%\n\n21%\n19%\n0%\n13%\n\n593\n735\n0\n224\n\n38%\n47%\n0%\n14%\n\nTOTAL\n\n3,665\n\n669\n\n1552\n\nData include common stock and ADRs currently assigned ratings. Investment Banking Clients are companies from whom Morgan Stanley received investment\nbanking compensation in the last 12 months. Due to rounding off of decimals, the percentages provided in the \"% of total\" column may not add up to exactly\n100 percent.\n\nAnalyst Stock Ratings\nOverweight (O). The stock's total return is expected to exceed the average total return of the analyst's industry (or industry team's) coverage universe, on a\nrisk-adjusted basis, over the next 12-18 months.\nEqual-weight (E). The stock's total return is expected to be in line with the average total return of the analyst's industry (or industry team's) coverage universe,\non a risk-adjusted basis, over the next 12-18 months.\nNot-Rated (NR). Currently the analyst does not have adequate conviction about the stock's total return relative to the average total return of the analyst's\nindustry (or industry team's) coverage universe, on a risk-adjusted basis, over the next 12-18 months.\nUnderweight (U). The stock's total return is expected to be below the average total return of the analyst's industry (or industry team's) coverage universe, on a\nrisk-adjusted basis, over the next 12-18 months.\nUnless otherwise specified, the time frame for price targets included in Morgan Stanley Research is 12 to 18 months.\n\nAnalyst Industry Views\nAttractive (A): The analyst expects the performance of his or her industry coverage universe over the next 12-18 months to be attractive vs. the relevant broad\nmarket benchmark, as indicated below.\nIn-Line (I): The analyst expects the performance of his or her industry coverage universe over the next 12-18 months to be in line with the relevant broad market\nbenchmark, as indicated below.\nCautious (C): The analyst views the performance of his or her industry coverage universe over the next 12-18 months with caution vs. the relevant broad market\nbenchmark, as indicated below.\nBenchmarks for each region are as follows: North America - S&P 500; Latin America - relevant MSCI country index or MSCI Latin America Index; Europe MSCI Europe; Japan - TOPIX; Asia - relevant MSCI country index or MSCI sub-regional index or MSCI AC Asia Pacific ex Japan Index.\n\nStock Price, Price Target and Rating History (See Rating Definitions)\n\n7\n\n\fImportant Disclosures for Morgan Stanley Smith Barney LLC & E*TRADE Securities LLC Customers\nImportant disclosures regarding the relationship between the companies that are the subject of Morgan Stanley Research and Morgan Stanley Smith Barney\nLLC or Morgan Stanley or any of their affiliates, are available on the Morgan Stanley Wealth Management disclosure website at\nwww.morganstanley.com/online/researchdisclosures. For Morgan Stanley specific disclosures, you may refer to\nwww.morganstanley.com/researchdisclosures.\nEach Morgan Stanley research report is reviewed and approved on behalf of Morgan Stanley Smith Barney LLC and E*TRADE Securities LLC. This review and\napproval is conducted by the same person who reviews the research report on behalf of Morgan Stanley. This could create a conflict of interest.\n\nOther Important Disclosures\nMorgan Stanley & Co. International PLC and its affiliates have a significant financial interest in the debt securities of AutoNation Inc., Avis Budget Group Inc,\nBorgWarner Inc., Ford Motor Company, General Motors Company, Group 1 Automotive, Inc, Lear Corporation, Lithia Motors Inc., Magna International Inc.,\nTesla Inc.\nMorgan Stanley Research policy is to update research reports as and when the Research Analyst and Research Management deem appropriate, based on\ndevelopments with the issuer, the sector, or the market that may have a material impact on the research views or opinions stated therein. In addition, certain\nResearch publications are intended to be updated on"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "Warner Inc., Ford Motor Company, General Motors Company, Group 1 Automotive, Inc, Lear Corporation, Lithia Motors Inc., Magna International Inc.,\nTesla Inc.\nMorgan Stanley Research policy is to update research reports as and when the Research Analyst and Research Management deem appropriate, based on\ndevelopments with the issuer, the sector, or the market that may have a material impact on the research views or opinions stated therein. In addition, certain\nResearch publications are intended to be updated on a regular periodic basis (weekly/monthly/quarterly/annual) and will ordinarily be updated with that\nfrequency, unless the Research Analyst and Research Management determine that a different publication schedule is appropriate based on current conditions.\nMorgan Stanley is not acting as a municipal advisor and the opinions or views contained herein are not intended to be, and do not constitute, advice within the\nmeaning of Section 975 of the Dodd-Frank Wall Street Reform and Consumer Protection Act.\nMorgan Stanley produces an equity research product called a \"Tactical Idea.\" Views contained in a \"Tactical Idea\" on a particular stock may be contrary to the\nrecommendations or views expressed in research on the same stock. This may be the result of differing time horizons, methodologies, market events, or other\nfactors. For all research available on a particular stock, please contact your sales representative or go to Matrix at http://www.morganstanley.com/matrix.\nMorgan Stanley Research is provided to our clients through our proprietary research portal on Matrix and also distributed electronically by Morgan Stanley to\nclients. Certain, but not all, Morgan Stanley Research products are also made available to clients through third-party vendors or redistributed to clients through\nalternate electronic means as a convenience. For access to all available Morgan Stanley Research, please contact your sales representative or go to Matrix at\nhttp://www.morganstanley.com/matrix.\nAny access and/or use of Morgan Stanley Research is subject to Morgan Stanley's Terms of Use (http://www.morganstanley.com/terms.html). By accessing\nand/or using Morgan Stanley Research, you are indicating that you have read and agree to be bound by our Terms of Use\n(http://www.morganstanley.com/terms.html). In addition you consent to Morgan Stanley processing your personal data and using cookies in accordance with\nour Privacy Policy and our Global Cookies Policy (http://www.morganstanley.com/privacy_pledge.html), including for the purposes of setting your preferences\nand to collect readership data so that we can deliver better and more personalized service and products to you. To find out more information about how Morgan\nStanley processes personal data, how we use cookies and how to reject cookies see our Privacy Policy and our Global Cookies Policy\n(http://www.morganstanley.com/privacy_pledge.html).\nIf you do not agree to our Terms of Use and/or if you do not wish to provide your consent to Morgan Stanley processing your personal data or using cookies\nplease do not access our research.\nMorgan Stanley Research does not provide individually tailored investment advice. Morgan Stanley Research has been prepared without regard to the\ncircumstances and objectives of those who receive it. Morgan Stanley recommends that investors independently evaluate particular investments and\nstrategies, and encourages investors to seek the advice of a financial adviser. The appropriateness of an investment or strategy will depend on an investor's\ncircumstances and objectives. The securities, instruments, or strategies discussed in Morgan Stanley Research may not be suitable for all investors, and\n8\n\n\fcertain investors may not be eligible to purchase or participate in some or all of them. Morgan Stanley Research is not an offer to buy or sell or the solicitation\nof an offer to buy or sell any security/instrument or to participate in any particular trading strategy. The value of and income from your investments may vary\nbecause of changes in interest rates, foreign exchange rates, default rates, prepayment rates, securities/instruments prices, market indexes, operational or\nfinancial conditions of companies or other factors. There may be time limitations on the exercise of options or other rights in securities/instruments\ntransactions. Past performance is not necessarily a guide to future performance. Estimates of future performance are based on assumptions that may not be\nrealized. If provided, and unless otherwise stated, the closing price on the cover page is that of the primary exchange for the subject company's\nsecurities/instruments.\nThe fixed income research analysts, strategists or economists principally responsible for the preparation of Morgan Stanley Research have received\ncompensation based upon various factors, including quality, accuracy and value of research, firm profitability or revenues (which include fixed income trading\nand capital markets profitability or revenues), client feedback and competitive factors. Fixed Income Research analysts', strategists' or economists'\ncompensation is not linked to investment banking or capital markets transactions performed by Morgan Stanley or the profitability or revenues of particular\ntrading desks.\nThe \"Important Regulatory Disclosures on Subject Companies\" section in Morgan Stanley Research lists all companies mentioned where Morgan Stanley\nowns 1% or more of a class of common equity securities of the companies. For all other companies mentioned in Morgan Stanley Research, Morgan Stanley\nmay have an investment of less than 1% in securities/instruments or derivatives of securities/instruments of companies and may trade them in ways different\nfrom those discussed in Morgan Stanley Research. Employees of Morgan Stanley not involved in the preparation of Morgan Stanley Research may have\ninvestments in securities/instruments or derivatives of securities/instruments of companies mentioned and may trade them in ways different from those\ndiscussed in Morgan Stanley Research. Derivatives may be issued by Morgan Stanley or associated persons.\nWith the exception of information regarding Morgan Stanley, Morgan Stanley Research is based on public information. Morgan Stanley makes every effort to\nuse reliable, comprehensive information, but we make no representation that it is accurate or complete. We have no obligation to tell"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "Morgan Stanley Research may have\ninvestments in securities/instruments or derivatives of securities/instruments of companies mentioned and may trade them in ways different from those\ndiscussed in Morgan Stanley Research. Derivatives may be issued by Morgan Stanley or associated persons.\nWith the exception of information regarding Morgan Stanley, Morgan Stanley Research is based on public information. Morgan Stanley makes every effort to\nuse reliable, comprehensive information, but we make no representation that it is accurate or complete. We have no obligation to tell you when opinions or\ninformation in Morgan Stanley Research change apart from when we intend to discontinue equity research coverage of a subject company. Facts and views\npresented in Morgan Stanley Research have not been reviewed by, and may not reflect information known to, professionals in other Morgan Stanley business\nareas, including investment banking personnel.\nMorgan Stanley Research personnel may participate in company events such as site visits and are generally prohibited from accepting payment by the\ncompany of associated expenses unless pre-approved by authorized members of Research management.\nMorgan Stanley may make investment decisions that are inconsistent with the recommendations or views in this report.\nTo our readers based in Taiwan or trading in Taiwan securities/instruments: Information on securities/instruments that trade in Taiwan is distributed by Morgan\nStanley Taiwan Limited (\"MSTL\"). Such information is for your reference only. The reader should independently evaluate the investment risks and is solely\nresponsible for their investment decisions. Morgan Stanley Research may not be distributed to the public media or quoted or used by the public media without\nthe express written consent of Morgan Stanley. Any non-customer reader within the scope of Article 7-1 of the Taiwan Stock Exchange Recommendation\nRegulations accessing and/or receiving Morgan Stanley Research is not permitted to provide Morgan Stanley Research to any third party (including but not\nlimited to related parties, affiliated companies and any other third parties) or engage in any activities regarding Morgan Stanley Research which may create or\ngive the appearance of creating a conflict of interest. Information on securities/instruments that do not trade in Taiwan is for informational purposes only and is\nnot to be construed as a recommendation or a solicitation to trade in such securities/instruments. MSTL may not execute transactions for clients in these\nsecurities/instruments.\nMorgan Stanley is not incorporated under PRC law and the research in relation to this report is conducted outside the PRC. Morgan Stanley Research does\nnot constitute an offer to sell or the solicitation of an offer to buy any securities in the PRC. PRC investors shall have the relevant qualifications to invest in\nsuch securities and shall be responsible for obtaining all relevant approvals, licenses, verifications and/or registrations from the relevant governmental\nauthorities themselves. Neither this report nor any part of it is intended as, or shall constitute, provision of any consultancy or advisory service of securities\ninvestment as defined under PRC law. Such information is provided for your reference only.\nMorgan Stanley Research is disseminated in Brazil by Morgan Stanley C.T.V.M. S.A. located at Av. Brigadeiro Faria Lima, 3600, 6th floor, S\u00e3o Paulo - SP,\nBrazil; and is regulated by the Comiss\u00e3o de Valores Mobili\u00e1rios; in Mexico by Morgan Stanley M\u00e9xico, Casa de Bolsa, S.A. de C.V which is regulated by\nComision Nacional Bancaria y de Valores. Paseo de los Tamarindos 90, Torre 1, Col. Bosques de las Lomas Floor 29, 05120 Mexico City; in Japan by\nMorgan Stanley MUFG Securities Co., Ltd. and, for Commodities related research reports only, Morgan Stanley Capital Group Japan Co., Ltd; in Hong Kong\nby Morgan Stanley Asia Limited (which accepts responsibility for its contents) and by Morgan Stanley Bank Asia Limited; in Singapore by Morgan Stanley\nAsia (Singapore) Pte. (Registration number 199206298Z) and/or Morgan Stanley Asia (Singapore) Securities Pte Ltd (Registration number 200008434H),\nregulated by the Monetary Authority of Singapore (which accepts legal responsibility for its contents and should be contacted with respect to any matters\narising from, or in connection with, Morgan Stanley Research) and by Morgan Stanley Bank Asia Limited, Singapore Branch (Registration number\nT14FC0118J); in Australia to \"wholesale clients\" within the meaning of the Australian Corporations Act by Morgan Stanley Australia Limited A.B.N. 67 003 734\n576, holder of Australian financial services license No. 233742, which accepts responsibility for its contents; in Australia to \"wholesale clients\" and \"retail\nclients\" within the meaning of the Australian Corporations Act by Morgan Stanley Wealth Management Australia Pty Ltd (A.B.N. 19 009 145 555, holder of\nAustralian financial services license No. 240813, which accepts responsibility for its contents; in Korea by Morgan Stanley & Co International plc, Seoul\nBranch; in India by Morgan Stanley India Company Private Limited; in Canada by Morgan Stanley Canada Limited; in Germany and the European Economic\nArea where required by Morgan Stanley Europe S.E., authorised and regulated by Bundesanstalt fuer Finanzdienstleistungsaufsicht (BaFin) under the\nreference number 149169; in the US by Morgan Stanley & Co. LLC, which accepts responsibility for its contents. Morgan Stanley & Co. International plc,\nauthorized by the Prudential Regulatory Authority and regulated by the Financial Conduct Authority and the Prudential Regulatory Authority, disseminates in\nthe UK research that it has prepared, and approves solely for the purposes of section 21 of the Financial Services and Markets Act 2000, research which has\nbeen prepared by any of its affiliates. RMB Morgan Stanley Proprietary Limited is a member of the JSE Limited and A2X (Pty) Ltd. RMB"}}
{"type": "error", "data": "Entity Extraction Error", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 123, in __call__\n    result = await self._process_document(text, prompt_variables)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\graph\\extractors\\graph\\graph_extractor.py\", line 151, in _process_document\n    response = await self._llm(\n               ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\json_parsing_llm.py\", line 34, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_token_replacing_llm.py\", line 37, in __call__\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_history_tracking_llm.py\", line 33, in __call__\n    output = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 398, in <lambda>\n    self._add_action_func(lambda rs: rs.outcome.result())\n                                     ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 162, in execute_with_retry\n    await self._rate_limiter.acquire(input_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\limiting\\tpm_rpm_limiter.py\", line 32, in acquire\n    await self._tpm_limiter.acquire(num_tokens)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\aiolimiter\\leakybucket.py\", line 95, in acquire\n    raise ValueError(\"Can't acquire more than the maximum capacity\")\nValueError: Can't acquire more than the maximum capacity\n", "source": "Can't acquire more than the maximum capacity", "details": {"doc_index": 0, "text": "International plc,\nauthorized by the Prudential Regulatory Authority and regulated by the Financial Conduct Authority and the Prudential Regulatory Authority, disseminates in\nthe UK research that it has prepared, and approves solely for the purposes of section 21 of the Financial Services and Markets Act 2000, research which has\nbeen prepared by any of its affiliates. RMB Morgan Stanley Proprietary Limited is a member of the JSE Limited and A2X (Pty) Ltd. RMB Morgan Stanley\nProprietary Limited is a joint venture owned equally by Morgan Stanley International Holdings Inc. and RMB Investment Advisory (Proprietary) Limited, which is\nwholly owned by FirstRand Limited. The information in Morgan Stanley Research is being disseminated by Morgan Stanley Saudi Arabia, regulated by the\nCapital Market Authority in the Kingdom of Saudi Arabia , and is directed at Sophisticated investors only.\nThe information in Morgan Stanley Research is being communicated by Morgan Stanley & Co. International plc (DIFC Branch), regulated by the Dubai\nFinancial Services Authority (the DFSA), and is directed at Professional Clients only, as defined by the DFSA. The financial products or financial services to\nwhich this research relates will only be made available to a customer who we are satisfied meets the regulatory criteria to be a Professional Client. A\ndistribution of the different MS Research ratings or recommendations, in percentage terms for Investments in each sector covered, is available upon request\nfrom your sales representative.\nThe information in Morgan Stanley Research is being communicated by Morgan Stanley & Co. International plc (QFC Branch), regulated by the Qatar\nFinancial Centre Regulatory Authority (the QFCRA), and is directed at business customers and market counterparties only and is not intended for Retail\nCustomers as defined by the QFCRA.\nAs required by the Capital Markets Board of Turkey, investment information, comments and recommendations stated here, are not within the scope of\ninvestment advisory activity. Investment advisory service is provided exclusively to persons based on their risk and income preferences by the authorized firms.\nComments and recommendations stated here are general in nature. These opinions may not fit to your financial status, risk and return preferences. For this\nreason, to make an investment decision by relying solely to this information stated here may not bring about outcomes that fit your expectations.\nThe trademarks and service marks contained in Morgan Stanley Research are the property of their respective owners. Third-party data providers make no\nwarranties or representations relating to the accuracy, completeness, or timeliness of the data they provide and shall not have liability for any damages relating\n9\n\n\fto such data. The Global Industry Classification Standard (GICS) was developed by and is the exclusive property of MSCI and S&P.\nMorgan Stanley Research, or any portion thereof may not be reprinted, sold or redistributed without the written consent of Morgan Stanley.\nIndicators and trackers referenced in Morgan Stanley Research may not be used as, or treated as, a benchmark under Regulation EU 2016/1011, or any other\nsimilar framework.\nThe issuers and/or fixed income products recommended or discussed in certain fixed income research reports may not be continuously followed. Accordingly,\ninvestors should regard those fixed income research reports as providing stand-alone analysis and should not expect continuing analysis or additional reports\nrelating to such issuers and/or individual fixed income products.\nMorgan Stanley may hold, from time to time, material financial and commercial interests regarding the company subject to the Research report.\nINDUSTRY COVERAGE: Autos & Shared Mobility\nCOMPANY (TICKER)\n\nRATING (AS OF)\n\nPRICE* (01/26/2023)\n\nU (03/17/2021)\nO (02/28/2022)\nE (11/28/2022)\nU (05/20/2022)\nU (01/17/2023)\nU (10/13/2021)\nE (11/28/2022)\nO (07/10/2018)\nNR (11/04/2022)\nO (05/09/2019)\nU (01/25/2023)\nO (10/05/2022)\nE (01/25/2023)\nE (02/08/2022)\nU (05/20/2022)\nE (02/01/2022)\nE (12/06/2021)\nE (02/28/2022)\nU (01/25/2023)\nU (02/09/2021)\nU (09/13/2021)\nO (10/14/2021)\nE (11/20/2022)\nU (11/17/2021)\nU (11/09/2022)\nO (12/05/2021)\nU (11/17/2021)\nO (11/18/2020)\nE (06/01/2022)\n\n$42.15\n$8.36\n$106.80\n$200.63\n$117.50\n$189.09\n$45.32\n$66.26\n$6.50\n$247.77\n$6.82\n$12.92\n$8.73\n$36.48\n$206.44\n$44.08\n$17.26\n$136.25\n$5.42\n$242.77\n$9.00\n$62.05\n$35.97\n$122.57\n$8.14\n$18.31\n$51.00\n$160.27\n$144.28\n\nAdam Jonas, CFA\nAdient PLC (ADNT.N)\nAmerican Axle & Manufacturing Holdings Inc (AXL.N)\nAptiv Plc (APTV.N)\nAsbury Automotive Group Inc (ABG.N)\nAutoNation Inc. (AN.N)\nA"}}
{"type": "error", "data": "Error executing verb \"cluster_graph\" in create_base_entity_graph: Columns must be same length as key", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 410, in _execute_verb\n    result = node.verb.func(**verb_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\graph\\clustering\\cluster_graph.py\", line 102, in cluster_graph\n    output_df[[level_to, to]] = pd.DataFrame(\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\pandas\\core\\frame.py\", line 4299, in __setitem__\n    self._setitem_array(key, value)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\pandas\\core\\frame.py\", line 4341, in _setitem_array\n    check_key_length(self.columns, key, value)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\pandas\\core\\indexers\\utils.py\", line 390, in check_key_length\n    raise ValueError(\"Columns must be same length as key\")\nValueError: Columns must be same length as key\n", "source": "Columns must be same length as key", "details": null}
{"type": "error", "data": "Error running pipeline!", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\run.py\", line 323, in run_pipeline\n    result = await workflow.run(context, callbacks)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 369, in run\n    timing = await self._execute_verb(node, context, callbacks)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 410, in _execute_verb\n    result = node.verb.func(**verb_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\graph\\clustering\\cluster_graph.py\", line 102, in cluster_graph\n    output_df[[level_to, to]] = pd.DataFrame(\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\pandas\\core\\frame.py\", line 4299, in __setitem__\n    self._setitem_array(key, value)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\pandas\\core\\frame.py\", line 4341, in _setitem_array\n    check_key_length(self.columns, key, value)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\pandas\\core\\indexers\\utils.py\", line 390, in check_key_length\n    raise ValueError(\"Columns must be same length as key\")\nValueError: Columns must be same length as key\n", "source": "Columns must be same length as key", "details": null}
