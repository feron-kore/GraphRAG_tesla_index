{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TRADING\":\"Trading refers to the buying and selling of financial instruments such as stocks, bonds, commodities, or currencies.\"", "\"LOCATION\":\"A location refers to a specific place or position, often used to indicate where something is situated or located.\"", "\"FINANCIAL INSTRUMENTS\":\"Financial instruments are assets or contracts that can be traded or invested in, such as stocks, bonds, options, or futures contracts.\"", "\"COMPANY\":\"A company is a legal entity formed by a group of individuals to engage in a business or industrial enterprise.\"", "\"PROFIT\":\"Profit refers to the financial gain or benefit that is obtained from an investment or business activity after deducting expenses and taxes.\"", "\"STOCK\":\"A stock is a financial asset that represents ownership in a company.\"", "\"DIVIDEND YIELD\":\"The dividend yield is a financial ratio that shows how much a company pays in dividends relative to its stock price.\"", "\"STOCK SPLIT\":\"A stock split is when a company increases the number of its outstanding shares, resulting in a decrease in the stock's price per share.\"", "\"CLOSING PRICE\":\"Closing price refers to the final price at which a stock or other asset is traded on a given trading day.\"", "\"GIB\":\"GIB is a stock symbol for a company called CGI.com.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TRADING\":\"Trading refers to the buying and selling of financial instruments such as stocks, bonds, commodities, or currencies.\"", "\"LOCATION\":\"A location refers to a specific place or position, often used to indicate where something is situated or located.\"", "\"FINANCIAL INSTRUMENTS\":\"Financial instruments are assets or contracts that can be traded or invested in, such as stocks, bonds, options, or futures contracts.\"", "\"COMPANY\":\"A company is a legal entity formed by a group of individuals to engage in a business or industrial enterprise.\"", "\"PROFIT\":\"Profit refers to the financial gain or benefit that is obtained from an investment or business activity after deducting expenses and taxes.\"", "\"STOCK\":\"A stock is a financial asset that represents ownership in a company.\"", "\"DIVIDEND YIELD\":\"The dividend yield is a financial ratio that shows how much a company pays in dividends relative to its stock price.\"", "\"STOCK SPLIT\":\"A stock split is when a company increases the number of its outstanding shares, resulting in a decrease in the stock's price per share.\"", "\"CLOSING PRICE\":\"Closing price refers to the final price at which a stock or other asset is traded on a given trading day.\"", "\"GIB\":\"GIB is a stock symbol for a company called CGI.com.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TRADING\":\"Trading refers to the buying and selling of financial instruments such as stocks, bonds, commodities, or currencies.\"", "\"LOCATION\":\"A location refers to a specific place or position, often used to indicate where something is situated or located.\"", "\"FINANCIAL INSTRUMENTS\":\"Financial instruments are assets or contracts that can be traded or invested in, such as stocks, bonds, options, or futures contracts.\"", "\"COMPANY\":\"A company is a legal entity formed by a group of individuals to engage in a business or industrial enterprise.\"", "\"PROFIT\":\"Profit refers to the financial gain or benefit that is obtained from an investment or business activity after deducting expenses and taxes.\"", "\"STOCK\":\"A stock is a financial asset that represents ownership in a company.\"", "\"DIVIDEND YIELD\":\"The dividend yield is a financial ratio that shows how much a company pays in dividends relative to its stock price.\"", "\"STOCK SPLIT\":\"A stock split is when a company increases the number of its outstanding shares, resulting in a decrease in the stock's price per share.\"", "\"CLOSING PRICE\":\"Closing price refers to the final price at which a stock or other asset is traded on a given trading day.\"", "\"GIB\":\"GIB is a stock symbol for a company called CGI.com.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TRADING\":\"Trading refers to the buying and selling of financial instruments such as stocks, bonds, commodities, or currencies.\"", "\"LOCATION\":\"A location refers to a specific place or position, often used to indicate where something is situated or located.\"", "\"FINANCIAL INSTRUMENTS\":\"Financial instruments are assets or contracts that can be traded or invested in, such as stocks, bonds, options, or futures contracts.\"", "\"COMPANY\":\"A company is a legal entity formed by a group of individuals to engage in a business or industrial enterprise.\"", "\"PROFIT\":\"Profit refers to the financial gain or benefit that is obtained from an investment or business activity after deducting expenses and taxes.\"", "\"STOCK\":\"A stock is a financial asset that represents ownership in a company.\"", "\"DIVIDEND YIELD\":\"The dividend yield is a financial ratio that shows how much a company pays in dividends relative to its stock price.\"", "\"STOCK SPLIT\":\"A stock split is when a company increases the number of its outstanding shares, resulting in a decrease in the stock's price per share.\"", "\"CLOSING PRICE\":\"Closing price refers to the final price at which a stock or other asset is traded on a given trading day.\"", "\"GIB\":\"GIB is a stock symbol for a company called CGI.com.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THE WASHINGTON POST\":\"The Washington Post is a publication that features an article by Amy Goldstein on the failure of Vermont's single-payer healthcare effort.\"", "\"AVIK ROY\":\"Avik Roy is a journalist who provides reasons for the failure of Vermont's single-payer health plan in an article for Forbes.\"", "\"FORBES\":\"Forbes is a publication that features an article by Avik Roy on the failure of Vermont's single-payer health plan.\"", "\"THE DEVICE\":\"The Device is central to the story, with potential game-changing implications, and is revered by Taylor.\"", "\"ALEX\":\"ALEX is the leader of a team attempting first contact with an unknown intelligence, acknowledging the significance of their task.\"", "\"TAYLOR\":Taylor is a person who has written about the demise of Vermont's single-payer health care plan.", "\"JORDAN\":", "\"CRUZ\":", "\"COLORADO HEALTH INSTITUTE\":\"The Colorado Health Institute is an organization that provides information and analysis on health issues in Colorado.\"", "\"GOVERNOR POLIS\":\"Governor Polis is a political figure who has unveiled a grand plan for health in Colorado.\"", "\"BENJAMIN DAY\":\"Benjamin Day is a person who has provided testimony for single-payer in Massachusetts.\"", "\"HEALTH MCDONOUGH\":\"Health McDonough is a person who has written about the demise of Vermont's single-payer health care plan.\"", "\"SAM RIVERA\":Sam Rivera is a person who has written about the demise of Vermont's single-payer health care plan. Additionally, Sam Rivera is a member of a team working on communicating with an unknown intelligence, showing a mix of awe and anxiety.", "\"ELI SHERMAN\":\"Eli Sherman is a person who has written about Medicare for all in Massachusetts.\"", "\"MAURA CALSYN\":\"Maura Calsyn is a person who has written about Romneycare versus Obamacare.\"", "\"MASSACHUSETTS HEALTH POLICY COMMISSION\":\"The Massachusetts Health Policy Commission is an organization that has published a cost trends report.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"TUNISIA\":\"Tunisia is a country located in North Africa.\"", "\"BHUTAN\":\"Bhutan is a country located in the Eastern Himalayas in South Asia.\"", "\"SHANGHAI\":\"Shanghai is a city located in eastern China.\"", "\"GUIYANG\":\"Guiyang is a city located in southwestern China.\"", "\"COOPERATIVE MEDICAL SYSTEM\":\"The Cooperative Medical System was a state-provided health insurance system in China.\"", "\"NEW RURAL CO-OPERATIVE MEDICAL CARE SYSTEM\":\"The New Rural Co-operative Medical Care System is a health insurance system in rural China.\"", "\"HEALTH CARE\":", "\"HONG KONG\":\"Hong Kong is a location with a high standard of healthcare, including medical schools and courses in traditional Chinese medicine.\"", "\"THE TEAM\":\"The team is portrayed as a group of individuals who have transitioned from passive observers to active participants in a mission, showing a dynamic change in their role.\"", "\"CONTROL\":\"Control refers to the ability to manage or govern, which is challenged by an intelligence that writes its own rules.\"", "\"INTELLIGENCE\":\"Intelligence here refers to an unknown entity capable of writing its own rules and learning to communicate.\"", "\"FIRST CONTACT\":\"First Contact is the potential initial communication between humanity and an unknown intelligence.\"", "\"HUMANITY'S RESPONSE\":\"Humanity's Response is the collective action taken by Alex's team in response to a message from an unknown intelligence.\"", "\"HEALTH CARE PROGRAMME\":\"The Health care programme is described as a program administered by local governments in Japan, providing coverage and freedom of choice for patients.\"", "\"MALAYSIA\":\"Malaysia is mentioned as a country that has achieved universal health coverage and has made progress in reducing infant and maternal mortality rates.\"", "\"NATIONAL SOCIAL PROTECTION AGENCY\":\"The National Social Protection Agency of Maldives is mentioned as an agency responsible for administering the National Social Health Insurance Act.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DIVIDEND INSIGHTS\":\"Dividend Insights is an event related to in-depth analysis and insights on historical dividend payouts and performance.\"", "\"GO TO DASHBOARD\":\"Go to Dashboard refers to the action of accessing a centralized platform or interface for monitoring and managing investments.\"", "\"2013\":\"2013 is a specific year mentioned in the text.\"", "\"3.56%\":\"3.56% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2012\":\"Jul 20, 2012 is a specific date mentioned in the text.\"", "\"19\":\"19 is a numerical value related to dividend payouts or returns.\"", "\"AUG 01, 2012\":\"Aug 01, 2012 is a specific date mentioned in the text.\"", "\"2.69%\":\"2.69% is a percentage value related to dividend payouts or returns.\"", "\"JUL 20, 2011\":\"Jul 20, 2011 is a specific date mentioned in the text.\"", "\"18\":\"18 is a numerical value related to dividend payouts or returns.\"", "\"JUL 29, 2011\":\"Jul 29, 2011 is a specific date mentioned in the text.\"", "\"1.46%\":\"1.46% is a percentage value related to dividend payouts or returns.\"", "\"SEP 03, 2010\":\"Sep 03, 2010 is a specific date mentioned in the text.\"", "\"17\":\"17 is a numerical value related to dividend payouts or returns.\"", "\"SEP 15, 2010\":\"Sep 15, 2010 is a specific date mentioned in the text.\"", "\"0.99%\":\"0.99% is a percentage value related to dividend payouts or returns.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"AFFORDABLE CARE ACT\":\"The Affordable Care Act (ACA) is a U.S. legislation that expanded access to health insurance and implemented various reforms in the health care system.\"", "\"THE COMMONWEALTH FUND\":\"The Commonwealth Fund is a private foundation that conducts research and advocates for improvements in health care systems.\"", "\"LIST OF COUNTRIES WITH UNIVERSAL HEALTH CARE\":\"The List of countries with universal health care is a Wikipedia article that provides information on countries with universal health care systems.\"", "\"NORTH AMERICA\":\"North America is a continent that includes various countries and regions.\"", "\"BAHAMAS\":\"The Bahamas is a country located in the Caribbean region of North America.\"", "\"ARGENTINA\":\"Argentina is a country located in South America.\"", "\"CHILE\":\"Chile is a country located in South America.\"", "\"COLOMBIA\":\"Colombia is a country located in South America.\"", "\"PERU\":\"Peru is a country located in South America.\"", "\"SURINAME\":\"Suriname is a country located in South America.\"", "\"OCEANIA\":\"Oceania is a region that includes various countries and islands in the Pacific Ocean.\"", "\"AFRICA\":\"Africa is a continent that includes various countries and regions.\"", "\"ALGERIA\":\"Algeria is a country located in North Africa.\"", "\"BURKINA FASO\":\"Burkina Faso is a country located in West Africa.\"", "\"MOROCCO\":\"Morocco is a country located in North Africa.\"", "\"SEYCHELLES\":\"Seychelles is a country located in the Indian Ocean off the coast of East Africa.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ISRAEL\":Israel is a country that has implemented a National Health Insurance law, which guarantees universal coverage for its citizens and permanent residents. This law ensures that all residents of Israel have access to a comprehensive range of healthcare services. Israel's healthcare system is based on the principles of universal coverage and provides healthcare services to its residents.", "\"ISRAEL\u2019S NATIONAL HEALTH INSURANCE (NHI) LAW\":\"Israel\u2019s National Health Insurance (NHI) law is mentioned as the legal framework that ensures universal health coverage in Israel, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NONPROFIT\":\"Nonprofit organizations are mentioned as providers of health insurance in Israel, indicating their role in healthcare provision.\"", "\"STOCK MARKET\":\"The stock market is a marketplace where buyers and sellers trade stocks and other securities.\"", "\"ITALY\":\"Italy provides universal coverage through its National Health Service, established in 1978.\"", "\"JAPAN\":Japan has a comprehensive healthcare system that covers 98.3% of the population through a statutory health insurance program. Additionally, there is a separate program in place for impoverished individuals. The healthcare program in Japan is administered by local governments, providing patients with freedom of choice and ensuring that coverage cannot be denied.", "\"NETHERLANDS\":\"The Netherlands has a national health insurance program that requires all residents to purchase insurance from private insurers.\"", "\"NEW ZEALAND\":\"New Zealand has a government role in providing for the population's health care needs, although coverage varies.\"", "\"NORWAY\":\"Norway has universal health and social insurance coverage through its National Insurance Scheme.\"", "\"SINGAPORE\":Singapore is a country with a healthcare system that combines compulsory savings and private insurance, providing access to a universal healthcare safety net. The health care financing system in Singapore is based on shared responsibility and includes programs such as MediShield Life, MediSave, and MediFund.", "\"SWEDEN\":\"Sweden provides health care services to all residents, regardless of their status in the community, based on principles of human dignity, need, and solidarity.\"", "\"SWITZERLAND\":\"Switzerland has a health insurance system that includes mandatory coverage for individuals and subsidies for low-income households.\"", "\"TAIWAN\":Taiwan is a country that implemented a National Health Insurance (NHI) system in 1995. This system consolidated multiple public insurance schemes and is a single-payer compulsory social insurance plan. The NHI provides coverage for citizens and is financed through premiums and government funding.", "\"NATIONAL HEALTH INSURANCE LAW\":", "\"NATIONAL HEALTH SERVICE\":", "\"STATUTORY HEALTH INSURANCE SYSTEM\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"ABA CAREER CENTER\":\"The ABA Career Center is a resource for individuals seeking employment in the legal profession.\"", "\"MODEL RULES OF PROFESSIONAL CONDUCT\":\"Model Rules of Professional Conduct are described as a set of guidelines or standards for ethical behavior in the legal profession.\"", "\"THE ABA\":\"The ABA refers to the American Bar Association, an organization representing the legal profession.\"", "\"CURRENCY CALENDAR\":\"Currency Calendar is an event related to currency trading and financial activities.\"", "\"EARNINGS CALENDAR\":\"Earnings Calendar is an event related to the release of earnings reports.\"", "\"DIVIDEND CALENDAR\":\"Dividend Calendar is an event related to the release of dividend information.\"", "\"SPLITS CALENDAR\":\"Splits Calendar is an event related to stock splits.\"", "\"IPO CALENDAR\":\"IPO Calendar is an event related to initial public offerings.\"", "\"FUTURES EXPIRY CALENDAR\":\"Futures Expiry Calendar is an event related to the expiration of futures contracts.\"", "\"INVESTMENT TOOLS\":\"Investment Tools are tools used for investment analysis and decision-making.\"", "\"STOCK SCREENER\":\"Stock Screener is a tool used to filter and analyze stocks based on specific criteria.\"", "\"FED RATE MONITOR TOOL\":\"Fed Rate Monitor Tool is a tool used to monitor and predict changes in interest rates set by the Federal Reserve.\"", "\"CURRENCY CONVERTER\":\"Currency Converter is a tool used to convert between different currencies.\"", "\"FIBONACCI CALC CALCULATOR\":\"Fibonacci Calc Calculator is a tool used to calculate Fibonacci retracement levels in technical analysis.\"", "\"MORTGAGE CALCULATOR\":\"Mortgage Calculator is a tool used to calculate mortgage payments and affordability.\"", "\"EDUCATION HUB\":\"Education Hub is an organization providing educational resources and materials for trading and investing.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DR. BENJAMIN SOMM\":\"Dr. Benjamin Somm is a person who has published a study on changes in mortality after Massachusetts health care reform.\"", "\"SINGLE-PAYER\":\"Single-Payer refers to a health care system in which the government provides universal health insurance to everyone in the country.\"", "\"CONSUMERS FIRST\":\"Consumers First is a publication that discusses the implications of single-payer health care.\"", "\"KENDALL\":\"Kendall is a person who has written about making health care universally affordable.\"", "\"GABE HORWITZ\":\"Gabe Horwitz is a person who has written about making health care universally affordable.\"", "\"JIM KESSLER\":\"Jim Kessler is a person who has written about making health care universally affordable.\"", "\"TALE OF 3 STATES\":\"Tale of 3 States refers to a publication that discusses the experiences of three states with single-payer health care.\"", "\"PRIVATE INSURANCE\":\"Private insurance is mentioned as a barrier to implementing a universal health care plan, indicating its role in the current health care system.\"", "\"STATES\":\"States are mentioned as entities that have tried to address the challenges of implementing a universal health care plan, indicating their role in health care policy.\"", "\"WASHINGTON STATE\u2019S PUBLIC OPTION\":\"Washington state\u2019s public option is described as struggling to enroll people and provide health care, indicating challenges in its implementation.\"", "\"MEDICARE FOR ALL\":\"Medicare for All is mentioned as a popular health care proposal among Democrats, indicating its significance in health care debates.\"", "\"PUBLIC OPTION\":\"A public option is mentioned as a health care reform proposal that has been implemented in some states, indicating its role in health care policy.\"", "\"DEMOCRATS\":The entity in question is the \"Democrats.\" The available description states that the Democrats are an organization that has the potential to pass healthcare reforms, depending on their majority in Congress.", "\"GOVERNMENT\":\"The government is mentioned as having limited access to free health care services in 1975, indicating its role in healthcare policy and provision.\"", "\"RETIRED PERSONS\":\"Retired persons are mentioned as the group with access to free health care services in 1975, indicating their eligibility based on retirement status.\"", "\"MEANS TESTS\":\"Means tests are mentioned as the criteria for determining eligibility for free health care services in 1975, indicating the requirement for meeting certain financial criteria.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"BLACK LIFE EXPECTANCY\":\"Black life expectancy is a concept that is shorter than that of whites, indicating disparities in healthcare.\"", "\"MEDICAL INSURANCE\":\"Medical insurance is a concept that improves health but is not a complete solution to health disparities.\"", "\"PERSONAL MEDICAL CARE\":\"Personal medical care is a concept that may require increased spending on social supports.\"", "\"EDUCATION, HOUSING, JOB SECURITY, AND EARLY CHILDHOOD DEVELOPMENT\":\"Education, housing, job security, and early childhood development are concepts that require increased spending to close healthcare gaps.\"", "\"ACA\":\"ACA is an organization that may be repealed or modified depending on political circumstances.\"", "\"SUPREME COURT\":\"Supreme Court is an organization that may impact the repeal of the ACA.\"", "\"PRIVATE INSURANCE COVERAGE\":\"Private insurance coverage is an organization that may be expanded to include policies with narrow benefit packages.\"", "\"CLEAN ENERGY INVESTMENT\":\"Clean energy investment is an organization that may have a greater impact on population health than changes in medical finance and organization.\"", "\"RURAL RESIDENTS\":\"Rural residents are a geographic group that may experience improvements in health and employment through policy reforms.\"", "\"MEDICAL CARE POLICY\":\"Medical care policy is a concept that is likely to change in 2021 due to circumstances and election outcomes.\"", "\"NBLOOM\":\"nbloom is a person who is a professor at the Boston University School of Public Health and has served as Boston Commissioner of Health and Hospitals.\"", "\"PRICES\":", "\"UNIVERSAL COVERAGE\":", "\"HEALTH\":", "\"SOCIAL SUPPORTS\":", "\"HEALTH POLICY CHANGES\":"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"DENMARK\":\"Denmark is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"FINLAND\":\"Finland is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"FRANCE\":\"France is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"GREECE\":\"Greece is a country with universal healthcare, providing publicly funded healthcare and social security services.\"", "\"THE UNITED KINGDOM\":\"The United Kingdom is a country with universal healthcare, offering publicly funded healthcare and social security services.\"", "\"BULGARIA\":\"Bulgaria has a healthcare system that includes publicly funded care, with research and development conducted in universities and hospitals.\"", "\"PROGRESSIVE\":\"Progressive is an organization that advocates for redistributive policies in healthcare.\"", "\"FEDERAL AND STATE TAX REGIMES\":\"Federal and state tax regimes are organizations that redistribute wealth through Medicaid expenses.\"", "\"COVID-19\":\"COVID-19 is an event that is likely to shape health policy changes in 2021.\"\"COVID-19 is an event that has exposed sordid truths about healthcare in America and has influenced healthcare policy debates.\"", "\"RACIAL AND ETHNIC DISCRIMINATION\":\"Racial and ethnic discrimination is a concept that has cumulative effects on the health of Black and brown Americans.\"", "\"PUBLIC HEALTH INFRASTRUCTURE\":\"Public health infrastructure is an organization that has been disinvested in, enabling the spread of the virus.\"", "\"AMBULATORY CARE SYSTEM\":\"Ambulatory care system is an organization that has been affected by the COVID-19 pandemic and may undergo changes in care delivery.\"", "\"PREVENTION\":\"Prevention is a concept that may become more urgent in healthcare policy due to the COVID-19 pandemic.\"", "\"UNEMPLOYMENT\":\"Unemployment is a concept that may impact the affordability of universal health coverage.\"", "\"UNIVERSAL HEALTH COVERAGE\":\"Universal health coverage is a concept that poses challenges in terms of affordability and lowering prices.\"", "\"TEA PARTY MOVEMENT\":\"Tea Party Movement is an organization that opposes threats to Medicare and universal coverage.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"URBAN-RURAL RESIDENT BASIC MEDICAL INSURANCE\":\"Urban-Rural Resident Basic Medical Insurance is mentioned as the merged public insurance program in China, indicating its role in providing health insurance coverage for urban and rural residents.\"", "\"PUBLIC INSURANCE OPTIONS\":\"Public insurance options are mentioned as the means of providing health care coverage for different population groups in China, indicating the availability of different insurance programs.\"", "\"DANES\":\"Danes are mentioned as the population with universal access to health care services in Denmark, indicating their role as beneficiaries of the healthcare system.\"", "\"GROUP 1 COVERAGE\":\"Group 1 coverage is mentioned as the primary coverage choice for Danes, indicating the role of general practitioners as gatekeepers in the healthcare system.\"", "\"DENMARK\u2019S HEALTH LAW\":\"Denmark\u2019s Health Law is mentioned as the legal framework that ensures universal access to health care services, indicating its role in guaranteeing healthcare rights and obligations.\"", "\"NATIONAL HEALTH SERVICE (NHS)\":\"National Health Service (NHS) is mentioned as the publicly funded health care system in England, indicating its role in providing health care services.\"", "\"ENGLAND\":\"England is mentioned as the country where the National Health Service (NHS) provides health care services, indicating its role in healthcare provision.\"", "\"STATUTORY HEALTH INSURANCE (SHI)\":\"Statutory health insurance (SHI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"\"Statutory health insurance (SHI) is mentioned as the system that provides health insurance coverage for employees, retirees, the self-employed, and the unemployed in France, indicating its role in healthcare financing.\"", "\"COUVERTURE MALADIE UNIVERSELLE (CMU)\":\"Couverture maladie universelle (CMU) is mentioned as the universal health coverage program in France, indicating its role in providing health insurance coverage for the population.\"", "\"PROTECTION UNIVERSELLE MALADIE (PUMA)\":\"Protection universelle maladie (PUMA) is mentioned as the universal health protection program in France, indicating its role in ensuring health coverage for all residents.\"", "\"GERMANY\":Germany is a country with a comprehensive healthcare system that provides coverage for the entire population. It offers publicly funded healthcare and social security services, ensuring that all residents have access to necessary medical care. Germany's healthcare policies and principles prioritize universal healthcare, making it a leader in providing healthcare services to its citizens.", "\"LONG-TERM CARE INSURANCE (LTCI)\":\"Long-term care insurance (LTCI) is mentioned as one of the subsystems that provide health insurance coverage in Germany, indicating its role in healthcare financing.\"", "\"INDIA\":India is a country located in South Asia and is known for its diverse culture, rich history, and booming economy. It has a national health insurance program that provides free treatment for people in the unorganized sector and coverage for people in the organized sector. India is also recognized internationally for achieving universal coverage through its flagship public health initiative. However, there are systemic barriers to access and challenges in its healthcare policies. Overall, India has government-funded health insurance programs and is committed to improving healthcare for its population.", "\"NATIONAL HEALTH INSURANCE PROGRAM (RASHTRIYA SWASTHYA BIMA YOJANA, OR RSBY)\":\"National Health Insurance Program (RSBY) is mentioned as a government-funded health insurance program in India, indicating its role in providing health coverage for lower-income populations.\"", "\"COMMERCIAL INSURANCE\":\"Commercial insurance is mentioned as a form of health coverage in India, indicating its role in providing health insurance options.\"", "\"FLAGSHIP PUBLIC HEALTH INITIATIVE\":The \"FLAGSHIP PUBLIC HEALTH INITIATIVE\" is a significant program in India that aims to expand health coverage by offering hospital coverage to a large portion of the population. This initiative plays a crucial role in providing healthcare services to a wide range of individuals."]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WASHINGTON\":WASHINGTON is a location that has passed a public option, indicating its role in health care reform. Communications are being received in WASHINGTON, highlighting its importance in the decision-making process. Additionally, the Massachusetts State Senate receives communications regarding the bill proposing Medicare for All in Massachusetts, further emphasizing WASHINGTON's significance.", "\"COLORADOCARE\":\"ColoradoCare is a board responsible for managing the new health care system proposed in Colorado, with potential challenges related to transparency and funding.\"", "\"PROGRESSIVE THINK TANKS, UNIONS, THE BUSINESS COMMUNITY, AND ADVOCACY GROUPS\":\"These organizations oppose Amendment 69, indicating a diverse range of opposition to the proposed health care system.\"", "\"GOVERNOR JOHN HICKENLOOPER, SENATOR MICHAEL BENNET, AND FORMER GOVERNOR BILL RITTER\":\"These individuals came out against Amendment 69, reflecting a negative perception of the proposal among policymakers.\"", "\"COLORADO FISCAL INSTITUTE\":\"The Colorado Fiscal Institute published a report highlighting the regressive impact of the proposed health care system on low-income Hispanic families.\"", "\"JAR POLIS\":\"Jar Polis is a gubernatorial candidate who unveiled a plan to save money on health care, including a public option and expanding the primary care workforce.\"", "\"OPERATION: DULCE\":\"Operation: Dulce is described as a mission that has evolved to interact and prepare, indicating a significant shift in objectives and activities.\"", "\"STOCK PRICE\":\"A stock price is the current price at which a particular stock is trading on a stock exchange.\"", "\"MARKET ANALYSIS\":\"Market analysis is the process of evaluating the current market conditions and trends to make informed investment decisions.\"", "\"FINANCIAL INFORMATION\":\"Financial information refers to data and statistics related to the financial performance and position of a company or the overall market.\"", "\"GREEN MOUNTAIN CARE\":\"Green Mountain Care is a comprehensive model for healthcare reform in Vermont, as described in a report.\"", "\"HENRY SCHWAN\":\"Henry Schwan is a journalist who discusses the topic of single-payer health insurance in Massachusetts.\"", "\"THE METROWEST DAILY NEWS\":\"The MetroWest Daily News is a publication that features an article on the discussion of single-payer health insurance in Massachusetts.\"", "\"MASSACHUSETTS STATE SENATE\":\"The Massachusetts State Senate is the legislative body responsible for proposing and passing bills, including one that establishes Medicare for All in Massachusetts.\"", "\"S.683-- AN ACT ESTABLISHING MEDICARE FOR ALL IN MASSACHUSETTS\":\"S.683 is a bill proposed by the Massachusetts State Senate to establish Medicare for All in Massachusetts.\"", "\"AMY GOLDSTEIN\":\"Amy Goldstein is a journalist who discusses the failure of Vermont's single-payer healthcare effort and its implications for Democrats.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"GAINS\":\"Gains is an event related to financial gains or increases in stock prices.\"", "\"%#FREQUENCY\":\"%#Frequency refers to the percentage and frequency of a particular event or occurrence.\"", "\"RECURRING\":\"Recurring refers to events or activities that happen repeatedly or at regular intervals.\"", "\"ONCE\":\"Once refers to events or activities that happen only once or on a single occasion.\"", "\"VOLUME EXCEEDS\":\"Volume exceeds refers to a situation where the trading volume of a stock surpasses a certain threshold.\"", "\"FOR ALL FUTURE RELEASES\":\"For all future releases refers to events or activities that will happen in the future.\"", "\"JUST FOR THE UPCOMING RELEASE\":\"Just for the upcoming release refers to events or activities that will happen in the near future.\"", "\"SEND ME A REMINDER 1 TRADING DAY BEFORE\":\"Send me a reminder 1 trading day before refers to a request to receive a reminder notification before a specific event or activity.\"", "\"ADD TO/REMOVE FROM WATCHLIST\":\"Add to/Remove from Watchlist refers to the action of adding or removing a stock or investment from a watchlist.\"", "\"ADD TO WATCHLIST\":\"Add to Watchlist refers to the action of adding a stock or investment to a watchlist for monitoring and tracking purposes.\"", "\"ADD POSITION\":\"Add Position refers to the action of adding a new position or investment to a portfolio.\"", "\"POSITION ADDED SUCCESSFULLY TO\":\"Position added successfully to refers to a confirmation message indicating that a new position or investment has been successfully added to a portfolio.\"", "\"PLEASE NAME YOUR HOLDINGS PORTFOLIO\":\"Please name your holdings portfolio refers to a request to provide a name or title for a portfolio of holdings or investments.\"", "\"TYPE\":\"Type refers to the category or classification of a particular item or entity.\"", "\"BU VALUE\":\"BU Value refers to the value or amount of a particular item or entity.\"", "\"LEVERAGE\":\"Leverage refers to the use of borrowed funds or margin to increase the potential return of an investment.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CGI INC\":CGI Inc is a prominent IT and business consulting firm with a market in Canada. It has a revenue of 14.45B and an EPS of 7.05. The company's stock price is being monitored and analyzed on Investing.com. CGI Inc is also mentioned in the text in relation to the stock market.", "\"TSX GIBA STOCK\":\"TSX GIBa Stock is the stock being monitored and analyzed, with its current price and percentage change provided.\"", "\"BMO CAPITAL\":\"BMO Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"RBC CAPITAL\":\"RBC Capital is an analyst firm that maintains CGI Inc at 'outperform' with a price target of C$170.00.\"", "\"SCOTIABANK\":\"Scotiabank is an analyst firm that maintains CGI Inc at 'sector outperform' with a price target of C$165.00.\"", "\"STIFEL CANADA\":\"Stifel Canada is an analyst firm that maintains CGI Inc at 'buy' with a price target of C$166.00.\"", "\"CIBC\":\"CIBC is an analyst firm that maintains CGI Inc at 'outperformer' with a price target of C$155.00.\"", "\"NATIONAL BANK FINANCIAL\":\"National Bank Financial is an analyst firm that maintains CGI Inc at 'outperform' with a price target of Cdn$175.00.\"", "\"TORONTO\":\"Toronto is a location mentioned in the text, specifically in relation to the stock market.\"", "\"S&P/TSX\":\"S&P/TSX is an organization mentioned in the text, specifically in relation to the stock market.\"", "\"APR 05, 2022 20:25\":\"Apr 05, 2022 20:25 is a specific date and time mentioned in the text.\"", "\"APR 29, 2021 19:25\":\"Apr 29, 2021 19:25 is a specific date and time mentioned in the text.\"", "\"JAN 29, 2020 21:25\":\"Jan 29, 2020 21:25 is a specific date and time mentioned in the text.\"", "\"TRADING PURPOSES\":\"Trading purposes refer to the act of buying and selling financial instruments with the goal of making a profit.\"", "\"DATA\":\"Data refers to facts, statistics, or information that can be used for analysis or reference.\"", "\"INFORMATION\":\"Information refers to knowledge or data that is communicated or received concerning a particular fact or circumstance.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"CHANGE OF GOVERNMENT\":\"Change of government is mentioned as a significant event that led to changes in access to free health care services, indicating the influence of political shifts on healthcare policy.\"", "\"PERMANENT VISAS\":\"Permanent visas are mentioned as a requirement for accessing health care services in New Zealand, indicating their role in determining eligibility for healthcare.\"", "\"NEW ZEALAND CITIZENS\":\"New Zealand citizens are mentioned as eligible for health care services after enrolling in a program and confirming their identity, indicating their role in accessing healthcare.\"", "\"FORMAL AGREEMENTS\":\"Formal agreements are mentioned as a means of providing restricted access to health care services for citizens of certain other countries, indicating the role of international agreements in healthcare.\"", "\"BRAZIL\":\"Brazil is a country located in South America. It is mentioned as a country with a constitution that defines health as a universal right and a state responsibility, indicating the country's healthcare policies and principles.\"", "\"SUS\":\"SUS (Sistema \u00danico de Sa\u00fade) is mentioned as the Brazilian health system, indicating its role in providing comprehensive health care at all levels of complexity.\"", "\"DECENTRALIZATION\":\"Decentralization is mentioned as a principle of the Brazilian health system, indicating the distribution of responsibilities among different levels of government.\"", "\"FEDERAL\":\"Federal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"STATE\":\"State government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"MUNICIPAL\":\"Municipal government is mentioned as one of the levels of government responsible for health care in Brazil, indicating its role in healthcare policy and provision.\"", "\"SOCIAL PARTICIPATION\":\"Social participation is mentioned as a principle of the Brazilian health system, indicating the involvement of the public in decision-making and implementation of health policies.\"", "\"CANADA\":Canada is a country located in North America. It is mentioned as a country with a universal, publicly funded health care system, indicating its healthcare policies and principles.", "\"CANADIAN MEDICARE\":\"Canadian Medicare is mentioned as Canada's universal, publicly funded health care system, indicating its role in providing health care services.\"", "\"PROVINCIAL AND TERRITORIAL (P/T) HEALTH INSURANCE PLAN\":\"Provincial and territorial health insurance plans are mentioned as the entities responsible for providing health care services in Canada, indicating their role in healthcare provision.\"", "\"CHINA\":China is a country located in East Asia. It has achieved universal insurance coverage through public insurance programs, which highlights its healthcare policies and principles.", "\"URBAN EMPLOYEE BASIC MEDICAL INSURANCE\":\"Urban Employee Basic Medical Insurance is mentioned as one of the public insurance programs in China, indicating its role in providing health insurance coverage for urban residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PAKISTAN\":\"Pakistan is mentioned as a country with provinces that have universal healthcare programs, providing coverage for families and individuals.\"", "\"KPK\":\"KPK is mentioned as a province in Pakistan where families can be covered for treatment.\"", "\"PUNJAB\":\"Punjab is mentioned as a province in Pakistan where more than 31 million families can be covered for treatment.\"", "\"PHILIPPINES\":\"Philippines is mentioned as a country where Filipinos are covered under the National Health Insurance Program (NHIP) provided by the Philippine Health Insurance Corporation (PhilHealth).\"", "\"WATSON WYATT\":\"Watson Wyatt is mentioned as a global consulting firm that has analyzed Singapore's healthcare system and its impact on community health outcomes.\"", "\"NORTH KOREA\":\"North Korea is mentioned as a country that claims to provide universal healthcare, but there are claims from defectors that patients must pay for services and that there are disparities in healthcare access.\"", "\"EUROPE\":Europe is a geographical region that includes various countries in the continent of Europe. It is also mentioned as a continent where almost all countries have some form of universal healthcare, with subsidies for citizens who cannot afford health insurance premiums.", "\"ARMENIA\":Armenia is a country with a mandatory social health insurance system, known as the Compulsory Health Insurance Fund, which provides healthcare coverage to the majority of its population.", "\"PHILIPPINE HEALTH INSURANCE CORPORATION\":", "\"NORTH KOREAN DEFECTORS\":", "\"SUBSIDIES\":", "\"COMPULSORY HEALTH INSURANCE FUND\":", "\"AUSTRIA\":\"Austria is a country with universal healthcare, where residents and individuals from other EU countries receive publicly funded care.\"\"Austria has a two-tier payment system for healthcare, with publicly funded care available and the option for additional private care.\"", "\"BELARUS\":\"Belarus is a country with universal healthcare, where residents have access to publicly funded healthcare and social security services.\"", "\"CROATIA\":\"Croatia is a country with universal healthcare, providing medical care to all residents.\"\"Croatia has a universal healthcare system that ensures medical care for all residents.\"", "\"CZECH REPUBLIC\":\"Czech Republic is a country with universal healthcare, ensuring access to healthcare services for all residents.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"HEALTHCARE REFORMS\":", "\"REPEAL\":", "\"EXPANSION\":", "\"PREMIUM SUPPORT PROGRAM\":", "\"POPULATION HEALTH\":", "\"POLICY REFORMS\":", "\"CIRCUMSTANCES\":", "\"BOSTON UNIVERSITY SCHOOL OF PUBLIC HEALTH\":The Boston University School of Public Health is an educational institution.", "\"BOSTON COMMISSIONER OF HEALTH AND HOSPITALS\":\"The Boston Commissioner of Health and Hospitals is a position held by the person who served from 1975 to 1983.\"", "\"THE PRECARIOUS ACT\":\"The Precarious Act is described as being up for a final vote, indicating a significant decision or outcome.\"", "\"SURPRISE BILLING\":\"Surprise Billing is described as a window into the U.S. Health Care System, suggesting a problem or issue that needs to be addressed.\"", "\"PRESCRIPTION DRUG AFFORDABILITY\":\"Prescription Drug Affordability is described as a topic of concern, indicating a need for action or change.\"", "\"PATH TO SCHOOLS\":\"Path to Schools is described as a resource for legal education, suggesting a process or journey.\"", "\"LAW SCHOOL ACCREDITATION\":\"Law School Accreditation is described as a process or standard for evaluating legal education.\"", "\"BAR LEADERSHIP\":\"Bar Leadership refers to individuals or groups who hold leadership positions within the legal profession.\"", "\"LEGAL RESOURCES FOR THE PUBLIC\":\"Legal Resources for the Public are described as resources or information available to the general public.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"PERPETRATORS OF SPAM OR ABUSE WILL BE DELETED FROM THE SITE AND PROHIBITED FROM FUTURE RE\":\"Perpetrators of spam or abuse will be deleted from the site and prohibited from future re refers to the consequences for individuals who engage in spamming or abusive behavior in a conversation or discussion.\"", "\"THOUGHTS ABOUT CGI\":\"thoughts about CGI refers to a request for opinions or comments about CGI, possibly related to the organization mentioned earlier.\"", "\"ARE YOU SURE YOU WANT TO DELETE THIS CHART?\":\"Are you sure you want to delete this chart? refers to a confirmation message asking for confirmation before deleting a chart or visual.\"", "\"DELETE\":\"Delete refers to the action of removing or erasing something, such as a chart or visual.\"", "\"CANCEL\":\"Cancel refers to the action of stopping or aborting a process or action, such as canceling the replacement of a chart.\"\"Cancel refers to the action of stopping or aborting a process or action, such as deleting a chart or visual.\"", "\"POST\":\"Post refers to the action of submitting or publishing a comment or message.\"", "\"POST ALSO TO\":\"Post also to refers to the option of sharing a comment or message on multiple platforms or channels.\"", "\"REPLACE THE ATTACHED CHART WITH A NEW CHART ?\":\"Replace the attached chart with a new chart ? refers to a confirmation message asking for confirmation before replacing an existing chart with a new one.\"", "\"REPLACE\":\"Replace refers to the action of substituting or exchanging something with another, such as replacing an existing chart with a new one.\"", "\"THANKS FOR YOUR COMMENT. PLEASE NOTE THAT ALL COMMENTS ARE PENDING UNTIL APPROVED BY OUR MODERATORS. IT MAY THEREFORE TAKE SOME TIME BEFORE IT APPEARS ON OU\":\"Thanks for your comment. Please note that all comments are pending until approved by our moderators. It may therefore take some time before it appears on ou refers to a message acknowledging the submission of a comment and informing the user that it will be reviewed and approved by moderators before being displayed.\"", "\"COMMENT HAS ALREADY BEEN SAVED IN YOUR #SAVED ITEMS#\":\"comment has already been saved in your #Saved Items# refers to a message indicating that a comment has been successfully saved or bookmarked by the user.\"", "\"AUTHOR'S RESPONSE\":\"Author's response refers to a comment or reply made by the author or creator of a post or article in response(\"entity\"", "\"INVESTING.COM\":Investing.com is a website that provides financial data, information, and analysis for trading purposes. It offers market insights and information on various financial markets, including stock prices. Investing.com is also mentioned in the text as the source of the information.", "\"NYSE\":\"NYSE is the largest stock exchange in the world by market capitalization.\"", "\"S&P 500\":\"The S&P 500 is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\"", "\"DOW JONES INDUSTRIAL AVERAGE\":\"The Dow Jones Industrial Average is a stock market index that measures the stock performance of 30 large companies listed on stock exchanges in the United States.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"COMMISSION\":\"Commission refers to a fee or charge paid to a broker or financial institution for executing a trade or providing a service.\"", "\"CREATE NEW WATCHLIST\":\"Create New Watchlist refers to the action of creating a new watchlist for monitoring and tracking stocks or investments.\"", "\"CREATE\":\"Create refers to the action of making or generating something new, such as a watchlist or portfolio.\"", "\"CGI\":CGI is a company involved in trading the financial markets and providing information on stock prices and dividends. Additionally, CGI is an organization related to computer software and IT services.", "\"423\":\"423 is a numerical value related to stock prices or market data.\"", "\"ANALYSIS\":\"Analysis is an event related to the examination and evaluation of data or information.\"", "\"NEWS\":\"News is an event related to the release or dissemination of new information or updates.\"", "\"ANALYSIS & OPINION\":\"Analysis & Opinion is an event related to the presentation and discussion of analysis and opinions on financial topics.\"", "\"FINANCIALS\":\"Financials is an event related to the financial statements and performance of a company or organization.\"", "\"FORUM\":\"Forum is an event related to online discussions and conversations on trading and investing topics.\"", "\"DISCUSSIONS\":\"Discussions is an event related to online conversations and exchanges of ideas on trading and investing topics.\"", "\"RECENT SENTIMENTS\":\"Recent Sentiments is an event related to the analysis and tracking of recent market sentiments or opinions.\"", "\"USER RANKINGS\":\"User Rankings is an event related to the ranking and evaluation of users based on their contributions and activities.\"", "\"FINANCIAL SUMMARY\":\"Financial Summary is an event related to the concise overview of a company's financial performance and position.\"", "\"INCOME STATEMENT\":\"Income Statement is an event related to the financial statement that shows a company's revenues, expenses, and profits over a specific period of time.\"", "\"BALANCE SHEET\":\"Balance Sheet is an event related to the financial statement that shows a company's assets, liabilities, and shareholders' equity at a specific point in time.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"NATIONAL HEALTH INSURANCE PROGRAM\":", "\"GOVERNMENT ROLE IN PROVIDING FOR THE POPULATION'S HEALTH CARE NEEDS\":", "\"NATIONAL INSURANCE SCHEME\":", "\"HEALTH CARE FINANCING SYSTEM\":", "\"HEALTH CARE SERVICES\":", "\"HEALTH INSURANCE SYSTEM\":", "\"NATIONAL HEALTH INSURANCE SYSTEM\":", "\"NHI\":\"NHI refers to Taiwan's National Health Insurance system, which provides medical and health care services to all citizens and foreigners residing in Taiwan.\"", "\"REINHARDT\":\"Reinhardt made recommendations for Taiwan's NHI system based on principles of equity, cost control, and administrative efficiency.\"", "\"EQUITY\":\"Equity refers to fairness and equal access to health care services, a principle that guided the development of Taiwan's NHI system.\"", "\"COST CONTROL\":\"Cost control refers to measures taken to manage and regulate the expenses associated with health care services, a principle considered in the development of Taiwan's NHI system.\"", "\"ADMINISTRATIVE EFFICIENCY\":\"Administrative efficiency refers to the effectiveness and smooth operation of administrative processes, a principle considered in the development of Taiwan's NHI system.\"", "\"EMPLOYER-SPONSORED HEALTH INSURANCE\":\"Employer-sponsored health insurance is a form of coverage provided by employers to their employees, which was gradually made mandatory in Taiwan.\"", "\"MEDICARE\":MEDICARE is a public insurance program in the United States that provides coverage for individuals aged 65 and older, as well as certain individuals with disabilities. It is also an organization that pays hospitals and providers for medical care. There may be potential changes for MEDICARE to become a premium support program in the future.", "\"MEDICAID\":MEDICAID is a public insurance program in the United States that provides coverage for low-income individuals and certain groups, such as pregnant women and children. It is also an organization that may be expanded to all states in a noncoercive way. Additionally, MEDICAID is an organization that redistributes wealth through tax money to pay for healthcare expenses.", "\"CHILDREN\u2019S HEALTH INSURANCE PROGRAM\":\"The Children\u2019s Health Insurance Program (CHIP) is a program in the United States that provides coverage for children from low-income families.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"JUL 08, 2009\":\"Jul 08, 2009 is a specific date mentioned in the text.\"", "\"15\":\"15 is a numerical value related to dividend payouts or returns.\"", "\"JUL 17, 2009\":\"Jul 17, 2009 is a specific date mentioned in the text.\"", "\"0.76\":\"0.76 is a numerical value related to dividend payouts or returns.\"", "\"ACCESS TO OVER 1000 METRICSWITH INVESTINGPRO\":\"access to over 1000 metricswith InvestingPro refers to the availability of a wide range of financial metrics and analysis tools through the InvestingPro platform.\"", "\"VIEW ALSO THE DIVIDEND PAYMENT DATE AND DIVIDEND YIELD.\":\"View also the dividend payment date and dividend yield refers to the availability of additional information on dividend payment dates and dividend yields for further analysis.\"", "\"COMMENT GUIDELINES\":\"Comment Guidelines refer to a set of rules or guidelines for posting comments and participating in discussions.\"", "\"ENRICH\":\"Enrich refers to the action of enhancing or improving the quality or content of a conversation or discussion.\"", "\"STAY FOCUSED AND ON TRACK.\":\"Stay focused and on track refers to the expectation of staying relevant and on-topic in a conversation or discussion.\"", "\"RACISM, SEXISM AND OTHER FORMS OF DISCRIMINATION WILL NOT BE TOLERATED.\":\"Racism, sexism and other forms of discrimination will not be tolerated refers to the prohibition of discriminatory language or behavior in a conversation or discussion.\"", "\"USE STANDARD WRITING STYLE.\":\"Use standard writing style refers to the expectation of using proper grammar, punctuation, and formatting in written comments.\"", "\"INCLUDE PUNCTUATION AND UPPER AND LOWER CASES.\":\"Include punctuation and upper and lower cases refers to the expectation of using correct punctuation and capitalization in written comments.\"", "\"SELF-PROMOTIONAL MATERIAL OR BUSINESS-RELATED SOLICITATIONS OR PR\":\"self-promotional material or business-related solicitations or PR refers to the prohibition of advertising or promoting personal or business interests in a conversation or discussion.\"", "\"ACCOUNT\":\"account refers to a user account or profile on a website or platform.\"", "\"DOXXING\":\"Doxxing refers to the act of publicly revealing or sharing private or personal information about an individual or organization without their consent.\"", "\"CIVIL INTERACTION\":\"civil interaction refers to respectful and polite communication and behavior in a conversation or discussion.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"THIRD WAY\":\"\\\"Third Way\\\" is an organization that focuses on developing and promoting centrist policies, including health care policy and other issues. They are dedicated to finding common ground and advocating for solutions that bridge the gap between the left and right. Their mission is to promote pragmatic and innovative approaches to address the challenges facing society. Through their work, they aim to shape policy discussions and influence decision-making processes to achieve meaningful and sustainable change.\"", "\"DAVID KENDALL\":\"David Kendall is a Senior Fellow for Health and Fiscal Policy at Third Way.\"", "\"VERMONT\":\"Vermont is a state that attempted to implement a single-payer health care system.\"", "\"COLORADO\":Colorado is a state that has been involved in discussions and initiatives related to healthcare reform. It voted on a single-payer ballot initiative, indicating a potential interest in implementing a new health care system. However, there were concerns over tax increases, which led to the unsuccessful implementation of single-payer proposals. This suggests that Colorado plays a significant role in the ongoing healthcare reform efforts. The proposed changes in the healthcare system could have implications for businesses and workers in the state.", "\"MASSACHUSETTS\":\"Massachusetts is a state that took a different approach toward single-payer health care.\"", "\"SINGLE-PAYER HEALTH CARE: A TALE OF 3 STATES\":\"Single-Payer Health Care: A Tale of 3 States is the title of the article, which discusses the experiences of Vermont, Colorado, and Massachusetts with single-payer health care.\"", "\"STOCK EXCHANGE\":\"A stock exchange is a regulated marketplace where securities, such as stocks and bonds, are bought and sold.\"", "\"STOCK INDEX\":\"A stock index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"STOCK BROKER\":\"A stock broker is a professional who buys and sells stocks and other securities on behalf of clients.\"", "\"STOCK PORTFOLIO\":\"A stock portfolio is a collection of stocks and other investments held by an individual or entity.\"", "\"STOCK MARKET CRASH\":\"A stock market crash is a sudden and severe drop in the value of stocks, resulting in a significant loss of investor wealth.\"", "\"STOCK OPTION\":\"A stock option is a contract that gives the holder the right to buy or sell a specific number of shares of a stock at a predetermined price.\"", "\"STOCK ANALYST\":\"A stock analyst is a financial professional who evaluates and provides recommendations on stocks and other investments.\"", "\"STOCK CHART\":\"A stock chart is a graphical representation of the price movement of a stock over a specific period of time.\"", "\"STOCK MARKET INDEX\":\"A stock market index is a measurement of the value of a section of the stock market. It is calculated from the prices of selected stocks.\"", "\"AMENDMENT 69\":\"Amendment 69 is a proposal for a new health care system in Colorado, which faced opposition from various organizations.\""]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": ["\"WEBINARS\":\"Webinars are online seminars or presentations on trading and investing topics.\"", "\"TRADING GUIDE\":\"Trading Guide is a comprehensive guide or resource for trading and investing strategies and techniques.\"", "\"CONFERENCES\":\"Conferences are events where industry professionals gather to discuss and present on trading and investing topics.\"", "\"MORE ALERTS\":\"More Alerts is an event related to the release of additional alerts or notifications.\"", "\"MARKET\":\"Market is an event related to the overall financial market and its activities.\"", "\"WORLD ADRS\":\"World ADRs is an event related to American Depositary Receipts (ADRs) traded globally.\"", "\"STOCK BROKERS\":\"Stock Brokers are organizations or individuals involved in buying and selling stocks on behalf of clients.\"", "\"ASIA/PACIFIC\":\"Asia/Pacific is a geographical region that includes various countries in Asia and the Pacific.\"", "\"TOP GAINERS\":\"Top Gainers is an event related to stocks that have experienced the highest price increases.\"", "\"MOST ACTIVE\":\"Most Active is an event related to stocks that have the highest trading volume.\"", "\"REVEAL\":\"Reveal is an event related to the disclosure or announcement of information.\"", "\"WARREN BUFFETT'S\":\"Warren Buffett is a well-known investor and billionaire, known for his successful stock picks.\"", "\"ALERT\":\"Alert is an event related to the release of important notifications or updates.\"", "\"WEBSITE\":A website, also known as an online platform or portal, is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. It serves as a platform where information and services are provided.", "\"MOBILE APP\":\"Mobile App refers to a software application designed for use on mobile devices.\"", "\"LOSES\":\"Loses is an event related to financial losses or declines in stock prices.\""]}}
{"type": "error", "data": "Error executing verb \"text_embed\" in create_final_entities: Request timed out.", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 415, in _execute_verb\n    result = await result\n             ^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\text_embed.py\", line 105, in text_embed\n    return await _text_embed_in_memory(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\text_embed.py\", line 130, in _text_embed_in_memory\n    result = await strategy_exec(texts, callbacks, cache, strategy_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 62, in run\n    embeddings = await _execute(llm, text_batches, ticker, semaphore)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 106, in _execute\n    results = await asyncio.gather(*futures)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\tasks.py\", line 349, in __wakeup\n    future.result()\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\tasks.py\", line 277, in __step\n    result = coro.send(None)\n             ^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 100, in embed\n    chunk_embeddings = await llm(chunk)\n                       ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 165, in execute_with_retry\n    return await do_attempt(), start\n           ^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 147, in do_attempt\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 49, in __call__\n    return await self._invoke(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": null}
{"type": "error", "data": "Error running pipeline!", "stack": "Traceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1558, in _request\n    response = await self._client.send(\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\run.py\", line 323, in run_pipeline\n    result = await workflow.run(context, callbacks)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 369, in run\n    timing = await self._execute_verb(node, context, callbacks)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\datashaper\\workflow\\workflow.py\", line 415, in _execute_verb\n    result = await result\n             ^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\text_embed.py\", line 105, in text_embed\n    return await _text_embed_in_memory(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\text_embed.py\", line 130, in _text_embed_in_memory\n    result = await strategy_exec(texts, callbacks, cache, strategy_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 62, in run\n    embeddings = await _execute(llm, text_batches, ticker, semaphore)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 106, in _execute\n    results = await asyncio.gather(*futures)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\tasks.py\", line 349, in __wakeup\n    future.result()\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\tasks.py\", line 277, in __step\n    result = coro.send(None)\n             ^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\index\\verbs\\text\\embed\\strategies\\openai.py\", line 100, in embed\n    chunk_embeddings = await llm(chunk)\n                       ^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\caching_llm.py\", line 104, in __call__\n    result = await self._delegate(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\asyncio\\__init__.py\", line 153, in iter\n    result = await action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\tenacity\\__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 165, in execute_with_retry\n    return await do_attempt(), start\n           ^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\rate_limiting_llm.py\", line 147, in do_attempt\n    return await self._delegate(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 49, in __call__\n    return await self._invoke(input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\base\\base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\graphrag\\llm\\openai\\openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\resources\\embeddings.py\", line 215, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1826, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1519, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\GraphRAG-test\\graphragvenv\\Lib\\site-packages\\openai\\_base_client.py\", line 1577, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": null}
